{"test_accuracies": {"2d_5.000_4.000": [0.8655626157002051, 0.8655125831790664, 0.8620103066993546], "2d_5.000_5.000": [0.8841246810426777, 0.8834242257467354, 0.8818231850702957], "2d_5.000_6.000": [0.8399459648771702, 0.8450993145544604, 0.8389953469755341], "2d_5.000_7.000": [0.8352429078901286, 0.8372442087356782, 0.8389453144543954], "2d_5.000_8.000": [0.64972231950768, 0.6217230338202921, 0.6560436261757054], "2d_5.000_9.000": [0.6783409215990394, 0.6822934907689998, 0.6788412468104268], "2d_5.000_10.000": [0.25521589032871367, 0.25521589032871367, 0.25521589032871367], "2d_6.000_0.000": [0.5493570821033672, 0.5453044478911292, 0.5557612448091259], "2d_6.000_1.000": [0.67513884024616, 0.667834092159904, 0.660879571721619], "2d_6.000_2.000": [0.6002901886226047, 0.600440286186021, 0.5903837494371341], "2d_6.000_3.000": [0.6283084004602992, 0.6233051483464251, 0.6253064491919748], "2d_6.000_4.000": [0.7436833942062341, 0.7510882073347676, 0.7414319307549907], "2d_6.000_5.000": [0.9553709911442437, 0.960324210736979, 0.9542202431580528], "2d_6.000_6.000": [0.9333066493220593, 0.9307049582228448, 0.9286536248561565]}, "train_accuracies": {"2d_5.000_4.000": 0.8492825627326965, "2d_5.000_5.000": 0.9136521816253662, "2d_5.000_6.000": 0.8734983205795288, "2d_5.000_7.000": 0.8707187175750732, "2d_5.000_8.000": 0.6825118064880371, "2d_5.000_9.000": 0.6699687838554382, "2d_5.000_10.000": 0.2511048913002014, "2d_6.000_0.000": 0.6209119558334351, "2d_6.000_1.000": 0.6771429181098938, "2d_6.000_2.000": 0.6441465020179749, "2d_6.000_3.000": 0.6502838134765625, "2d_6.000_4.000": 0.7374682426452637, "2d_6.000_5.000": 0.9626396298408508, "2d_6.000_6.000": 0.9404640793800354}, "validation_accuracies": {"2d_5.000_4.000": 0.8641116619110107, "2d_5.000_5.000": 0.8972832560539246, "2d_5.000_6.000": 0.8581077456474304, "2d_5.000_7.000": 0.8490018248558044, "2d_5.000_8.000": 0.6511732339859009, "2d_5.000_9.000": 0.6782909035682678, "2d_5.000_10.000": 0.2529143989086151, "2d_6.000_0.000": 0.5455546379089355, "2d_6.000_1.000": 0.6741381883621216, "2d_6.000_2.000": 0.6005403399467468, "2d_6.000_3.000": 0.6330114603042603, "2d_6.000_4.000": 0.7465853095054626, "2d_6.000_5.000": 0.9612247943878174, "2d_6.000_6.000": 0.9427627921104431}, "GIT_SHA1_ONSAVING": "879dd7a5ba651e1c6727bdd9add7f5551ae6de95", "GIT_DIFF_ONSAVING": ["paper/AB_ATTACK.ipynb\n=======================================================\nlhs: 100644 | d2746f4169facf94e8d7593d1b0e5d731799d604\nrhs: 100644 | 3a5795a1922246b8ab05bb647a7ccc01bd72d127\n---@@ -237,12 +237,10 @@\n     \"    return processed_training_data, processed_training_labels, validation_data, validation_labels\\n\",\n     \"\\n\",\n     \"\\n\",\n-    \"def get_test_data(folder_path, technical_details, force_create_npy_files=False, displacement=0, data_index=0):\\n\",\n+    \"def get_test_data(folder_path, technical_details, displacement=0, data_index=0):\\n\",\n     \"    \\\"\\\"\\\"\\n\",\n     \"    Loads synchronized test data from given folder.\\n\",\n     \"    \\\"\\\"\\\"\\n\",\n-    \"    if force_create_npy_files or not has_npy_files(folder_path):\\n\",\n-    \"        convert_osci_files_to_npy(folder_path)\\n\",\n     \"\\n\",\n     \"    filenames = [filename for filename in os.listdir(folder_path)\\n\",\n     \"                 if os.path.isfile(os.path.join(folder_path, filename))]\\n\",\n@@ -635,7 +633,7 @@\n    },\n    \"outputs\": [],\n    \"source\": [\n-    \"data_directory=\\\"/project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/AirbusABShielding\\\"\\n\",\n+    \"data_directory=\\\"/project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev1AntennaAB4m/\\\"\\n\",\n     \"# data_directory=\\\"/project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/Test_AB2\\\"\\n\",\n     \"# data_directory=\\\"C:/Users/marku/PycharmProjects/LMU/emissionsecurity/paper/Data2D/Test_AB\\\"\\n\",\n     \"\\n\",\n@@ -650,7 +648,7 @@\n     \"}\\n\",\n     \"\\n\",\n     \"machine_learning_settings = {\\n\",\n-    \"    \\\"training_EPOCHS\\\": 1,\\n\",\n+    \"    \\\"training_EPOCHS\\\": 5,\\n\",\n     \"    \\\"stop_at_val_acc\\\": 0.99,\\n\",\n     \"}\"\n    ]\n@@ -668,260 +666,135 @@\n      \"name\": \"stdout\",\n      \"output_type\": \"stream\",\n      \"text\": [\n-      \"Evaluating datasets: ['AboveFPGA_Height_DirectlyAboveShielding', 'HoleOppositeUSB', 'HoleUSBSide']\\n\",\n-      \"Prepared validation data with size (3982, 10000)\\n\",\n-      \"Prepared training data with size (75624, 10000)\\n\"\n+      \"Evaluating datasets: ['NoShielding4m', 'WithShielding4m']\\n\"\n      ]\n     },\n     {\n      \"name\": \"stderr\",\n      \"output_type\": \"stream\",\n      \"text\": [\n-      \"2022-06-26 19:10:59.927443: I tensorflow/core/platform/cpu_feature_guard.cc:142] This TensorFlow binary is optimized with oneAPI Deep Neural Network Library (oneDNN) to use the following CPU instructions in performance-critical operations:  SSE4.1 SSE4.2 AVX AVX2 FMA\\n\",\n-      \"To enable them in other operations, rebuild TensorFlow with the appropriate compiler flags.\\n\",\n-      \"2022-06-26 19:11:00.361837: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1510] Created device /job:localhost/replica:0/task:0/device:GPU:0 with 43644 MB memory:  -> device: 0, name: NVIDIA A40, pci bus id: 0000:81:00.0, compute capability: 8.6\\n\"\n+      \"/tmp/ipykernel_113/2422220352.py:35: UserWarning: This function is deprecated. Use `load_cached_data_file` on individual files!\\n\",\n+      \"  warnings.warn(\\\"This function is deprecated. Use `load_cached_data_file` on individual files!\\\")\\n\"\n      ]\n     },\n     {\n      \"name\": \"stdout\",\n      \"output_type\": \"stream\",\n      \"text\": [\n-      \"Model: \\\"sequential\\\"\\n\",\n-      \"_________________________________________________________________\\n\",\n-      \"Layer (type)                 Output Shape              Param #   \\n\",\n-      \"=================================================================\\n\",\n-      \"reshape (Reshape)            (None, 10000, 1)          0         \\n\",\n-      \"_________________________________________________________________\\n\",\n-      \"gaussian_noise (GaussianNois (None, 10000, 1)          0         \\n\",\n-      \"_________________________________________________________________\\n\",\n-      \"conv1d (Conv1D)              (None, 10000, 13)         52        \\n\",\n-      \"_________________________________________________________________\\n\",\n-      \"max_pooling1d (MaxPooling1D) (None, 5000, 13)          0         \\n\",\n-      \"_________________________________________________________________\\n\",\n-      \"spatial_dropout1d (SpatialDr (None, 5000, 13)          0         \\n\",\n-      \"_________________________________________________________________\\n\",\n-      \"batch_normalization (BatchNo (None, 5000, 13)          52        \\n\",\n-      \"_________________________________________________________________\\n\",\n-      \"conv1d_1 (Conv1D)            (None, 5000, 118)         23128     \\n\",\n-      \"_________________________________________________________________\\n\",\n-      \"max_pooling1d_1 (MaxPooling1 (None, 5000, 118)         0         \\n\",\n-      \"_________________________________________________________________\\n\",\n-      \"spatial_dropout1d_1 (Spatial (None, 5000, 118)         0         \\n\",\n-      \"_________________________________________________________________\\n\",\n-      \"batch_normalization_1 (Batch (None, 5000, 118)         472       \\n\",\n-      \"_________________________________________________________________\\n\",\n-      \"conv1d_2 (Conv1D)            (None, 5000, 100)         59100     \\n\",\n-      \"_________________________________________________________________\\n\",\n-      \"max_pooling1d_2 (MaxPooling1 (None, 1250, 100)         0         \\n\",\n-      \"_________________________________________________________________\\n\",\n-      \"batch_normalization_2 (Batch (None, 1250, 100)         400       \\n\",\n-      \"_________________________________________________________________\\n\",\n-      \"spatial_dropout1d_2 (Spatial (None, 1250, 100)         0         \\n\",\n-      \"_________________________________________________________________\\n\",\n-      \"flatten (Flatten)            (None, 125000)            0         \\n\",\n-      \"_________________________________________________________________\\n\",\n-      \"dense (Dense)                (None, 128)               16000128  \\n\",\n-      \"_________________________________________________________________\\n\",\n-      \"dense_1 (Dense)              (None, 2)                 258       \\n\",\n-      \"=================================================================\\n\",\n-      \"Total params: 16,083,590\\n\",\n-      \"Trainable params: 16,083,128\\n\",\n-      \"Non-trainable params: 462\\n\",\n-      \"_________________________________________________________________\\n\"\n+      \"Failed to convert csv file train_28_A.txt and save to Numpy file. Error: [Errno 13] Permission denied: '/project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev1AntennaAB4m/NoShielding4m/train_28_A_numpy.npy'\\n\",\n+      \"Failed to convert csv file test_7_A.txt and save to Numpy file. Error: [Errno 13] Permission denied: '/project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev1AntennaAB4m/NoShielding4m/test_7_A_numpy.npy'\\n\",\n+      \"Failed to convert csv file train_23_B.txt and save to Numpy file. Error: [Errno 13] Permission denied: '/project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev1AntennaAB4m/NoShielding4m/train_23_B_numpy.npy'\\n\",\n+      \"Failed to convert csv file test_14_B.txt and save to Numpy file. Error: [Errno 13] Permission denied: '/project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev1AntennaAB4m/NoShielding4m/test_14_B_numpy.npy'\\n\",\n+      \"Failed to convert csv file test_18_B.txt and save to Numpy file. Error: [Errno 13] Permission denied: '/project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev1AntennaAB4m/NoShielding4m/test_18_B_numpy.npy'\\n\",\n+      \"Failed to convert csv file test_0_B.txt and save to Numpy file. Error: [Errno 13] Permission denied: '/project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev1AntennaAB4m/NoShielding4m/test_0_B_numpy.npy'\\n\",\n+      \"Failed to convert csv file test_13_A.txt and save to Numpy file. Error: [Errno 13] Permission denied: '/project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev1AntennaAB4m/NoShielding4m/test_13_A_numpy.npy'\\n\",\n+      \"Failed to convert csv file train_24_A.txt and save to Numpy file. Error: [Errno 13] Permission denied: '/project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev1AntennaAB4m/NoShielding4m/train_24_A_numpy.npy'\\n\",\n+      \"Failed to convert csv file all_same_labels_B.txt and save to Numpy file. Error: Given file /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev1AntennaAB4m/NoShielding4m/all_same_labels_B.txt is not a csv file measured by Lecroy Oscilloscope.\\n\",\n+      \"Failed to convert csv file train_4_A.txt and save to Numpy file. Error: [Errno 13] Permission denied: '/project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev1AntennaAB4m/NoShielding4m/train_4_A_numpy.npy'\\n\",\n+      \"Failed to convert csv file train_14_B.txt and save to Numpy file. Error: [Errno 13] Permission denied: '/project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev1AntennaAB4m/NoShielding4m/train_14_B_numpy.npy'\\n\",\n+      \"Failed to convert csv file train_8_A.txt and save to Numpy file. Error: [Errno 13] Permission denied: '/project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev1AntennaAB4m/NoShielding4m/train_8_A_numpy.npy'\\n\",\n+      \"Failed to convert csv file train_18_B.txt and save to Numpy file. Error: [Errno 13] Permission denied: '/project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev1AntennaAB4m/NoShielding4m/train_18_B_numpy.npy'\\n\",\n+      \"Failed to convert csv file train_3_B.txt and save to Numpy file. Error: [Errno 13] Permission denied: '/project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev1AntennaAB4m/NoShielding4m/train_3_B_numpy.npy'\\n\",\n+      \"Failed to convert csv file train_13_A.txt and save to Numpy file. Error: [Errno 13] Permission denied: '/project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev1AntennaAB4m/NoShielding4m/train_13_A_numpy.npy'\\n\",\n+      \"Failed to convert csv file train_29_A.txt and save to Numpy file. Error: [Errno 13] Permission denied: '/project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev1AntennaAB4m/NoShielding4m/train_29_A_numpy.npy'\\n\",\n+      \"Failed to convert csv file test_6_A.txt and save to Numpy file. Error: [Errno 13] Permission denied: '/project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev1AntennaAB4m/NoShielding4m/test_6_A_numpy.npy'\\n\",\n+      \"Failed to convert csv file test_15_B.txt and save to Numpy file. Error: [Errno 13] Permission denied: '/project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev1AntennaAB4m/NoShielding4m/test_15_B_numpy.npy'\\n\",\n+      \"Failed to convert csv file train_22_B.txt and save to Numpy file. Error: [Errno 13] Permission denied: '/project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev1AntennaAB4m/NoShielding4m/train_22_B_numpy.npy'\\n\",\n+      \"Failed to convert csv file test_19_B.txt and save to Numpy file. Error: [Errno 13] Permission denied: '/project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev1AntennaAB4m/NoShielding4m/test_19_B_numpy.npy'\\n\",\n+      \"Failed to convert csv file test_1_B.txt and save to Numpy file. Error: [Errno 13] Permission denied: '/project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev1AntennaAB4m/NoShielding4m/test_1_B_numpy.npy'\\n\",\n+      \"Failed to convert csv file train_25_A.txt and save to Numpy file. Error: [Errno 13] Permission denied: '/project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev1AntennaAB4m/NoShielding4m/train_25_A_numpy.npy'\\n\",\n+      \"Failed to convert csv file test_12_A.txt and save to Numpy file. Error: [Errno 13] Permission denied: '/project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev1AntennaAB4m/NoShielding4m/test_12_A_numpy.npy'\\n\",\n+      \"Failed to convert csv file train_5_A.txt and save to Numpy file. Error: [Errno 13] Permission denied: '/project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev1AntennaAB4m/NoShielding4m/train_5_A_numpy.npy'\\n\",\n+      \"Failed to convert csv file train_15_B.txt and save to Numpy file. Error: [Errno 13] Permission denied: '/project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev1AntennaAB4m/NoShielding4m/train_15_B_numpy.npy'\\n\",\n+      \"Failed to convert csv file train_9_A.txt and save to Numpy file. Error: [Errno 13] Permission denied: '/project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev1AntennaAB4m/NoShielding4m/train_9_A_numpy.npy'\\n\",\n+      \"Failed to convert csv file train_19_B.txt and save to Numpy file. Error: [Errno 13] Permission denied: '/project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev1AntennaAB4m/NoShielding4m/train_19_B_numpy.npy'\\n\",\n+      \"Failed to convert csv file train_2_B.txt and save to Numpy file. Error: [Errno 13] Permission denied: '/project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev1AntennaAB4m/NoShielding4m/train_2_B_numpy.npy'\\n\",\n+      \"Failed to convert csv file train_12_A.txt and save to Numpy file. Error: [Errno 13] Permission denied: '/project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev1AntennaAB4m/NoShielding4m/train_12_A_numpy.npy'\\n\",\n+      \"Failed to convert csv file test_16_B.txt and save to Numpy file. Error: [Errno 13] Permission denied: '/project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev1AntennaAB4m/NoShielding4m/test_16_B_numpy.npy'\\n\",\n+      \"Failed to convert csv file train_21_B.txt and save to Numpy file. Error: [Errno 13] Permission denied: '/project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev1AntennaAB4m/NoShielding4m/train_21_B_numpy.npy'\\n\",\n+      \"Failed to convert csv file test_5_A.txt and save to Numpy file. Error: [Errno 13] Permission denied: '/project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev1AntennaAB4m/NoShielding4m/test_5_A_numpy.npy'\\n\",\n+      \"Failed to convert csv file test_9_A.txt and save to Numpy file. Error: [Errno 13] Permission denied: '/project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev1AntennaAB4m/NoShielding4m/test_9_A_numpy.npy'\\n\",\n+      \"Failed to convert csv file train_26_A.txt and save to Numpy file. Error: [Errno 13] Permission denied: '/project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev1AntennaAB4m/NoShielding4m/train_26_A_numpy.npy'\\n\",\n+      \"Failed to convert csv file test_11_A.txt and save to Numpy file. Error: [Errno 13] Permission denied: '/project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev1AntennaAB4m/NoShielding4m/test_11_A_numpy.npy'\\n\",\n+      \"Failed to convert csv file test_2_B.txt and save to Numpy file. Error: [Errno 13] Permission denied: '/project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev1AntennaAB4m/NoShielding4m/test_2_B_numpy.npy'\\n\",\n+      \"Failed to convert csv file train_16_B.txt and save to Numpy file. Error: [Errno 13] Permission denied: '/project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev1AntennaAB4m/NoShielding4m/train_16_B_numpy.npy'\\n\",\n+      \"Failed to convert csv file train_6_A.txt and save to Numpy file. Error: [Errno 13] Permission denied: '/project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev1AntennaAB4m/NoShielding4m/train_6_A_numpy.npy'\\n\",\n+      \"Failed to convert csv file train_11_A.txt and save to Numpy file. Error: [Errno 13] Permission denied: '/project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev1AntennaAB4m/NoShielding4m/train_11_A_numpy.npy'\\n\",\n+      \"Failed to convert csv file train_1_B.txt and save to Numpy file. Error: [Errno 13] Permission denied: '/project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev1AntennaAB4m/NoShielding4m/train_1_B_numpy.npy'\\n\",\n+      \"Failed to convert csv file train_20_B.txt and save to Numpy file. Error: [Errno 13] Permission denied: '/project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev1AntennaAB4m/NoShielding4m/train_20_B_numpy.npy'\\n\",\n+      \"Failed to convert csv file test_17_B.txt and save to Numpy file. Error: [Errno 13] Permission denied: '/project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev1AntennaAB4m/NoShielding4m/test_17_B_numpy.npy'\\n\",\n+      \"Failed to convert csv file test_4_A.txt and save to Numpy file. Error: [Errno 13] Permission denied: '/project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev1AntennaAB4m/NoShielding4m/test_4_A_numpy.npy'\\n\",\n+      \"Failed to convert csv file test_8_A.txt and save to Numpy file. Error: [Errno 13] Permission denied: '/project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev1AntennaAB4m/NoShielding4m/test_8_A_numpy.npy'\\n\",\n+      \"Failed to convert csv file test_10_A.txt and save to Numpy file. Error: [Errno 13] Permission denied: '/project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev1AntennaAB4m/NoShielding4m/test_10_A_numpy.npy'\\n\",\n+      \"Failed to convert csv file train_27_A.txt and save to Numpy file. Error: [Errno 13] Permission denied: '/project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev1AntennaAB4m/NoShielding4m/train_27_A_numpy.npy'\\n\",\n+      \"Failed to convert csv file test_3_B.txt and save to Numpy file. Error: [Errno 13] Permission denied: '/project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev1AntennaAB4m/NoShielding4m/test_3_B_numpy.npy'\\n\",\n+      \"Failed to convert csv file train_17_B.txt and save to Numpy file. Error: [Errno 13] Permission denied: '/project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev1AntennaAB4m/NoShielding4m/train_17_B_numpy.npy'\\n\",\n+      \"Failed to convert csv file train_7_A.txt and save to Numpy file. Error: [Errno 13] Permission denied: '/project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev1AntennaAB4m/NoShielding4m/train_7_A_numpy.npy'\\n\",\n+      \"Failed to convert csv file train_10_A.txt and save to Numpy file. Error: [Errno 13] Permission denied: '/project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev1AntennaAB4m/NoShielding4m/train_10_A_numpy.npy'\\n\",\n+      \"Failed to convert csv file train_0_B.txt and save to Numpy file. Error: [Errno 13] Permission denied: '/project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev1AntennaAB4m/NoShielding4m/train_0_B_numpy.npy'\\n\",\n+      \"Failed to convert csv file test_4_B.txt and save to Numpy file. Error: [Errno 13] Permission denied: '/project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev1AntennaAB4m/NoShielding4m/test_4_B_numpy.npy'\\n\",\n+      \"Failed to convert csv file train_20_A.txt and save to Numpy file. Error: [Errno 13] Permission denied: '/project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev1AntennaAB4m/NoShielding4m/train_20_A_numpy.npy'\\n\",\n+      \"Failed to convert csv file test_17_A.txt and save to Numpy file. Error: [Errno 13] Permission denied: '/project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev1AntennaAB4m/NoShielding4m/test_17_A_numpy.npy'\\n\",\n+      \"Failed to convert csv file test_3_A.txt and save to Numpy file. Error: [Errno 13] Permission denied: '/project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev1AntennaAB4m/NoShielding4m/test_3_A_numpy.npy'\\n\",\n+      \"Failed to convert csv file test_8_B.txt and save to Numpy file. Error: [Errno 13] Permission denied: '/project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev1AntennaAB4m/NoShielding4m/test_8_B_numpy.npy'\\n\",\n+      \"Failed to convert csv file test_10_B.txt and save to Numpy file. Error: [Errno 13] Permission denied: '/project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev1AntennaAB4m/NoShielding4m/test_10_B_numpy.npy'\\n\",\n+      \"Failed to convert csv file train_27_B.txt and save to Numpy file. Error: [Errno 13] Permission denied: '/project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev1AntennaAB4m/NoShielding4m/train_27_B_numpy.npy'\\n\",\n+      \"Failed to convert csv file train_17_A.txt and save to Numpy file. Error: [Errno 13] Permission denied: '/project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev1AntennaAB4m/NoShielding4m/train_17_A_numpy.npy'\\n\",\n+      \"Failed to convert csv file train_7_B.txt and save to Numpy file. Error: [Errno 13] Permission denied: '/project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev1AntennaAB4m/NoShielding4m/train_7_B_numpy.npy'\\n\",\n+      \"Failed to convert csv file train_10_B.txt and save to Numpy file. Error: [Errno 13] Permission denied: '/project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev1AntennaAB4m/NoShielding4m/train_10_B_numpy.npy'\\n\",\n+      \"Failed to convert csv file train_0_A.txt and save to Numpy file. Error: [Errno 13] Permission denied: '/project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev1AntennaAB4m/NoShielding4m/train_0_A_numpy.npy'\\n\",\n+      \"Failed to convert csv file test_5_B.txt and save to Numpy file. Error: [Errno 13] Permission denied: '/project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev1AntennaAB4m/NoShielding4m/test_5_B_numpy.npy'\\n\",\n+      \"Failed to convert csv file test_16_A.txt and save to Numpy file. Error: [Errno 13] Permission denied: '/project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev1AntennaAB4m/NoShielding4m/test_16_A_numpy.npy'\\n\",\n+      \"Failed to convert csv file train_21_A.txt and save to Numpy file. Error: [Errno 13] Permission denied: '/project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev1AntennaAB4m/NoShielding4m/train_21_A_numpy.npy'\\n\",\n+      \"Failed to convert csv file test_2_A.txt and save to Numpy file. Error: [Errno 13] Permission denied: '/project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev1AntennaAB4m/NoShielding4m/test_2_A_numpy.npy'\\n\",\n+      \"Failed to convert csv file test_9_B.txt and save to Numpy file. Error: [Errno 13] Permission denied: '/project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev1AntennaAB4m/NoShielding4m/test_9_B_numpy.npy'\\n\",\n+      \"Failed to convert csv file train_26_B.txt and save to Numpy file. Error: [Errno 13] Permission denied: '/project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev1AntennaAB4m/NoShielding4m/train_26_B_numpy.npy'\\n\",\n+      \"Failed to convert csv file test_11_B.txt and save to Numpy file. Error: [Errno 13] Permission denied: '/project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev1AntennaAB4m/NoShielding4m/test_11_B_numpy.npy'\\n\",\n+      \"Failed to convert csv file train_16_A.txt and save to Numpy file. Error: [Errno 13] Permission denied: '/project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev1AntennaAB4m/NoShielding4m/train_16_A_numpy.npy'\\n\",\n+      \"Failed to convert csv file train_6_B.txt and save to Numpy file. Error: [Errno 13] Permission denied: '/project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev1AntennaAB4m/NoShielding4m/train_6_B_numpy.npy'\\n\",\n+      \"Failed to convert csv file train_11_B.txt and save to Numpy file. Error: [Errno 13] Permission denied: '/project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev1AntennaAB4m/NoShielding4m/train_11_B_numpy.npy'\\n\",\n+      \"Failed to convert csv file train_1_A.txt and save to Numpy file. Error: [Errno 13] Permission denied: '/project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev1AntennaAB4m/NoShielding4m/train_1_A_numpy.npy'\\n\",\n+      \"Failed to convert csv file test_15_A.txt and save to Numpy file. Error: [Errno 13] Permission denied: '/project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev1AntennaAB4m/NoShielding4m/test_15_A_numpy.npy'\\n\",\n+      \"Failed to convert csv file train_22_A.txt and save to Numpy file. Error: [Errno 13] Permission denied: '/project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev1AntennaAB4m/NoShielding4m/train_22_A_numpy.npy'\\n\",\n+      \"Failed to convert csv file train_29_B.txt and save to Numpy file. Error: [Errno 13] Permission denied: '/project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev1AntennaAB4m/NoShielding4m/train_29_B_numpy.npy'\\n\",\n+      \"Failed to convert csv file test_6_B.txt and save to Numpy file. Error: [Errno 13] Permission denied: '/project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev1AntennaAB4m/NoShielding4m/test_6_B_numpy.npy'\\n\",\n+      \"Failed to convert csv file train_25_B.txt and save to Numpy file. Error: [Errno 13] Permission denied: '/project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev1AntennaAB4m/NoShielding4m/train_25_B_numpy.npy'\\n\",\n+      \"Failed to convert csv file test_12_B.txt and save to Numpy file. Error: [Errno 13] Permission denied: '/project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev1AntennaAB4m/NoShielding4m/test_12_B_numpy.npy'\\n\",\n+      \"Failed to convert csv file test_19_A.txt and save to Numpy file. Error: [Errno 13] Permission denied: '/project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev1AntennaAB4m/NoShielding4m/test_19_A_numpy.npy'\\n\",\n+      \"Failed to convert csv file test_1_A.txt and save to Numpy file. Error: [Errno 13] Permission denied: '/project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev1AntennaAB4m/NoShielding4m/test_1_A_numpy.npy'\\n\",\n+      \"Failed to convert csv file train_5_B.txt and save to Numpy file. Error: [Errno 13] Permission denied: '/project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev1AntennaAB4m/NoShielding4m/train_5_B_numpy.npy'\\n\",\n+      \"Failed to convert csv file train_15_A.txt and save to Numpy file. Error: [Errno 13] Permission denied: '/project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev1AntennaAB4m/NoShielding4m/train_15_A_numpy.npy'\\n\",\n+      \"Failed to convert csv file random_labels_A.txt and save to Numpy file. Error: Given file /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev1AntennaAB4m/NoShielding4m/random_labels_A.txt is not a csv file measured by Lecroy Oscilloscope.\\n\",\n+      \"Failed to convert csv file train_2_A.txt and save to Numpy file. Error: [Errno 13] Permission denied: '/project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev1AntennaAB4m/NoShielding4m/train_2_A_numpy.npy'\\n\",\n+      \"Failed to convert csv file train_12_B.txt and save to Numpy file. Error: [Errno 13] Permission denied: '/project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev1AntennaAB4m/NoShielding4m/train_12_B_numpy.npy'\\n\",\n+      \"Failed to convert csv file train_9_B.txt and save to Numpy file. Error: [Errno 13] Permission denied: '/project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev1AntennaAB4m/NoShielding4m/train_9_B_numpy.npy'\\n\",\n+      \"Failed to convert csv file train_19_A.txt and save to Numpy file. Error: [Errno 13] Permission denied: '/project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev1AntennaAB4m/NoShielding4m/train_19_A_numpy.npy'\\n\",\n+      \"Failed to convert csv file train_23_A.txt and save to Numpy file. Error: [Errno 13] Permission denied: '/project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev1AntennaAB4m/NoShielding4m/train_23_A_numpy.npy'\\n\",\n+      \"Failed to convert csv file test_14_A.txt and save to Numpy file. Error: [Errno 13] Permission denied: '/project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev1AntennaAB4m/NoShielding4m/test_14_A_numpy.npy'\\n\",\n+      \"Failed to convert csv file train_28_B.txt and save to Numpy file. Error: [Errno 13] Permission denied: '/project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev1AntennaAB4m/NoShielding4m/train_28_B_numpy.npy'\\n\",\n+      \"Failed to convert csv file test_7_B.txt and save to Numpy file. Error: [Errno 13] Permission denied: '/project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev1AntennaAB4m/NoShielding4m/test_7_B_numpy.npy'\\n\",\n+      \"Failed to convert csv file test_13_B.txt and save to Numpy file. Error: [Errno 13] Permission denied: '/project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev1AntennaAB4m/NoShielding4m/test_13_B_numpy.npy'\\n\",\n+      \"Failed to convert csv file train_24_B.txt and save to Numpy file. Error: [Errno 13] Permission denied: '/project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev1AntennaAB4m/NoShielding4m/train_24_B_numpy.npy'\\n\",\n+      \"Failed to convert csv file test_18_A.txt and save to Numpy file. Error: [Errno 13] Permission denied: '/project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev1AntennaAB4m/NoShielding4m/test_18_A_numpy.npy'\\n\",\n+      \"Failed to convert csv file test_0_A.txt and save to Numpy file. Error: [Errno 13] Permission denied: '/project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev1AntennaAB4m/NoShielding4m/test_0_A_numpy.npy'\\n\",\n+      \"Failed to convert csv file train_4_B.txt and save to Numpy file. Error: [Errno 13] Permission denied: '/project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev1AntennaAB4m/NoShielding4m/train_4_B_numpy.npy'\\n\",\n+      \"Failed to convert csv file train_14_A.txt and save to Numpy file. Error: [Errno 13] Permission denied: '/project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev1AntennaAB4m/NoShielding4m/train_14_A_numpy.npy'\\n\",\n+      \"Failed to convert csv file train_3_A.txt and save to Numpy file. Error: [Errno 13] Permission denied: '/project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev1AntennaAB4m/NoShielding4m/train_3_A_numpy.npy'\\n\",\n+      \"Failed to convert csv file train_13_B.txt and save to Numpy file. Error: [Errno 13] Permission denied: '/project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev1AntennaAB4m/NoShielding4m/train_13_B_numpy.npy'\\n\",\n+      \"Failed to convert csv file train_8_B.txt and save to Numpy file. Error: [Errno 13] Permission denied: '/project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev1AntennaAB4m/NoShielding4m/train_8_B_numpy.npy'\\n\",\n+      \"Failed to convert csv file train_18_A.txt and save to Numpy file. Error: [Errno 13] Permission denied: '/project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev1AntennaAB4m/NoShielding4m/train_18_A_numpy.npy'\\n\"\n      ]\n     },\n     {\n-     \"name\": \"stderr\",\n-     \"output_type\": \"stream\",\n-     \"text\": [\n-      \"2022-06-26 19:11:08.842517: I tensorflow/compiler/mlir/mlir_graph_optimization_pass.cc:185] None of the MLIR Optimization Passes are enabled (registered 2)\\n\",\n-      \"2022-06-26 19:11:09.586831: I tensorflow/stream_executor/cuda/cuda_dnn.cc:369] Loaded cuDNN version 8201\\n\",\n-      \"2022-06-26 19:11:11.109559: I tensorflow/stream_executor/cuda/cuda_blas.cc:1760] TensorFloat-32 will be used for the matrix multiplication. This will only be logged once.\\n\"\n-     ]\n-    },\n-    {\n-     \"name\": \"stdout\",\n-     \"output_type\": \"stream\",\n-     \"text\": [\n-      \"   6/1182 [..............................] - ETA: 1:18 - loss: 9.5045 - accuracy: 0.4974WARNING:tensorflow:Callback method `on_train_batch_end` is slow compared to the batch time (batch time: 0.0271s vs `on_train_batch_end` time: 0.0333s). Check your callbacks.\\n\",\n-      \"1182/1182 [==============================] - 85s 68ms/step - loss: 0.9984 - accuracy: 0.7006 - val_loss: 0.6843 - val_accuracy: 0.6228\\n\",\n-      \"Prepared test data with size (3982, 10000)\\n\",\n-      \"Confusion matrix:\\n\",\n-      \"[[  37 1954]\\n\",\n-      \" [  44 1947]]\\n\",\n-      \"Test accuracy: 0.4982420894023104\\n\",\n-      \"Prepared test data with size (3982, 10000)\\n\",\n-      \"Confusion matrix:\\n\",\n-      \"[[  27 1964]\\n\",\n-      \" [ 156 1835]]\\n\",\n-      \"Test accuracy: 0.46760421898543447\\n\",\n-      \"Prepared test data with size (3982, 10000)\\n\",\n-      \"Confusion matrix:\\n\",\n-      \"[[ 147 1844]\\n\",\n-      \" [  79 1912]]\\n\",\n-      \"Test accuracy: 0.5170768458061276\\n\",\n-      \"Prepared test data with size (3982, 10000)\\n\",\n-      \"Confusion matrix:\\n\",\n-      \"[[1868  123]\\n\",\n-      \" [1756  235]]\\n\",\n-      \"Test accuracy: 0.5281265695630336\\n\",\n-      \"Prepared test data with size (3982, 10000)\\n\",\n-      \"Confusion matrix:\\n\",\n-      \"[[1990    1]\\n\",\n-      \" [1947   44]]\\n\",\n-      \"Test accuracy: 0.5107985936715218\\n\",\n-      \"\\n\",\n-      \"\\n\",\n-      \"created a json file of the test accuracies at /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/AirbusABShielding/test_accuracy_20220626-1910.json\\n\",\n-      \"Prepared validation data with size (3982, 10000)\\n\",\n-      \"Prepared training data with size (75620, 10000)\\n\",\n-      \"Model: \\\"sequential_1\\\"\\n\",\n-      \"_________________________________________________________________\\n\",\n-      \"Layer (type)                 Output Shape              Param #   \\n\",\n-      \"=================================================================\\n\",\n-      \"reshape_1 (Reshape)          (None, 10000, 1)          0         \\n\",\n-      \"_________________________________________________________________\\n\",\n-      \"gaussian_noise_1 (GaussianNo (None, 10000, 1)          0         \\n\",\n-      \"_________________________________________________________________\\n\",\n-      \"conv1d_3 (Conv1D)            (None, 10000, 13)         52        \\n\",\n-      \"_________________________________________________________________\\n\",\n-      \"max_pooling1d_3 (MaxPooling1 (None, 5000, 13)          0         \\n\",\n-      \"_________________________________________________________________\\n\",\n-      \"spatial_dropout1d_3 (Spatial (None, 5000, 13)          0         \\n\",\n-      \"_________________________________________________________________\\n\",\n-      \"batch_normalization_3 (Batch (None, 5000, 13)          52        \\n\",\n-      \"_________________________________________________________________\\n\",\n-      \"conv1d_4 (Conv1D)            (None, 5000, 118)         23128     \\n\",\n-      \"_________________________________________________________________\\n\",\n-      \"max_pooling1d_4 (MaxPooling1 (None, 5000, 118)         0         \\n\",\n-      \"_________________________________________________________________\\n\",\n-      \"spatial_dropout1d_4 (Spatial (None, 5000, 118)         0         \\n\",\n-      \"_________________________________________________________________\\n\",\n-      \"batch_normalization_4 (Batch (None, 5000, 118)         472       \\n\",\n-      \"_________________________________________________________________\\n\",\n-      \"conv1d_5 (Conv1D)            (None, 5000, 100)         59100     \\n\",\n-      \"_________________________________________________________________\\n\",\n-      \"max_pooling1d_5 (MaxPooling1 (None, 1250, 100)         0         \\n\",\n-      \"_________________________________________________________________\\n\",\n-      \"batch_normalization_5 (Batch (None, 1250, 100)         400       \\n\",\n-      \"_________________________________________________________________\\n\",\n-      \"spatial_dropout1d_5 (Spatial (None, 1250, 100)         0         \\n\",\n-      \"_________________________________________________________________\\n\",\n-      \"flatten_1 (Flatten)          (None, 125000)            0         \\n\",\n-      \"_________________________________________________________________\\n\",\n-      \"dense_2 (Dense)              (None, 128)               16000128  \\n\",\n-      \"_________________________________________________________________\\n\",\n-      \"dense_3 (Dense)              (None, 2)                 258       \\n\",\n-      \"=================================================================\\n\",\n-      \"Total params: 16,083,590\\n\",\n-      \"Trainable params: 16,083,128\\n\",\n-      \"Non-trainable params: 462\\n\",\n-      \"_________________________________________________________________\\n\",\n-      \"   6/1182 [..............................] - ETA: 1:18 - loss: 13.4250 - accuracy: 0.4740WARNING:tensorflow:Callback method `on_train_batch_end` is slow compared to the batch time (batch time: 0.0267s vs `on_train_batch_end` time: 0.0379s). Check your callbacks.\\n\",\n-      \"1182/1182 [==============================] - 82s 68ms/step - loss: 1.1770 - accuracy: 0.6733 - val_loss: 0.4680 - val_accuracy: 0.7205\\n\",\n-      \"Prepared test data with size (3982, 10000)\\n\",\n-      \"Confusion matrix:\\n\",\n-      \"[[ 126 1865]\\n\",\n-      \" [ 331 1660]]\\n\",\n-      \"Test accuracy: 0.4485183324962331\\n\",\n-      \"Prepared test data with size (3982, 10000)\\n\",\n-      \"Confusion matrix:\\n\",\n-      \"[[ 492 1499]\\n\",\n-      \" [ 519 1472]]\\n\",\n-      \"Test accuracy: 0.4932194876946258\\n\",\n-      \"Prepared test data with size (3982, 10000)\\n\",\n-      \"Confusion matrix:\\n\",\n-      \"[[ 577 1414]\\n\",\n-      \" [ 429 1562]]\\n\",\n-      \"Test accuracy: 0.5371672526368659\\n\",\n-      \"Prepared test data with size (3982, 10000)\\n\",\n-      \"Confusion matrix:\\n\",\n-      \"[[   2 1989]\\n\",\n-      \" [  57 1934]]\\n\",\n-      \"Test accuracy: 0.4861878453038674\\n\",\n-      \"Prepared test data with size (3982, 10000)\\n\",\n-      \"Confusion matrix:\\n\",\n-      \"[[1850  141]\\n\",\n-      \" [   3 1988]]\\n\",\n-      \"Test accuracy: 0.963837267704671\\n\",\n-      \"\\n\",\n-      \"\\n\",\n-      \"created a json file of the test accuracies at /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/AirbusABShielding/test_accuracy_20220626-1910.json\\n\",\n-      \"Prepared validation data with size (3982, 10000)\\n\",\n-      \"Prepared training data with size (75624, 10000)\\n\",\n-      \"Model: \\\"sequential_2\\\"\\n\",\n-      \"_________________________________________________________________\\n\",\n-      \"Layer (type)                 Output Shape              Param #   \\n\",\n-      \"=================================================================\\n\",\n-      \"reshape_2 (Reshape)          (None, 10000, 1)          0         \\n\",\n-      \"_________________________________________________________________\\n\",\n-      \"gaussian_noise_2 (GaussianNo (None, 10000, 1)          0         \\n\",\n-      \"_________________________________________________________________\\n\",\n-      \"conv1d_6 (Conv1D)            (None, 10000, 13)         52        \\n\",\n-      \"_________________________________________________________________\\n\",\n-      \"max_pooling1d_6 (MaxPooling1 (None, 5000, 13)          0         \\n\",\n-      \"_________________________________________________________________\\n\",\n-      \"spatial_dropout1d_6 (Spatial (None, 5000, 13)          0         \\n\",\n-      \"_________________________________________________________________\\n\",\n-      \"batch_normalization_6 (Batch (None, 5000, 13)          52        \\n\",\n-      \"_________________________________________________________________\\n\",\n-      \"conv1d_7 (Conv1D)            (None, 5000, 118)         23128     \\n\",\n-      \"_________________________________________________________________\\n\",\n-      \"max_pooling1d_7 (MaxPooling1 (None, 5000, 118)         0         \\n\",\n-      \"_________________________________________________________________\\n\",\n-      \"spatial_dropout1d_7 (Spatial (None, 5000, 118)         0         \\n\",\n-      \"_________________________________________________________________\\n\",\n-      \"batch_normalization_7 (Batch (None, 5000, 118)         472       \\n\",\n-      \"_________________________________________________________________\\n\",\n-      \"conv1d_8 (Conv1D)            (None, 5000, 100)         59100     \\n\",\n-      \"_________________________________________________________________\\n\",\n-      \"max_pooling1d_8 (MaxPooling1 (None, 1250, 100)         0         \\n\",\n-      \"_________________________________________________________________\\n\",\n-      \"batch_normalization_8 (Batch (None, 1250, 100)         400       \\n\",\n-      \"_________________________________________________________________\\n\",\n-      \"spatial_dropout1d_8 (Spatial (None, 1250, 100)         0         \\n\",\n-      \"_________________________________________________________________\\n\",\n-      \"flatten_2 (Flatten)          (None, 125000)            0         \\n\",\n-      \"_________________________________________________________________\\n\",\n-      \"dense_4 (Dense)              (None, 128)               16000128  \\n\",\n-      \"_________________________________________________________________\\n\",\n-      \"dense_5 (Dense)              (None, 2)                 258       \\n\",\n-      \"=================================================================\\n\",\n-      \"Total params: 16,083,590\\n\",\n-      \"Trainable params: 16,083,128\\n\",\n-      \"Non-trainable params: 462\\n\",\n-      \"_________________________________________________________________\\n\",\n-      \"   6/1182 [..............................] - ETA: 1:18 - loss: 11.6235 - accuracy: 0.4948WARNING:tensorflow:Callback method `on_train_batch_end` is slow compared to the batch time (batch time: 0.0270s vs `on_train_batch_end` time: 0.0399s). Check your callbacks.\\n\",\n-      \"1182/1182 [==============================] - 82s 68ms/step - loss: 0.8782 - accuracy: 0.7057 - val_loss: 0.1489 - val_accuracy: 0.9478\\n\",\n-      \"Prepared test data with size (3982, 10000)\\n\",\n-      \"Confusion matrix:\\n\",\n-      \"[[ 699 1292]\\n\",\n-      \" [1504  487]]\\n\",\n-      \"Test accuracy: 0.2978402812656956\\n\",\n-      \"Prepared test data with size (3982, 10000)\\n\",\n-      \"Confusion matrix:\\n\",\n-      \"[[1947   44]\\n\",\n-      \" [ 340 1651]]\\n\",\n-      \"Test accuracy: 0.903566047212456\\n\",\n-      \"Prepared test data with size (3982, 10000)\\n\",\n-      \"Confusion matrix:\\n\",\n-      \"[[1875  116]\\n\",\n-      \" [1890  101]]\\n\",\n-      \"Test accuracy: 0.49623304871923657\\n\",\n-      \"Prepared test data with size (3982, 10000)\\n\",\n-      \"Confusion matrix:\\n\",\n-      \"[[1991    0]\\n\",\n-      \" [1596  395]]\\n\",\n-      \"Test accuracy: 0.5991963837267704\\n\",\n-      \"Prepared test data with size (3982, 10000)\\n\",\n-      \"Confusion matrix:\\n\",\n-      \"[[1428  563]\\n\",\n-      \" [ 427 1564]]\\n\",\n-      \"Test accuracy: 0.7513812154696132\\n\",\n-      \"\\n\",\n-      \"\\n\",\n-      \"created a json file of the test accuracies at /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/AirbusABShielding/test_accuracy_20220626-1910.json\\n\",\n-      \" ------------ Done ---------------\\n\"\n+     \"ename\": \"IndexError\",\n+     \"evalue\": \"list index out of range\",\n+     \"output_type\": \"error\",\n+     \"traceback\": [\n+      \"\\u001b[0;31m---------------------------------------------------------------------------\\u001b[0m\",\n+      \"\\u001b[0;31mIndexError\\u001b[0m                                Traceback (most recent call last)\",\n+      \"\\u001b[0;32m/tmp/ipykernel_113/2761756034.py\\u001b[0m in \\u001b[0;36m<module>\\u001b[0;34m\\u001b[0m\\n\\u001b[1;32m     20\\u001b[0m \\u001b[0;34m\\u001b[0m\\u001b[0m\\n\\u001b[1;32m     21\\u001b[0m \\u001b[0;32mfor\\u001b[0m \\u001b[0mi\\u001b[0m\\u001b[0;34m,\\u001b[0m \\u001b[0melem\\u001b[0m \\u001b[0;32min\\u001b[0m \\u001b[0menumerate\\u001b[0m\\u001b[0;34m(\\u001b[0m\\u001b[0mpositions\\u001b[0m\\u001b[0;34m)\\u001b[0m\\u001b[0;34m:\\u001b[0m\\u001b[0;34m\\u001b[0m\\u001b[0;34m\\u001b[0m\\u001b[0m\\n\\u001b[0;32m---> 22\\u001b[0;31m     training_data, training_labels, validation_data, validation_labels = get_datasets(\\n\\u001b[0m\\u001b[1;32m     23\\u001b[0m         \\u001b[0mos\\u001b[0m\\u001b[0;34m.\\u001b[0m\\u001b[0mpath\\u001b[0m\\u001b[0;34m.\\u001b[0m\\u001b[0mjoin\\u001b[0m\\u001b[0;34m(\\u001b[0m\\u001b[0mdata_directory\\u001b[0m\\u001b[0;34m,\\u001b[0m \\u001b[0melem\\u001b[0m\\u001b[0;34m)\\u001b[0m\\u001b[0;34m,\\u001b[0m \\u001b[0mtechnical_details\\u001b[0m\\u001b[0;34m,\\u001b[0m \\u001b[0mshow_validation_data\\u001b[0m\\u001b[0;34m,\\u001b[0m \\u001b[0mtotal_augmentations\\u001b[0m\\u001b[0;34m=\\u001b[0m\\u001b[0;36m1\\u001b[0m\\u001b[0;34m,\\u001b[0m\\u001b[0;34m\\u001b[0m\\u001b[0;34m\\u001b[0m\\u001b[0m\\n\\u001b[1;32m     24\\u001b[0m         force_create_npy_files=force_create_npy_files)\\n\",\n+      \"\\u001b[0;32m/tmp/ipykernel_113/2422220352.py\\u001b[0m in \\u001b[0;36mget_datasets\\u001b[0;34m(folder_path, technical_details, show_validation_data, force_create_npy_files, total_augmentations)\\u001b[0m\\n\\u001b[1;32m    125\\u001b[0m     \\u001b[0mfilename_B\\u001b[0m\\u001b[0;34m.\\u001b[0m\\u001b[0msort\\u001b[0m\\u001b[0;34m(\\u001b[0m\\u001b[0;34m)\\u001b[0m\\u001b[0;34m\\u001b[0m\\u001b[0;34m\\u001b[0m\\u001b[0m\\n\\u001b[1;32m    126\\u001b[0m \\u001b[0;34m\\u001b[0m\\u001b[0m\\n\\u001b[0;32m--> 127\\u001b[0;31m     \\u001b[0mvalidation_data_A\\u001b[0m \\u001b[0;34m=\\u001b[0m \\u001b[0mload_cached_data_file\\u001b[0m\\u001b[0;34m(\\u001b[0m\\u001b[0mfile_path\\u001b[0m\\u001b[0;34m=\\u001b[0m\\u001b[0mos\\u001b[0m\\u001b[0;34m.\\u001b[0m\\u001b[0mpath\\u001b[0m\\u001b[0;34m.\\u001b[0m\\u001b[0mjoin\\u001b[0m\\u001b[0;34m(\\u001b[0m\\u001b[0mfolder_path\\u001b[0m\\u001b[0;34m,\\u001b[0m \\u001b[0mfilename_A\\u001b[0m\\u001b[0;34m[\\u001b[0m\\u001b[0;36m0\\u001b[0m\\u001b[0;34m]\\u001b[0m\\u001b[0;34m)\\u001b[0m\\u001b[0;34m)\\u001b[0m\\u001b[0;34m\\u001b[0m\\u001b[0;34m\\u001b[0m\\u001b[0m\\n\\u001b[0m\\u001b[1;32m    128\\u001b[0m     \\u001b[0mvalidation_data_B\\u001b[0m \\u001b[0;34m=\\u001b[0m \\u001b[0mload_cached_data_file\\u001b[0m\\u001b[0;34m(\\u001b[0m\\u001b[0mfile_path\\u001b[0m\\u001b[0;34m=\\u001b[0m\\u001b[0mos\\u001b[0m\\u001b[0;34m.\\u001b[0m\\u001b[0mpath\\u001b[0m\\u001b[0;34m.\\u001b[0m\\u001b[0mjoin\\u001b[0m\\u001b[0;34m(\\u001b[0m\\u001b[0mfolder_path\\u001b[0m\\u001b[0;34m,\\u001b[0m \\u001b[0mfilename_B\\u001b[0m\\u001b[0;34m[\\u001b[0m\\u001b[0;36m0\\u001b[0m\\u001b[0;34m]\\u001b[0m\\u001b[0;34m)\\u001b[0m\\u001b[0;34m)\\u001b[0m\\u001b[0;34m\\u001b[0m\\u001b[0;34m\\u001b[0m\\u001b[0m\\n\\u001b[1;32m    129\\u001b[0m \\u001b[0;34m\\u001b[0m\\u001b[0m\\n\",\n+      \"\\u001b[0;31mIndexError\\u001b[0m: list index out of range\"\n      ]\n     }\n    ],\n@@ -968,8 +841,7 @@\n     \"    validation_accuracy[f\\\"{elem}\\\"] = hist.history[\\\"val_accuracy\\\"][-1]\\n\",\n     \"    \\n\",\n     \"    for j in range(0,num_test_data_sets):\\n\",\n-    \"        test_data, test_labels = get_test_data(os.path.join(data_directory, elem), technical_details, displacement=0,\\n\",\n-    \"                                          force_create_npy_files=force_create_npy_files, data_index=j)\\n\",\n+    \"        test_data, test_labels = get_test_data(os.path.join(data_directory, elem), technical_details, displacement=0, data_index=j)\\n\",\n     \"        list_acc.append(test_model(model, test_data, test_labels))\\n\",\n     \"        \\n\",\n     \"    test_accuracy[f\\\"{elem}\\\"] = list_acc\\n\",\n@@ -988,6 +860,7 @@\n   {\n    \"cell_type\": \"markdown\",\n    \"metadata\": {\n+    \"jp-MarkdownHeadingCollapsed\": true,\n     \"pycharm\": {\n      \"name\": \"#%%\\n\"\n     },\n\n---", "paper/TEMPEST_ATTACK.ipynb\n=======================================================\nlhs: 100644 | 496dcdf19fd582115826a509638c9e4c36e1b0d4\nrhs: 100644 | a7603bcdef357dd58eb4835b8f9d98e4c829c539\n---@@ -45,15 +45,15 @@\n    \"metadata\": {},\n    \"outputs\": [],\n    \"source\": [\n-    \"data_directory=\\\"/project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/AirbusDistance\\\"\\n\",\n+    \"data_directory=\\\"/project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev12D/\\\"\\n\",\n     \"# data_directory=\\\"/project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Airbus_notfixedfirmwareafterall\\\"\\n\",\n     \"# data_directory=\\\"C:/Users/marku/PycharmProjects/LMU/emissionsecurity/paper/Data2D/Test_accval_acctest\\\"\\n\",\n     \"debug=False\\n\",\n     \"use_new_data=False\\n\",\n     \"num_test_data_sets = 3\\n\",\n     \"offset_header_rev1 = -200\\n\",\n-    \"offset_header_airbus = 200\\n\",\n-    \"offset_header = offset_header_airbus\"\n+    \"offset_header_rev2 = 200\\n\",\n+    \"offset_header = offset_header_rev1\"\n    ]\n   },\n   {\n@@ -61,7 +61,15 @@\n    \"execution_count\": 3,\n    \"id\": \"91866f75-1bcb-4089-839f-5b80ca993610\",\n    \"metadata\": {},\n-   \"outputs\": [],\n+   \"outputs\": [\n+    {\n+     \"name\": \"stdout\",\n+     \"output_type\": \"stream\",\n+     \"text\": [\n+      \"['2d_5.000_4.000', '2d_5.000_5.000', '2d_5.000_6.000', '2d_5.000_7.000', '2d_5.000_8.000', '2d_5.000_9.000', '2d_5.000_10.000', '2d_6.000_0.000', '2d_6.000_1.000', '2d_6.000_2.000', '2d_6.000_3.000', '2d_6.000_4.000', '2d_6.000_5.000', '2d_6.000_6.000', '2d_6.000_7.000', '2d_6.000_8.000', '2d_6.000_9.000', '2d_6.000_10.000', '2d_7.000_0.000', '2d_7.000_1.000', '2d_7.000_2.000', '2d_7.000_3.000', '2d_7.000_4.000', '2d_7.000_5.000', '2d_7.000_6.000', '2d_7.000_7.000', '2d_7.000_8.000', '2d_7.000_9.000', '2d_7.000_10.000', '2d_8.000_0.000', '2d_8.000_1.000', '2d_8.000_2.000', '2d_8.000_3.000', '2d_8.000_4.000', '2d_8.000_5.000', '2d_8.000_6.000', '2d_8.000_7.000', '2d_8.000_8.000', '2d_8.000_9.000', '2d_8.000_10.000', '2d_9.000_0.000', '2d_9.000_1.000', '2d_9.000_2.000', '2d_9.000_3.000', '2d_9.000_4.000', '2d_9.000_5.000', '2d_9.000_6.000', '2d_9.000_7.000', '2d_9.000_8.000', '2d_9.000_9.000', '2d_9.000_10.000', '2d_10.000_0.000', '2d_10.000_1.000', '2d_10.000_2.000', '2d_10.000_3.000', '2d_10.000_4.000', '2d_10.000_5.000', '2d_10.000_6.000', '2d_10.000_7.000', '2d_10.000_8.000', '2d_10.000_9.000', '2d_10.000_10.000']\\n\"\n+     ]\n+    }\n+   ],\n    \"source\": [\n     \"# Technical details of your experimental setup\\n\",\n     \"technical_details = {\\n\",\n@@ -85,6 +93,7 @@\n     \"    return [atoi(c) for c in re.split(r'(\\\\d+)', text) ]\\n\",\n     \"\\n\",\n     \"positions.sort(key=natural_keys)\\n\",\n+    \"positions = positions[59:] # TODO REMOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOVEEEEEEEEEE!!!!!!!!!!!!!!!!!!!!!\\n\",\n     \"\\n\",\n     \"train_accuracy = {} # Tracks the resulting train accuracy\\n\",\n     \"validation_accuracy = {}  # Tracks the resulting validation accuracy\\n\",\n@@ -92,9 +101,9 @@\n     \"\\n\",\n     \"machine_learning_settings = {\\n\",\n     \"    \\\"dropout\\\": 0.,\\n\",\n-    \"    \\\"training_EPOCHS\\\": 5,\\n\",\n+    \"    \\\"training_EPOCHS\\\": 10,\\n\",\n     \"}\\n\",\n-    \"\\n\",\n+    \"print(positions)\\n\",\n     \"stop_at_val_acc = 0.99\\n\",\n     \"\\n\",\n     \"label_mapping = pp.translate_all  # lambda labels: pp.translate_all_onlybit(labels, '0101') #\\n\",\n@@ -112,6 +121,7 @@\n     \"    print(f\\\"Evaluating datasets: {positions}\\\")\\n\",\n     \"    \\n\",\n     \"    for i, elem in enumerate(positions):\\n\",\n+    \"        print(f\\\"Loading dataset {i}: {elem}\\\")\\n\",\n     \"        training_data, training_labels, validation_data, validation_labels = pp.get_datasets(\\n\",\n     \"            os.path.join(data_directory, elem), technical_details, offset_header=offset_header,\\n\",\n     \"            data_augmentation_halflength=1, debug=debug, force_create_npy_files=use_new_data\\n\",\n@@ -164,46 +174,31 @@\n      \"name\": \"stdout\",\n      \"output_type\": \"stream\",\n      \"text\": [\n-      \"Evaluating datasets: ['0cm', '1cm', '2cm', '3cm', '4cm', '5cm', '6cm', '7cm']\\n\"\n-     ]\n-    },\n-    {\n-     \"name\": \"stderr\",\n-     \"output_type\": \"stream\",\n-     \"text\": [\n-      \"/home/a/A.Baliuka/emissionsecurity/paper/preprocessing.py:94: UserWarning: This function is deprecated. Use `load_cached_data_file` on individual files!\\n\",\n-      \"  warnings.warn(\\\"This function is deprecated. Use `load_cached_data_file` on individual files!\\\")\\n\",\n-      \"/home/a/A.Baliuka/emissionsecurity/paper/preprocessing.py:184: RuntimeWarning: divide by zero encountered in double_scalars\\n\",\n-      \"  if np.max(correlation) / np.median(correlation) < 2.:\\n\"\n-     ]\n-    },\n-    {\n-     \"name\": \"stdout\",\n-     \"output_type\": \"stream\",\n-     \"text\": [\n-      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/AirbusDistance/0cm\\n\",\n-      \"Cut data in pieces with these shapes: after header:(14093, 500), before header:(5894, 500)\\n\",\n-      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/AirbusDistance/0cm\\n\",\n-      \"Cut data in pieces with these shapes: after header:(42279, 500), before header:(17682, 500)\\n\",\n-      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/AirbusDistance/0cm\\n\",\n-      \"Cut data in pieces with these shapes: after header:(42279, 500), before header:(17682, 500)\\n\",\n-      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/AirbusDistance/0cm\\n\",\n-      \"Cut data in pieces with these shapes: after header:(42279, 500), before header:(17682, 500)\\n\",\n-      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/AirbusDistance/0cm\\n\",\n-      \"Cut data in pieces with these shapes: after header:(42279, 500), before header:(17682, 500)\\n\",\n-      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/AirbusDistance/0cm\\n\",\n-      \"Cut data in pieces with these shapes: after header:(42279, 500), before header:(17682, 500)\\n\",\n-      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/AirbusDistance/0cm\\n\",\n-      \"Cut data in pieces with these shapes: after header:(42279, 500), before header:(17682, 500)\\n\"\n+      \"Evaluating datasets: ['2d_5.000_4.000', '2d_5.000_5.000', '2d_5.000_6.000', '2d_5.000_7.000', '2d_5.000_8.000', '2d_5.000_9.000', '2d_5.000_10.000', '2d_6.000_0.000', '2d_6.000_1.000', '2d_6.000_2.000', '2d_6.000_3.000', '2d_6.000_4.000', '2d_6.000_5.000', '2d_6.000_6.000', '2d_6.000_7.000', '2d_6.000_8.000', '2d_6.000_9.000', '2d_6.000_10.000', '2d_7.000_0.000', '2d_7.000_1.000', '2d_7.000_2.000', '2d_7.000_3.000', '2d_7.000_4.000', '2d_7.000_5.000', '2d_7.000_6.000', '2d_7.000_7.000', '2d_7.000_8.000', '2d_7.000_9.000', '2d_7.000_10.000', '2d_8.000_0.000', '2d_8.000_1.000', '2d_8.000_2.000', '2d_8.000_3.000', '2d_8.000_4.000', '2d_8.000_5.000', '2d_8.000_6.000', '2d_8.000_7.000', '2d_8.000_8.000', '2d_8.000_9.000', '2d_8.000_10.000', '2d_9.000_0.000', '2d_9.000_1.000', '2d_9.000_2.000', '2d_9.000_3.000', '2d_9.000_4.000', '2d_9.000_5.000', '2d_9.000_6.000', '2d_9.000_7.000', '2d_9.000_8.000', '2d_9.000_9.000', '2d_9.000_10.000', '2d_10.000_0.000', '2d_10.000_1.000', '2d_10.000_2.000', '2d_10.000_3.000', '2d_10.000_4.000', '2d_10.000_5.000', '2d_10.000_6.000', '2d_10.000_7.000', '2d_10.000_8.000', '2d_10.000_9.000', '2d_10.000_10.000']\\n\",\n+      \"Loading dataset 0: 2d_5.000_4.000\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev12D/2d_5.000_4.000\\n\",\n+      \"Cut data in pieces with these shapes: after header:(14096, 500), before header:(5891, 500)\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev12D/2d_5.000_4.000\\n\",\n+      \"Cut data in pieces with these shapes: after header:(42288, 500), before header:(17673, 500)\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev12D/2d_5.000_4.000\\n\",\n+      \"Cut data in pieces with these shapes: after header:(42288, 500), before header:(17673, 500)\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev12D/2d_5.000_4.000\\n\",\n+      \"Cut data in pieces with these shapes: after header:(42288, 500), before header:(17673, 500)\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev12D/2d_5.000_4.000\\n\",\n+      \"Cut data in pieces with these shapes: after header:(42288, 500), before header:(17673, 500)\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev12D/2d_5.000_4.000\\n\",\n+      \"Cut data in pieces with these shapes: after header:(42288, 500), before header:(17673, 500)\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev12D/2d_5.000_4.000\\n\",\n+      \"Cut data in pieces with these shapes: after header:(42288, 500), before header:(17673, 500)\\n\"\n      ]\n     },\n     {\n      \"name\": \"stderr\",\n      \"output_type\": \"stream\",\n      \"text\": [\n-      \"2022-06-26 18:01:42.819425: I tensorflow/core/platform/cpu_feature_guard.cc:142] This TensorFlow binary is optimized with oneAPI Deep Neural Network Library (oneDNN) to use the following CPU instructions in performance-critical operations:  SSE4.1 SSE4.2 AVX AVX2 FMA\\n\",\n+      \"2022-07-03 13:27:38.020045: I tensorflow/core/platform/cpu_feature_guard.cc:142] This TensorFlow binary is optimized with oneAPI Deep Neural Network Library (oneDNN) to use the following CPU instructions in performance-critical operations:  SSE4.1 SSE4.2 AVX AVX2 FMA\\n\",\n       \"To enable them in other operations, rebuild TensorFlow with the appropriate compiler flags.\\n\",\n-      \"2022-06-26 18:01:43.255816: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1510] Created device /job:localhost/replica:0/task:0/device:GPU:0 with 43644 MB memory:  -> device: 0, name: NVIDIA A40, pci bus id: 0000:81:00.0, compute capability: 8.6\\n\"\n+      \"2022-07-03 13:27:38.545713: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1510] Created device /job:localhost/replica:0/task:0/device:GPU:0 with 43643 MB memory:  -> device: 0, name: NVIDIA A40, pci bus id: 0000:a1:00.0, compute capability: 8.6\\n\"\n      ]\n     },\n     {\n@@ -252,521 +247,39 @@\n       \"Trainable params: 1,472,666\\n\",\n       \"Non-trainable params: 462\\n\",\n       \"_________________________________________________________________\\n\",\n-      \"Epoch 1/5\\n\"\n-     ]\n-    },\n-    {\n-     \"name\": \"stderr\",\n-     \"output_type\": \"stream\",\n-     \"text\": [\n-      \"2022-06-26 18:01:46.823999: I tensorflow/compiler/mlir/mlir_graph_optimization_pass.cc:185] None of the MLIR Optimization Passes are enabled (registered 2)\\n\",\n-      \"2022-06-26 18:01:47.995229: I tensorflow/stream_executor/cuda/cuda_dnn.cc:369] Loaded cuDNN version 8201\\n\",\n-      \"2022-06-26 18:01:49.452515: I tensorflow/stream_executor/cuda/cuda_blas.cc:1760] TensorFloat-32 will be used for the matrix multiplication. This will only be logged once.\\n\"\n-     ]\n-    },\n-    {\n-     \"name\": \"stdout\",\n-     \"output_type\": \"stream\",\n-     \"text\": [\n-      \"2811/2811 [==============================] - 30s 9ms/step - loss: 0.5651 - accuracy: 0.7233 - val_loss: 0.3216 - val_accuracy: 0.8573\\n\",\n-      \"Epoch 2/5\\n\",\n-      \"2811/2811 [==============================] - 26s 9ms/step - loss: 0.3657 - accuracy: 0.8332 - val_loss: 0.2551 - val_accuracy: 0.8906\\n\",\n-      \"Epoch 3/5\\n\",\n-      \"2811/2811 [==============================] - 26s 9ms/step - loss: 0.3072 - accuracy: 0.8642 - val_loss: 0.2065 - val_accuracy: 0.9140\\n\",\n-      \"Epoch 4/5\\n\",\n-      \"2811/2811 [==============================] - 26s 9ms/step - loss: 0.2624 - accuracy: 0.8863 - val_loss: 0.1758 - val_accuracy: 0.9292\\n\",\n-      \"Epoch 5/5\\n\",\n-      \"2811/2811 [==============================] - 25s 9ms/step - loss: 0.2290 - accuracy: 0.9030 - val_loss: 0.1425 - val_accuracy: 0.9436\\n\",\n-      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/AirbusDistance/0cm\\n\",\n-      \"Cut data in pieces with these shapes: after header:(14093, 500), before header:(5894, 500)\\n\",\n-      \"Confusion matrix:\\n\",\n-      \"H V P M \\n\",\n-      \"[[3704  451  398  403]\\n\",\n-      \" [ 308 3893  434  467]\\n\",\n-      \" [ 390  395 3748  440]\\n\",\n-      \" [ 369  371  361 3855]]\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0101: 0.8418472006804423\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0011: 0.8385450542852855\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0110: 0.8405963876519738\\n\",\n-      \"Test accuracy: 0.7604943213088508\\n\",\n-      \"\\n\",\n-      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/AirbusDistance/0cm\\n\",\n-      \"Cut data in pieces with these shapes: after header:(14093, 500), before header:(5894, 500)\\n\",\n-      \"Confusion matrix:\\n\",\n-      \"H V P M \\n\",\n-      \"[[3698  445  395  418]\\n\",\n-      \" [ 341 3868  444  449]\\n\",\n-      \" [ 404  373 3754  442]\\n\",\n-      \" [ 345  361  343 3907]]\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0101: 0.8423475258918297\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0011: 0.8404462900885575\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0110: 0.8408965827788062\\n\",\n-      \"Test accuracy: 0.7618451993795967\\n\",\n-      \"\\n\",\n-      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/AirbusDistance/0cm\\n\",\n-      \"Cut data in pieces with these shapes: after header:(14093, 500), before header:(5894, 500)\\n\",\n-      \"Confusion matrix:\\n\",\n-      \"H V P M \\n\",\n-      \"[[3683  459  395  419]\\n\",\n-      \" [ 327 3932  402  441]\\n\",\n-      \" [ 398  370 3780  425]\\n\",\n-      \" [ 366  364  363 3863]]\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0101: 0.8433481763146045\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0011: 0.8421473958072747\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0110: 0.8412968429479162\\n\",\n-      \"Test accuracy: 0.7633962075348977\\n\",\n-      \"\\n\",\n-      \"\\n\",\n-      \"\\n\",\n-      \"created a json file of the test accuracies at ./test_accuracy_20220626-1759.json\\n\"\n-     ]\n-    },\n-    {\n-     \"name\": \"stderr\",\n-     \"output_type\": \"stream\",\n-     \"text\": [\n-      \"/home/a/A.Baliuka/emissionsecurity/paper/preprocessing.py:94: UserWarning: This function is deprecated. Use `load_cached_data_file` on individual files!\\n\",\n-      \"  warnings.warn(\\\"This function is deprecated. Use `load_cached_data_file` on individual files!\\\")\\n\",\n-      \"/home/a/A.Baliuka/emissionsecurity/paper/preprocessing.py:184: RuntimeWarning: divide by zero encountered in double_scalars\\n\",\n-      \"  if np.max(correlation) / np.median(correlation) < 2.:\\n\"\n-     ]\n-    },\n-    {\n-     \"name\": \"stdout\",\n-     \"output_type\": \"stream\",\n-     \"text\": [\n-      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/AirbusDistance/1cm\\n\",\n-      \"Cut data in pieces with these shapes: after header:(14093, 500), before header:(5895, 500)\\n\",\n-      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/AirbusDistance/1cm\\n\",\n-      \"Cut data in pieces with these shapes: after header:(42279, 500), before header:(17684, 500)\\n\",\n-      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/AirbusDistance/1cm\\n\",\n-      \"Cut data in pieces with these shapes: after header:(42279, 500), before header:(17684, 500)\\n\",\n-      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/AirbusDistance/1cm\\n\",\n-      \"Cut data in pieces with these shapes: after header:(42279, 500), before header:(17684, 500)\\n\",\n-      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/AirbusDistance/1cm\\n\",\n-      \"Cut data in pieces with these shapes: after header:(42279, 500), before header:(17684, 500)\\n\",\n-      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/AirbusDistance/1cm\\n\",\n-      \"Cut data in pieces with these shapes: after header:(42279, 500), before header:(17684, 500)\\n\",\n-      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/AirbusDistance/1cm\\n\",\n-      \"Cut data in pieces with these shapes: after header:(42279, 500), before header:(17684, 500)\\n\",\n-      \"Model: \\\"sequential_1\\\"\\n\",\n-      \"_________________________________________________________________\\n\",\n-      \"Layer (type)                 Output Shape              Param #   \\n\",\n-      \"=================================================================\\n\",\n-      \"reshape_1 (Reshape)          (None, 500, 1)            0         \\n\",\n-      \"_________________________________________________________________\\n\",\n-      \"gaussian_noise_1 (GaussianNo (None, 500, 1)            0         \\n\",\n-      \"_________________________________________________________________\\n\",\n-      \"conv1d_3 (Conv1D)            (None, 500, 13)           52        \\n\",\n-      \"_________________________________________________________________\\n\",\n-      \"max_pooling1d_3 (MaxPooling1 (None, 250, 13)           0         \\n\",\n-      \"_________________________________________________________________\\n\",\n-      \"spatial_dropout1d_3 (Spatial (None, 250, 13)           0         \\n\",\n-      \"_________________________________________________________________\\n\",\n-      \"batch_normalization_3 (Batch (None, 250, 13)           52        \\n\",\n-      \"_________________________________________________________________\\n\",\n-      \"conv1d_4 (Conv1D)            (None, 250, 118)          23128     \\n\",\n-      \"_________________________________________________________________\\n\",\n-      \"max_pooling1d_4 (MaxPooling1 (None, 250, 118)          0         \\n\",\n-      \"_________________________________________________________________\\n\",\n-      \"spatial_dropout1d_4 (Spatial (None, 250, 118)          0         \\n\",\n-      \"_________________________________________________________________\\n\",\n-      \"batch_normalization_4 (Batch (None, 250, 118)          472       \\n\",\n-      \"_________________________________________________________________\\n\",\n-      \"conv1d_5 (Conv1D)            (None, 250, 100)          59100     \\n\",\n-      \"_________________________________________________________________\\n\",\n-      \"max_pooling1d_5 (MaxPooling1 (None, 62, 100)           0         \\n\",\n-      \"_________________________________________________________________\\n\",\n-      \"batch_normalization_5 (Batch (None, 62, 100)           400       \\n\",\n-      \"_________________________________________________________________\\n\",\n-      \"spatial_dropout1d_5 (Spatial (None, 62, 100)           0         \\n\",\n-      \"_________________________________________________________________\\n\",\n-      \"flatten_1 (Flatten)          (None, 6200)              0         \\n\",\n-      \"_________________________________________________________________\\n\",\n-      \"dense_2 (Dense)              (None, 224)               1389024   \\n\",\n-      \"_________________________________________________________________\\n\",\n-      \"dense_3 (Dense)              (None, 4)                 900       \\n\",\n-      \"=================================================================\\n\",\n-      \"Total params: 1,473,128\\n\",\n-      \"Trainable params: 1,472,666\\n\",\n-      \"Non-trainable params: 462\\n\",\n-      \"_________________________________________________________________\\n\",\n-      \"Epoch 1/5\\n\",\n-      \"2811/2811 [==============================] - 27s 9ms/step - loss: 0.7150 - accuracy: 0.6399 - val_loss: 0.5522 - val_accuracy: 0.6968\\n\",\n-      \"Epoch 2/5\\n\",\n-      \"2811/2811 [==============================] - 25s 9ms/step - loss: 0.5401 - accuracy: 0.7148 - val_loss: 0.4838 - val_accuracy: 0.7471\\n\",\n-      \"Epoch 3/5\\n\",\n-      \"2811/2811 [==============================] - 25s 9ms/step - loss: 0.4662 - accuracy: 0.7664 - val_loss: 0.4180 - val_accuracy: 0.7918\\n\",\n-      \"Epoch 4/5\\n\",\n-      \"2811/2811 [==============================] - 25s 9ms/step - loss: 0.4020 - accuracy: 0.8074 - val_loss: 0.3845 - val_accuracy: 0.8134\\n\",\n-      \"Epoch 5/5\\n\",\n-      \"2811/2811 [==============================] - 25s 9ms/step - loss: 0.3496 - accuracy: 0.8380 - val_loss: 0.3544 - val_accuracy: 0.8335\\n\",\n-      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/AirbusDistance/1cm\\n\",\n-      \"Cut data in pieces with these shapes: after header:(14093, 500), before header:(5895, 500)\\n\",\n-      \"Confusion matrix:\\n\",\n-      \"H V P M \\n\",\n-      \"[[3307  618  506  526]\\n\",\n-      \" [ 548 3439  482  633]\\n\",\n-      \" [ 674  672 3177  450]\\n\",\n-      \" [ 633  554  710 3059]]\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0101: 0.7679107464478687\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0011: 0.7658595157094257\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0110: 0.7652091254752852\\n\",\n-      \"Test accuracy: 0.6494896938162897\\n\",\n-      \"\\n\",\n-      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/AirbusDistance/1cm\\n\",\n-      \"Cut data in pieces with these shapes: after header:(14093, 500), before header:(5895, 500)\\n\",\n-      \"Confusion matrix:\\n\",\n-      \"H V P M \\n\",\n-      \"[[3239  657  539  522]\\n\",\n-      \" [ 524 3446  509  623]\\n\",\n-      \" [ 665  680 3148  480]\\n\",\n-      \" [ 610  572  698 3076]]\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0101: 0.7658595157094257\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0011: 0.7638583149889934\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0110: 0.7619571743045828\\n\",\n-      \"Test accuracy: 0.6458375025015008\\n\",\n-      \"\\n\",\n-      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/AirbusDistance/1cm\\n\",\n-      \"Cut data in pieces with these shapes: after header:(14093, 500), before header:(5895, 500)\\n\",\n-      \"Confusion matrix:\\n\",\n-      \"H V P M \\n\",\n-      \"[[3254  634  541  528]\\n\",\n-      \" [ 536 3451  482  633]\\n\",\n-      \" [ 681  676 3162  454]\\n\",\n-      \" [ 619  540  707 3090]]\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0101: 0.7680608365019012\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0011: 0.7648589153492096\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0110: 0.7635581348809286\\n\",\n-      \"Test accuracy: 0.6482389433660196\\n\",\n-      \"\\n\",\n-      \"\\n\",\n-      \"\\n\",\n-      \"created a json file of the test accuracies at ./test_accuracy_20220626-1759.json\\n\"\n-     ]\n-    },\n-    {\n-     \"name\": \"stderr\",\n-     \"output_type\": \"stream\",\n-     \"text\": [\n-      \"/home/a/A.Baliuka/emissionsecurity/paper/preprocessing.py:94: UserWarning: This function is deprecated. Use `load_cached_data_file` on individual files!\\n\",\n-      \"  warnings.warn(\\\"This function is deprecated. Use `load_cached_data_file` on individual files!\\\")\\n\",\n-      \"/home/a/A.Baliuka/emissionsecurity/paper/preprocessing.py:184: RuntimeWarning: divide by zero encountered in double_scalars\\n\",\n-      \"  if np.max(correlation) / np.median(correlation) < 2.:\\n\"\n-     ]\n-    },\n-    {\n-     \"name\": \"stdout\",\n-     \"output_type\": \"stream\",\n-     \"text\": [\n-      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/AirbusDistance/2cm\\n\",\n-      \"Cut data in pieces with these shapes: after header:(14093, 500), before header:(5894, 500)\\n\",\n-      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/AirbusDistance/2cm\\n\",\n-      \"Cut data in pieces with these shapes: after header:(42279, 500), before header:(17682, 500)\\n\",\n-      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/AirbusDistance/2cm\\n\",\n-      \"Cut data in pieces with these shapes: after header:(42279, 500), before header:(17682, 500)\\n\",\n-      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/AirbusDistance/2cm\\n\",\n-      \"Cut data in pieces with these shapes: after header:(42279, 500), before header:(17682, 500)\\n\",\n-      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/AirbusDistance/2cm\\n\",\n-      \"Cut data in pieces with these shapes: after header:(42279, 500), before header:(17682, 500)\\n\",\n-      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/AirbusDistance/2cm\\n\",\n-      \"Cut data in pieces with these shapes: after header:(42279, 500), before header:(17682, 500)\\n\",\n-      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/AirbusDistance/2cm\\n\",\n-      \"Cut data in pieces with these shapes: after header:(42279, 500), before header:(17682, 500)\\n\",\n-      \"Model: \\\"sequential_2\\\"\\n\",\n-      \"_________________________________________________________________\\n\",\n-      \"Layer (type)                 Output Shape              Param #   \\n\",\n-      \"=================================================================\\n\",\n-      \"reshape_2 (Reshape)          (None, 500, 1)            0         \\n\",\n-      \"_________________________________________________________________\\n\",\n-      \"gaussian_noise_2 (GaussianNo (None, 500, 1)            0         \\n\",\n-      \"_________________________________________________________________\\n\",\n-      \"conv1d_6 (Conv1D)            (None, 500, 13)           52        \\n\",\n-      \"_________________________________________________________________\\n\",\n-      \"max_pooling1d_6 (MaxPooling1 (None, 250, 13)           0         \\n\",\n-      \"_________________________________________________________________\\n\",\n-      \"spatial_dropout1d_6 (Spatial (None, 250, 13)           0         \\n\",\n-      \"_________________________________________________________________\\n\",\n-      \"batch_normalization_6 (Batch (None, 250, 13)           52        \\n\",\n-      \"_________________________________________________________________\\n\",\n-      \"conv1d_7 (Conv1D)            (None, 250, 118)          23128     \\n\",\n-      \"_________________________________________________________________\\n\",\n-      \"max_pooling1d_7 (MaxPooling1 (None, 250, 118)          0         \\n\",\n-      \"_________________________________________________________________\\n\",\n-      \"spatial_dropout1d_7 (Spatial (None, 250, 118)          0         \\n\",\n-      \"_________________________________________________________________\\n\",\n-      \"batch_normalization_7 (Batch (None, 250, 118)          472       \\n\",\n-      \"_________________________________________________________________\\n\",\n-      \"conv1d_8 (Conv1D)            (None, 250, 100)          59100     \\n\",\n-      \"_________________________________________________________________\\n\",\n-      \"max_pooling1d_8 (MaxPooling1 (None, 62, 100)           0         \\n\",\n-      \"_________________________________________________________________\\n\",\n-      \"batch_normalization_8 (Batch (None, 62, 100)           400       \\n\",\n-      \"_________________________________________________________________\\n\",\n-      \"spatial_dropout1d_8 (Spatial (None, 62, 100)           0         \\n\",\n-      \"_________________________________________________________________\\n\",\n-      \"flatten_2 (Flatten)          (None, 6200)              0         \\n\",\n-      \"_________________________________________________________________\\n\",\n-      \"dense_4 (Dense)              (None, 224)               1389024   \\n\",\n-      \"_________________________________________________________________\\n\",\n-      \"dense_5 (Dense)              (None, 4)                 900       \\n\",\n-      \"=================================================================\\n\",\n-      \"Total params: 1,473,128\\n\",\n-      \"Trainable params: 1,472,666\\n\",\n-      \"Non-trainable params: 462\\n\",\n-      \"_________________________________________________________________\\n\",\n-      \"Epoch 1/5\\n\",\n-      \"2811/2811 [==============================] - 27s 9ms/step - loss: 0.9111 - accuracy: 0.5768 - val_loss: 0.7364 - val_accuracy: 0.6326\\n\",\n-      \"Epoch 2/5\\n\",\n-      \"2811/2811 [==============================] - 26s 9ms/step - loss: 0.7008 - accuracy: 0.6570 - val_loss: 0.6671 - val_accuracy: 0.6633\\n\",\n-      \"Epoch 3/5\\n\",\n-      \"2811/2811 [==============================] - 26s 9ms/step - loss: 0.6127 - accuracy: 0.7054 - val_loss: 0.6554 - val_accuracy: 0.6814\\n\",\n-      \"Epoch 4/5\\n\",\n-      \"2811/2811 [==============================] - 25s 9ms/step - loss: 0.5423 - accuracy: 0.7457 - val_loss: 0.6646 - val_accuracy: 0.6905\\n\",\n-      \"Epoch 5/5\\n\",\n-      \"2811/2811 [==============================] - 26s 9ms/step - loss: 0.4812 - accuracy: 0.7804 - val_loss: 0.6834 - val_accuracy: 0.6972\\n\",\n-      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/AirbusDistance/2cm\\n\",\n-      \"Cut data in pieces with these shapes: after header:(14093, 500), before header:(5894, 500)\\n\",\n-      \"Confusion matrix:\\n\",\n-      \"H V P M \\n\",\n-      \"[[2932  670  718  636]\\n\",\n-      \" [ 580 3161  630  731]\\n\",\n-      \" [ 731  639 2981  622]\\n\",\n-      \" [ 639  583  590 3144]]\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0101: 0.7495371991794667\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0011: 0.7344774103167059\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0110: 0.7385800770500826\\n\",\n-      \"Test accuracy: 0.6112973432731276\\n\",\n-      \"\\n\",\n-      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/AirbusDistance/2cm\\n\",\n-      \"Cut data in pieces with these shapes: after header:(14093, 500), before header:(5894, 500)\\n\",\n-      \"Confusion matrix:\\n\",\n-      \"H V P M \\n\",\n-      \"[[2949  656  754  597]\\n\",\n-      \" [ 582 3188  600  732]\\n\",\n-      \" [ 699  677 2982  615]\\n\",\n-      \" [ 590  626  633 3107]]\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0101: 0.7523390203632361\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0011: 0.7360784509931455\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0110: 0.7349777355280933\\n\",\n-      \"Test accuracy: 0.6116976034422374\\n\",\n-      \"\\n\",\n-      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/AirbusDistance/2cm\\n\",\n-      \"Cut data in pieces with these shapes: after header:(14093, 500), before header:(5894, 500)\\n\",\n-      \"Confusion matrix:\\n\",\n-      \"H V P M \\n\",\n-      \"[[3019  642  729  566]\\n\",\n-      \" [ 594 3147  617  744]\\n\",\n-      \" [ 717  647 2983  626]\\n\",\n-      \" [ 615  552  631 3158]]\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0101: 0.752939410616901\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0011: 0.7404813128533547\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0110: 0.7380797518386951\\n\",\n-      \"Test accuracy: 0.6157502376544755\\n\",\n-      \"\\n\",\n-      \"\\n\",\n-      \"\\n\",\n-      \"created a json file of the test accuracies at ./test_accuracy_20220626-1759.json\\n\"\n+      \"Epoch 1/10\\n\"\n      ]\n     },\n     {\n      \"name\": \"stderr\",\n      \"output_type\": \"stream\",\n      \"text\": [\n-      \"/home/a/A.Baliuka/emissionsecurity/paper/preprocessing.py:94: UserWarning: This function is deprecated. Use `load_cached_data_file` on individual files!\\n\",\n-      \"  warnings.warn(\\\"This function is deprecated. Use `load_cached_data_file` on individual files!\\\")\\n\",\n-      \"/home/a/A.Baliuka/emissionsecurity/paper/preprocessing.py:184: RuntimeWarning: divide by zero encountered in double_scalars\\n\",\n-      \"  if np.max(correlation) / np.median(correlation) < 2.:\\n\"\n+      \"2022-07-03 13:27:43.617852: I tensorflow/compiler/mlir/mlir_graph_optimization_pass.cc:185] None of the MLIR Optimization Passes are enabled (registered 2)\\n\",\n+      \"2022-07-03 13:27:45.068933: I tensorflow/stream_executor/cuda/cuda_dnn.cc:369] Loaded cuDNN version 8201\\n\",\n+      \"2022-07-03 13:27:47.139007: I tensorflow/stream_executor/cuda/cuda_blas.cc:1760] TensorFloat-32 will be used for the matrix multiplication. This will only be logged once.\\n\"\n      ]\n     },\n     {\n      \"name\": \"stdout\",\n      \"output_type\": \"stream\",\n      \"text\": [\n-      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/AirbusDistance/3cm\\n\",\n-      \"Cut data in pieces with these shapes: after header:(14093, 500), before header:(5894, 500)\\n\",\n-      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/AirbusDistance/3cm\\n\",\n-      \"Cut data in pieces with these shapes: after header:(42279, 500), before header:(17682, 500)\\n\",\n-      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/AirbusDistance/3cm\\n\",\n-      \"Cut data in pieces with these shapes: after header:(42279, 500), before header:(17682, 500)\\n\",\n-      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/AirbusDistance/3cm\\n\",\n-      \"Cut data in pieces with these shapes: after header:(42279, 500), before header:(17682, 500)\\n\",\n-      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/AirbusDistance/3cm\\n\",\n-      \"Cut data in pieces with these shapes: after header:(42279, 500), before header:(17682, 500)\\n\",\n-      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/AirbusDistance/3cm\\n\",\n-      \"Cut data in pieces with these shapes: after header:(42279, 500), before header:(17682, 500)\\n\",\n-      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/AirbusDistance/3cm\\n\",\n-      \"Cut data in pieces with these shapes: after header:(42279, 500), before header:(17682, 500)\\n\",\n-      \"Model: \\\"sequential_3\\\"\\n\",\n-      \"_________________________________________________________________\\n\",\n-      \"Layer (type)                 Output Shape              Param #   \\n\",\n-      \"=================================================================\\n\",\n-      \"reshape_3 (Reshape)          (None, 500, 1)            0         \\n\",\n-      \"_________________________________________________________________\\n\",\n-      \"gaussian_noise_3 (GaussianNo (None, 500, 1)            0         \\n\",\n-      \"_________________________________________________________________\\n\",\n-      \"conv1d_9 (Conv1D)            (None, 500, 13)           52        \\n\",\n-      \"_________________________________________________________________\\n\",\n-      \"max_pooling1d_9 (MaxPooling1 (None, 250, 13)           0         \\n\",\n-      \"_________________________________________________________________\\n\",\n-      \"spatial_dropout1d_9 (Spatial (None, 250, 13)           0         \\n\",\n-      \"_________________________________________________________________\\n\",\n-      \"batch_normalization_9 (Batch (None, 250, 13)           52        \\n\",\n-      \"_________________________________________________________________\\n\",\n-      \"conv1d_10 (Conv1D)           (None, 250, 118)          23128     \\n\",\n-      \"_________________________________________________________________\\n\",\n-      \"max_pooling1d_10 (MaxPooling (None, 250, 118)          0         \\n\",\n-      \"_________________________________________________________________\\n\",\n-      \"spatial_dropout1d_10 (Spatia (None, 250, 118)          0         \\n\",\n-      \"_________________________________________________________________\\n\",\n-      \"batch_normalization_10 (Batc (None, 250, 118)          472       \\n\",\n-      \"_________________________________________________________________\\n\",\n-      \"conv1d_11 (Conv1D)           (None, 250, 100)          59100     \\n\",\n-      \"_________________________________________________________________\\n\",\n-      \"max_pooling1d_11 (MaxPooling (None, 62, 100)           0         \\n\",\n-      \"_________________________________________________________________\\n\",\n-      \"batch_normalization_11 (Batc (None, 62, 100)           400       \\n\",\n-      \"_________________________________________________________________\\n\",\n-      \"spatial_dropout1d_11 (Spatia (None, 62, 100)           0         \\n\",\n-      \"_________________________________________________________________\\n\",\n-      \"flatten_3 (Flatten)          (None, 6200)              0         \\n\",\n-      \"_________________________________________________________________\\n\",\n-      \"dense_6 (Dense)              (None, 224)               1389024   \\n\",\n-      \"_________________________________________________________________\\n\",\n-      \"dense_7 (Dense)              (None, 4)                 900       \\n\",\n-      \"=================================================================\\n\",\n-      \"Total params: 1,473,128\\n\",\n-      \"Trainable params: 1,472,666\\n\",\n-      \"Non-trainable params: 462\\n\",\n-      \"_________________________________________________________________\\n\",\n-      \"Epoch 1/5\\n\",\n-      \"2811/2811 [==============================] - 27s 9ms/step - loss: 1.2400 - accuracy: 0.4238 - val_loss: 1.2074 - val_accuracy: 0.4420\\n\",\n-      \"Epoch 2/5\\n\",\n-      \"2811/2811 [==============================] - 26s 9ms/step - loss: 1.1536 - accuracy: 0.4736 - val_loss: 1.1895 - val_accuracy: 0.4553\\n\",\n-      \"Epoch 3/5\\n\",\n-      \"2811/2811 [==============================] - 26s 9ms/step - loss: 1.0977 - accuracy: 0.5055 - val_loss: 1.1987 - val_accuracy: 0.4560\\n\",\n-      \"Epoch 4/5\\n\",\n-      \"2811/2811 [==============================] - 25s 9ms/step - loss: 1.0310 - accuracy: 0.5443 - val_loss: 1.2334 - val_accuracy: 0.4511\\n\",\n-      \"Epoch 5/5\\n\",\n-      \"2811/2811 [==============================] - 26s 9ms/step - loss: 0.9514 - accuracy: 0.5865 - val_loss: 1.2912 - val_accuracy: 0.4483\\n\",\n-      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/AirbusDistance/3cm\\n\",\n-      \"Cut data in pieces with these shapes: after header:(14093, 500), before header:(5894, 500)\\n\",\n-      \"Confusion matrix:\\n\",\n-      \"H V P M \\n\",\n-      \"[[2118  907 1162  769]\\n\",\n-      \" [ 857 2558  606 1081]\\n\",\n-      \" [1210  768 2113  882]\\n\",\n-      \" [ 809 1172  772 2203]]\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0101: 0.6812928403462251\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0011: 0.6209035873317656\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0110: 0.5975884324811127\\n\",\n-      \"Test accuracy: 0.4498924300795517\\n\",\n-      \"\\n\",\n-      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/AirbusDistance/3cm\\n\",\n-      \"Cut data in pieces with these shapes: after header:(14093, 500), before header:(5894, 500)\\n\",\n-      \"Confusion matrix:\\n\",\n-      \"H V P M \\n\",\n-      \"[[2151  917 1137  751]\\n\",\n-      \" [ 838 2631  592 1041]\\n\",\n-      \" [1255  783 2139  796]\\n\",\n-      \" [ 739 1213  782 2222]]\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0101: 0.6898984339820884\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0011: 0.6242057337269225\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0110: 0.6007905138339921\\n\",\n-      \"Test accuracy: 0.45744734077150145\\n\",\n-      \"\\n\",\n-      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/AirbusDistance/3cm\\n\",\n-      \"Cut data in pieces with these shapes: after header:(14093, 500), before header:(5894, 500)\\n\",\n-      \"Confusion matrix:\\n\",\n-      \"H V P M \\n\",\n-      \"[[2132  890 1197  737]\\n\",\n-      \" [ 915 2533  601 1053]\\n\",\n-      \" [1296  764 2095  818]\\n\",\n-      \" [ 778 1254  761 2163]]\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0101: 0.6865962875869315\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0011: 0.6157502376544755\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0110: 0.5905338470005503\\n\",\n-      \"Test accuracy: 0.44644018612097863\\n\",\n-      \"\\n\",\n-      \"\\n\",\n-      \"\\n\",\n-      \"created a json file of the test accuracies at ./test_accuracy_20220626-1759.json\\n\"\n-     ]\n-    },\n-    {\n-     \"name\": \"stderr\",\n-     \"output_type\": \"stream\",\n-     \"text\": [\n-      \"/home/a/A.Baliuka/emissionsecurity/paper/preprocessing.py:94: UserWarning: This function is deprecated. Use `load_cached_data_file` on individual files!\\n\",\n-      \"  warnings.warn(\\\"This function is deprecated. Use `load_cached_data_file` on individual files!\\\")\\n\",\n-      \"/home/a/A.Baliuka/emissionsecurity/paper/preprocessing.py:184: RuntimeWarning: divide by zero encountered in double_scalars\\n\",\n-      \"  if np.max(correlation) / np.median(correlation) < 2.:\\n\"\n-     ]\n-    },\n-    {\n-     \"name\": \"stdout\",\n-     \"output_type\": \"stream\",\n-     \"text\": [\n-      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/AirbusDistance/4cm\\n\",\n-      \"Cut data in pieces with these shapes: after header:(14093, 500), before header:(5894, 500)\\n\",\n-      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/AirbusDistance/4cm\\n\",\n-      \"Cut data in pieces with these shapes: after header:(42279, 500), before header:(17682, 500)\\n\",\n-      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/AirbusDistance/4cm\\n\",\n-      \"Cut data in pieces with these shapes: after header:(42279, 500), before header:(17682, 500)\\n\",\n-      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/AirbusDistance/4cm\\n\",\n-      \"Cut data in pieces with these shapes: after header:(42279, 500), before header:(17682, 500)\\n\",\n-      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/AirbusDistance/4cm\\n\",\n-      \"Cut data in pieces with these shapes: after header:(42279, 500), before header:(17682, 500)\\n\",\n-      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/AirbusDistance/4cm\\n\",\n-      \"Cut data in pieces with these shapes: after header:(42279, 500), before header:(17682, 500)\\n\",\n-      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/AirbusDistance/4cm\\n\",\n-      \"Cut data in pieces with these shapes: after header:(42279, 500), before header:(17682, 500)\\n\",\n-      \"Model: \\\"sequential_4\\\"\\n\",\n-      \"_________________________________________________________________\\n\",\n-      \"Layer (type)                 Output Shape              Param #   \\n\",\n-      \"=================================================================\\n\",\n-      \"reshape_4 (Reshape)          (None, 500, 1)            0         \\n\",\n-      \"_________________________________________________________________\\n\",\n-      \"gaussian_noise_4 (GaussianNo (None, 500, 1)            0         \\n\",\n-      \"_________________________________________________________________\\n\",\n-      \"conv1d_12 (Conv1D)           (None, 500, 13)           52        \\n\",\n-      \"_________________________________________________________________\\n\",\n-      \"max_pooling1d_12 (MaxPooling (None, 250, 13)           0         \\n\",\n-      \"_________________________________________________________________\\n\",\n-      \"spatial_dropout1d_12 (Spatia (None, 250, 13)           0         \\n\",\n-      \"_________________________________________________________________\\n\",\n-      \"batch_normalization_12 (Batc (None, 250, 13)           52        \\n\",\n-      \"_________________________________________________________________\\n\",\n-      \"conv1d_13 (Conv1D)           (None, 250, 118)          23128     \\n\",\n-      \"_________________________________________________________________\\n\",\n-      \"max_pooling1d_13 (MaxPooling (None, 250, 118)          0         \\n\",\n-      \"_________________________________________________________________\\n\",\n-      \"spatial_dropout1d_13 (Spatia (None, 250, 118)          0         \\n\",\n-      \"_________________________________________________________________\\n\",\n-      \"batch_normalization_13 (Batc (None, 250, 118)          472       \\n\",\n-      \"_________________________________________________________________\\n\",\n-      \"conv1d_14 (Conv1D)           (None, 250, 100)          59100     \\n\",\n-      \"_________________________________________________________________\\n\",\n-      \"max_pooling1d_14 (MaxPooling (None, 62, 100)           0         \\n\",\n-      \"_________________________________________________________________\\n\",\n-      \"batch_normalization_14 (Batc (None, 62, 100)           400       \\n\",\n-      \"_________________________________________________________________\\n\",\n-      \"spatial_dropout1d_14 (Spatia (None, 62, 100)           0         \\n\",\n-      \"_________________________________________________________________\\n\",\n-      \"flatten_4 (Flatten)          (None, 6200)              0         \\n\",\n-      \"_________________________________________________________________\\n\",\n-      \"dense_8 (Dense)              (None, 224)               1389024   \\n\",\n-      \"_________________________________________________________________\\n\",\n-      \"dense_9 (Dense)              (None, 4)                 900       \\n\",\n-      \"=================================================================\\n\",\n-      \"Total params: 1,473,128\\n\",\n-      \"Trainable params: 1,472,666\\n\",\n-      \"Non-trainable params: 462\\n\",\n-      \"_________________________________________________________________\\n\",\n-      \"Epoch 1/5\\n\",\n-      \"2811/2811 [==============================] - 27s 9ms/step - loss: 1.3677 - accuracy: 0.3115 - val_loss: 1.3515 - val_accuracy: 0.3292\\n\",\n-      \"Epoch 2/5\\n\",\n-      \" 859/2811 [========>.....................] - ETA: 17s - loss: 1.3422 - accuracy: 0.3424\"\n+      \"2811/2811 [==============================] - 32s 9ms/step - loss: 0.7983 - accuracy: 0.6539 - val_loss: 0.6702 - val_accuracy: 0.7127\\n\",\n+      \"Epoch 2/10\\n\",\n+      \"2811/2811 [==============================] - 26s 9ms/step - loss: 0.6381 - accuracy: 0.7288 - val_loss: 0.4160 - val_accuracy: 0.8223\\n\",\n+      \"Epoch 3/10\\n\",\n+      \"2811/2811 [==============================] - 26s 9ms/step - loss: 0.4781 - accuracy: 0.8013 - val_loss: 0.3582 - val_accuracy: 0.8466\\n\",\n+      \"Epoch 4/10\\n\",\n+      \"2811/2811 [==============================] - 26s 9ms/step - loss: 0.4402 - accuracy: 0.8175 - val_loss: 0.3507 - val_accuracy: 0.8521\\n\",\n+      \"Epoch 5/10\\n\",\n+      \"2811/2811 [==============================] - 26s 9ms/step - loss: 0.4190 - accuracy: 0.8264 - val_loss: 0.3402 - val_accuracy: 0.8556\\n\",\n+      \"Epoch 6/10\\n\",\n+      \"2811/2811 [==============================] - 26s 9ms/step - loss: 0.4039 - accuracy: 0.8322 - val_loss: 0.3411 - val_accuracy: 0.8549\\n\",\n+      \"Epoch 7/10\\n\",\n+      \"2811/2811 [==============================] - 26s 9ms/step - loss: 0.3937 - accuracy: 0.8366 - val_loss: 0.3351 - val_accuracy: 0.8594\\n\",\n+      \"Epoch 8/10\\n\",\n+      \"2811/2811 [==============================] - 26s 9ms/step - loss: 0.3833 - accuracy: 0.8418 - val_loss: 0.3337 - val_accuracy: 0.8598\\n\",\n+      \"Epoch 9/10\\n\",\n+      \" 595/2811 [=====>........................] - ETA: 19s - loss: 0.3777 - accuracy: 0.8427\"\n      ]\n     }\n    ],\n\n---", "paper/TEMPEST_ATTACK_VARY_TRAINING_DATA.ipynb\n=======================================================\nlhs: 100644 | e92adba6d4a107db8ad31d531b212d4f256fb19f\nrhs: 100644 | b65c7ea9f7a482ac44a6ba754f8925e223877e7e\n---@@ -128,7 +128,7 @@\n     \"    \\n\",\n     \"    for i, elem in enumerate(positions):\\n\",\n     \"        for max_train_files in range(2, 20, 1):\\n\",\n-    \"            print(f\\\"---------------------- {max_train_files=} ----------------------------------\\\")\\n\",\n+    \"            print(f\\\"------------- dataset {i}: {elem} with {max_train_files=} ----------------------------------\\\")\\n\",\n     \"            training_data, training_labels, validation_data, validation_labels = pp.get_datasets(\\n\",\n     \"                os.path.join(data_directory, elem), technical_details, offset_header=offset_header,\\n\",\n     \"                data_augmentation_halflength=1, debug=debug, force_create_npy_files=use_new_data,\\n\",\n\n---", "paper/Visualize_Results_2D.ipynb\n=======================================================\nlhs: 100644 | 0803edb73b02e145f66681674e03a19efb004d9c\nrhs: 100644 | 039f3393be5ee2ecae67f889ddc9ce84f6ccf82f\n---@@ -5,15 +5,7 @@\n    \"execution_count\": 1,\n    \"id\": \"63bbe8e3-4d50-4240-b473-a7ad8dfad902\",\n    \"metadata\": {},\n-   \"outputs\": [\n-    {\n-     \"name\": \"stderr\",\n-     \"output_type\": \"stream\",\n-     \"text\": [\n-      \"Matplotlib created a temporary config/cache directory at /tmp/matplotlib-qs8dz4qn because the default path (/home/m/Markus.Stoecker/.cache/matplotlib) is not a writable directory; it is highly recommended to set the MPLCONFIGDIR environment variable to a writable directory, in particular to speed up the import of Matplotlib and to better support multiprocessing.\\n\"\n-     ]\n-    }\n-   ],\n+   \"outputs\": [],\n    \"source\": [\n     \"import os\\n\",\n     \"import datetime\\n\",\n@@ -32,7 +24,7 @@\n     {\n      \"data\": {\n       \"text/plain\": [\n-       \"'/home/m/Markus.Stoecker/emissionsecurity/paper'\"\n+       \"'/home/a/A.Baliuka/emissionsecurity/paper'\"\n       ]\n      },\n      \"execution_count\": 2,\n@@ -60,7 +52,7 @@\n   },\n   {\n    \"cell_type\": \"code\",\n-   \"execution_count\": 10,\n+   \"execution_count\": 21,\n    \"id\": \"08316a21-5ece-41b5-ad20-212767253a7c\",\n    \"metadata\": {},\n    \"outputs\": [],\n@@ -76,24 +68,25 @@\n     \"            matcher = re.compile(r'2d_([0-9]+)\\\\...._([0-9]+)\\\\....')  # e.g. '2d_10.000_0.000'\\n\",\n     \"            m = matcher.match(key)\\n\",\n     \"            matrix[int(m.group(2)), int(m.group(1))] = pos_to_acc[key]\\n\",\n-    \"        except:\\n\",\n-    \"            print(f\\\"Error for {key}\\\")\\n\",\n+    \"        except Exception as e:\\n\",\n+    \"            print(f\\\"Error {e} for {key}\\\")\\n\",\n     \"\\n\",\n     \"    # plot the matrix as an image with an appropriate colormap\\n\",\n     \"    fig = plt.figure()\\n\",\n-    \"    plt.imshow(matrix, aspect='auto', cmap=\\\"plasma\\\", origin='lower')\\n\",\n+    \"    plt.imshow(matrix, aspect='equal', cmap=\\\"plasma\\\", origin='lower')\\n\",\n     \"\\n\",\n     \"    # add the values\\n\",\n     \"    for (i, j), value in np.ndenumerate(matrix):\\n\",\n     \"        plt.text(j, i, f\\\"{value*100.:.0f}\\\", va='center', ha='center')\\n\",\n     \"    \\n\",\n+    \"    plt.savefig(\\\"2d_tmptmp.svg\\\")\\n\",\n     \"    plt.show()\\n\",\n     \"    return matrix\"\n    ]\n   },\n   {\n    \"cell_type\": \"code\",\n-   \"execution_count\": 14,\n+   \"execution_count\": 22,\n    \"id\": \"665b9918-4510-4dc3-abac-77541842a960\",\n    \"metadata\": {},\n    \"outputs\": [\n@@ -101,15 +94,25 @@\n      \"name\": \"stdout\",\n      \"output_type\": \"stream\",\n      \"text\": [\n-      \"{'2d_0.000_0.000': 0.41674167416741675, '2d_0.000_1.000': 0.39023902390239024, '2d_0.000_2.000': 0.45694569456945694, '2d_1.000_0.000': 0.6534653465346535, '2d_1.000_1.000': 0.6484648464846484, '2d_1.000_2.000': 0.5642564256425643, '2d_2.000_0.000': 0.49384938493849384, '2d_2.000_1.000': 0.8171817181718172, '2d_2.000_2.000': 0.2581258125812581}\\n\"\n+      \"{'2d_0.000_0.000': 0.2950417697429657, '2d_0.000_1.000': 0.25016260147094727, '2d_0.000_2.000': 0.25016260147094727, '2d_0.000_3.000': 0.24921198189258575, '2d_0.000_4.000': 0.25286436080932617, '2d_0.000_5.000': 0.37884625792503357, '2d_0.000_6.000': 0.3621353805065155, '2d_0.000_7.000': 0.35493069887161255, '2d_0.000_8.000': 0.33501777052879333, '2d_0.000_9.000': 0.34862661361694336, '2d_0.000_10.000': 0.34567469358444214, '2d_1.000_0.000': 0.25016260147094727, '2d_1.000_1.000': 0.3140040934085846, '2d_1.000_2.000': 0.25286436080932617, '2d_1.000_3.000': 0.3678891360759735, '2d_1.000_4.000': 0.4225746691226959, '2d_1.000_5.000': 0.4631510376930237, '2d_1.000_6.000': 0.439985990524292, '2d_1.000_7.000': 0.42345407605171204, '2d_1.000_8.000': 0.37354281544685364, '2d_1.000_9.000': 0.4058137834072113, '2d_1.000_10.000': 0.3863511383533478, '2d_2.000_0.000': 0.340021014213562, '2d_2.000_1.000': 0.3372191786766052, '2d_2.000_2.000': 0.25016260147094727, '2d_2.000_3.000': 0.39565718173980713, '2d_2.000_4.000': 0.4708060324192047, '2d_2.000_5.000': 0.5413018465042114, '2d_2.000_6.000': 0.5639165639877319, '2d_2.000_7.000': 0.557612419128418, '2d_2.000_8.000': 0.41041678190231323, '2d_2.000_9.000': 0.4198228716850281, '2d_2.000_10.000': 0.39730826020240784, '2d_3.000_0.000': 0.24040625989437103, '2d_3.000_1.000': 0.41216790676116943, '2d_3.000_2.000': 0.40541350841522217, '2d_3.000_3.000': 0.5488067269325256, '2d_3.000_4.000': 0.6591284275054932, '2d_3.000_5.000': 0.6215039491653442, '2d_3.000_6.000': 0.6685845851898193, '2d_3.000_7.000': 0.6563265919685364, '2d_3.000_8.000': 0.6189022660255432, '2d_3.000_9.000': 0.49462151527404785, '2d_3.000_10.000': 0.450993150472641, '2d_4.000_0.000': 0.5397008061408997, '2d_4.000_1.000': 0.6363136172294617, '2d_4.000_2.000': 0.5191874504089355, '2d_4.000_3.000': 0.6968029141426086}\\n\"\n      ]\n     }\n    ],\n    \"source\": [\n-    \"table_shape = (3,3)\\n\",\n-    \"path = '/project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/3x3_Test/test_accuracy_20220331-1623.json'\\n\",\n+    \"table_shape = (11,11)\\n\",\n+    \"path = './test_accuracy_20220701-1439.json'\\n\",\n+    \"\\n\",\n+    \"key = \\\"validation_accuracies\\\"\\n\",\n+    \"\\n\",\n     \"with open(os.path.join(path), 'r') as file:\\n\",\n-    \"    dict_accuracies = json.load(file)[\\\"test_accuracies\\\"]\\n\",\n+    \"    dict_accuracies = json.load(file)[key]\\n\",\n+    \"    \\n\",\n+    \"# with open(\\\"./test_accuracy_20220627-1656.json\\\", 'r') as file:\\n\",\n+    \"#     dict_accuracies.update(json.load(file)[key])  # TODO REMOVE!!!!!!!!!!!!!!!!!!!\\n\",\n+    \"\\n\",\n+    \"# with open(\\\"./test_accuracy_20220628-1059.json\\\", 'r') as file:\\n\",\n+    \"#     dict_accuracies.update(json.load(file)[key])  # TODO REMOVE!!!!!!!!!!!!!!!!!!!\\n\",\n+    \"    \\n\",\n     \"\\n\",\n     \"for key in dict_accuracies:\\n\",\n     \"    dict_accuracies[key] = float(np.max(dict_accuracies[key]))\\n\",\n@@ -118,13 +121,13 @@\n   },\n   {\n    \"cell_type\": \"code\",\n-   \"execution_count\": 12,\n+   \"execution_count\": 23,\n    \"id\": \"10d25f39-e51b-4fb4-8f17-6392bce36034\",\n    \"metadata\": {},\n    \"outputs\": [\n     {\n      \"data\": {\n-      \"image/png\": \"\\n\",\n+      \"image/png\": \"\\n\",\n       \"text/plain\": [\n        \"<Figure size 1440x1080 with 1 Axes>\"\n       ]\n@@ -141,10 +144,23 @@\n   },\n   {\n    \"cell_type\": \"code\",\n-   \"execution_count\": null,\n+   \"execution_count\": 24,\n    \"id\": \"985842e3-1477-4d21-8a99-bc32bdbb077c\",\n    \"metadata\": {},\n-   \"outputs\": [],\n+   \"outputs\": [\n+    {\n+     \"data\": {\n+      \"image/png\": \"\\n\",\n+      \"text/plain\": [\n+       \"<Figure size 1440x1080 with 2 Axes>\"\n+      ]\n+     },\n+     \"metadata\": {\n+      \"needs_background\": \"light\"\n+     },\n+     \"output_type\": \"display_data\"\n+    }\n+   ],\n    \"source\": [\n     \"plt.imshow(matrix, cmap='plasma', origin='lower')\\n\",\n     \"plt.colorbar()\\n\",\n@@ -158,6 +174,22 @@\n    \"metadata\": {},\n    \"outputs\": [],\n    \"source\": []\n+  },\n+  {\n+   \"cell_type\": \"code\",\n+   \"execution_count\": null,\n+   \"id\": \"c07afa6a-f789-409a-8e88-e16ff8c46ef6\",\n+   \"metadata\": {},\n+   \"outputs\": [],\n+   \"source\": []\n+  },\n+  {\n+   \"cell_type\": \"code\",\n+   \"execution_count\": null,\n+   \"id\": \"76a23049-90c5-4b1e-89b8-6f91fc8dc7b2\",\n+   \"metadata\": {},\n+   \"outputs\": [],\n+   \"source\": []\n   }\n  ],\n  \"metadata\": {\n\n---", "paper/hyperparameter_optimization.ipynb\n=======================================================\nlhs: 100644 | 3b9ea856d14d5aa4939b74a7e86e89a9ae569756\nrhs: 100644 | 5d85ffbc1d2e1f4de8667bfdd4ca44c278125952\n---@@ -95,6 +95,21 @@\n   {\n    \"cell_type\": \"code\",\n    \"execution_count\": 3,\n+   \"id\": \"089eb97b-4ab7-4b98-9454-fc1233287b3d\",\n+   \"metadata\": {},\n+   \"outputs\": [],\n+   \"source\": [\n+    \"debug=False\\n\",\n+    \"use_new_data=False\\n\",\n+    \"num_test_data_sets = 10\\n\",\n+    \"offset_header_rev1 = -200\\n\",\n+    \"offset_header_rev2 = 200\\n\",\n+    \"offset_header = offset_header_rev2\"\n+   ]\n+  },\n+  {\n+   \"cell_type\": \"code\",\n+   \"execution_count\": 4,\n    \"id\": \"50bb7930-54d1-4e34-8d58-c03ace7beb35\",\n    \"metadata\": {},\n    \"outputs\": [\n@@ -102,7 +117,7 @@\n      \"name\": \"stdout\",\n      \"output_type\": \"stream\",\n      \"text\": [\n-      \"Evaluating datasets: ['7.0cm', '00cm', '1.0cm', '2.0cm', '3.0cm', '4.0cm']\\n\"\n+      \"Evaluating datasets: ['FPGA2.5cm']\\n\"\n      ]\n     }\n    ],\n@@ -118,7 +133,7 @@\n     \"    \\\"do_normalize_data\\\": True,  # Use if data should be normalized to have zero mean and std 1\\n\",\n     \"}\\n\",\n     \"\\n\",\n-    \"data_directory=\\\"/project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/Distance_precise\\\"\\n\",\n+    \"data_directory=\\\"/project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev230meas2.5cm/\\\"\\n\",\n     \"\\n\",\n     \"# Array of the different distances in cm (folder names) used for the measurement\\n\",\n     \"# position = [dirname for dirname in os.listdir(data_directory) \\n\",\n@@ -131,7 +146,7 @@\n   },\n   {\n    \"cell_type\": \"code\",\n-   \"execution_count\": 4,\n+   \"execution_count\": 5,\n    \"id\": \"ee7cba52-820e-4058-a241-93c19f3ae772\",\n    \"metadata\": {},\n    \"outputs\": [],\n@@ -144,57 +159,104 @@\n   },\n   {\n    \"cell_type\": \"code\",\n-   \"execution_count\": 5,\n+   \"execution_count\": 8,\n    \"id\": \"af969409-2b19-4c66-a5c6-55badf735280\",\n    \"metadata\": {},\n    \"outputs\": [\n+    {\n+     \"name\": \"stderr\",\n+     \"output_type\": \"stream\",\n+     \"text\": [\n+      \"/home/a/A.Baliuka/emissionsecurity/paper/preprocessing.py:184: RuntimeWarning: divide by zero encountered in double_scalars\\n\",\n+      \"  if np.max(correlation) / np.median(correlation) < 2.:\\n\"\n+     ]\n+    },\n     {\n      \"name\": \"stdout\",\n      \"output_type\": \"stream\",\n      \"text\": [\n-      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/Distance_precise/1.0cm\\n\",\n-      \"\\n\",\n-      \"Found the data synchronization at 799864\\n\",\n-      \"\\n\",\n-      \"Cut data in pieces with these shapes: after header:(11896, 500), before header:(7992, 500)\\n\",\n-      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/Distance_precise/1.0cm\\n\",\n-      \"\\n\",\n-      \"Found the data synchronization at 799864\\n\",\n-      \"\\n\",\n-      \"Cut data in pieces with these shapes: after header:(83272, 500), before header:(55944, 500)\\n\",\n-      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/Distance_precise/1.0cm\\n\",\n-      \"\\n\",\n-      \"Found the data synchronization at 799864\\n\",\n-      \"\\n\",\n-      \"Cut data in pieces with these shapes: after header:(83272, 500), before header:(55944, 500)\\n\",\n-      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/Distance_precise/1.0cm\\n\",\n-      \"\\n\",\n-      \"Found the data synchronization at 799864\\n\",\n-      \"\\n\",\n-      \"Cut data in pieces with these shapes: after header:(83272, 500), before header:(55944, 500)\\n\",\n-      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/Distance_precise/1.0cm\\n\",\n-      \"\\n\",\n-      \"Found the data synchronization at 799864\\n\",\n-      \"\\n\",\n-      \"Cut data in pieces with these shapes: after header:(83272, 500), before header:(55944, 500)\\n\",\n-      \"(556864, 500)\\n\",\n-      \"(556864,)\\n\"\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev230meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13994, 500), before header:(5894, 500)\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev230meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(41982, 500), before header:(17682, 500)\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev230meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(41982, 500), before header:(17682, 500)\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev230meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(41982, 500), before header:(17682, 500)\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev230meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(41982, 500), before header:(17682, 500)\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev230meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(41982, 500), before header:(17682, 500)\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev230meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(41982, 500), before header:(17682, 500)\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev230meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(41982, 500), before header:(17682, 500)\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev230meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(41982, 500), before header:(17682, 500)\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev230meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(41982, 500), before header:(17682, 500)\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev230meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(41982, 500), before header:(17682, 500)\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev230meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(41982, 500), before header:(17682, 500)\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev230meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(41982, 500), before header:(17682, 500)\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev230meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(41982, 500), before header:(17682, 500)\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev230meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(41982, 500), before header:(17682, 500)\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev230meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(41982, 500), before header:(17682, 500)\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev230meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(41982, 500), before header:(17682, 500)\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev230meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(41982, 500), before header:(17682, 500)\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev230meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(41982, 500), before header:(17682, 500)\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev230meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(41982, 500), before header:(17682, 500)\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev230meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(41982, 500), before header:(17682, 500)\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev230meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(41982, 500), before header:(17682, 500)\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev230meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(41982, 500), before header:(17682, 500)\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev230meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(41982, 500), before header:(17682, 500)\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev230meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(41982, 500), before header:(17682, 500)\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev230meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(41982, 500), before header:(17682, 500)\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev230meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(41982, 500), before header:(17682, 500)\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev230meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(41982, 500), before header:(17682, 500)\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev230meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(41982, 500), before header:(17682, 500)\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev230meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(41982, 500), before header:(17682, 500)\\n\",\n+      \"(1730256, 500)\\n\",\n+      \"(1730256,)\\n\"\n      ]\n     },\n     {\n      \"name\": \"stderr\",\n      \"output_type\": \"stream\",\n      \"text\": [\n-      \"2022-03-30 11:16:03.135639: I tensorflow/core/platform/cpu_feature_guard.cc:142] This TensorFlow binary is optimized with oneAPI Deep Neural Network Library (oneDNN) to use the following CPU instructions in performance-critical operations:  SSE4.1 SSE4.2 AVX AVX2 FMA\\n\",\n+      \"2022-07-01 12:21:29.702352: I tensorflow/core/platform/cpu_feature_guard.cc:142] This TensorFlow binary is optimized with oneAPI Deep Neural Network Library (oneDNN) to use the following CPU instructions in performance-critical operations:  SSE4.1 SSE4.2 AVX AVX2 FMA\\n\",\n       \"To enable them in other operations, rebuild TensorFlow with the appropriate compiler flags.\\n\",\n-      \"2022-03-30 11:16:03.681481: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1510] Created device /job:localhost/replica:0/task:0/device:GPU:0 with 43630 MB memory:  -> device: 0, name: NVIDIA A40, pci bus id: 0000:01:00.0, compute capability: 8.6\\n\"\n+      \"2022-07-01 12:21:30.270916: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1510] Created device /job:localhost/replica:0/task:0/device:GPU:0 with 43614 MB memory:  -> device: 0, name: NVIDIA A40, pci bus id: 0000:81:00.0, compute capability: 8.6\\n\"\n      ]\n     }\n    ],\n    \"source\": [\n     \"training_data, training_labels, validation_data, validation_labels = pp.get_datasets(\\n\",\n-    \"    os.path.join(data_directory, position[2]), \\n\",\n-    \"    technical_details, data_augmentation_halflength=3,\\n\",\n+    \"    os.path.join(data_directory, position[0]), \\n\",\n+    \"    technical_details=technical_details,\\n\",\n+    \"    offset_header=offset_header,\\n\",\n+    \"    data_augmentation_halflength=1, \\n\",\n+    \"    debug=debug, \\n\",\n+    \"    force_create_npy_files=use_new_data\\n\",\n     \")\\n\",\n     \"\\n\",\n     \"print(training_data.shape)\\n\",\n@@ -211,7 +273,7 @@\n   },\n   {\n    \"cell_type\": \"code\",\n-   \"execution_count\": 6,\n+   \"execution_count\": 9,\n    \"id\": \"db20a227-a4fc-4745-9df5-a5a5ab640d0d\",\n    \"metadata\": {},\n    \"outputs\": [\n@@ -279,7 +341,7 @@\n   },\n   {\n    \"cell_type\": \"code\",\n-   \"execution_count\": 7,\n+   \"execution_count\": 10,\n    \"id\": \"87d2e9ca-1749-4d12-bb39-573ae2157753\",\n    \"metadata\": {},\n    \"outputs\": [],\n@@ -302,7 +364,7 @@\n   },\n   {\n    \"cell_type\": \"code\",\n-   \"execution_count\": 8,\n+   \"execution_count\": 11,\n    \"id\": \"36ca9e2d-ef5a-45db-ad7a-83d676246a65\",\n    \"metadata\": {},\n    \"outputs\": [\n@@ -347,56 +409,18 @@\n       \"Total params: 1,688,038\\n\",\n       \"Trainable params: 1,687,540\\n\",\n       \"Non-trainable params: 498\\n\",\n-      \"_________________________________________________________________\\n\",\n-      \"Successfully loaded test data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/Distance_precise/1.0cm\\n\",\n-      \"\\n\",\n-      \"Found the test data synchronization at 64\\n\",\n-      \"\\n\",\n-      \"prepared test data with shape: (19994, 500)\\n\"\n+      \"_________________________________________________________________\\n\"\n      ]\n     },\n     {\n-     \"name\": \"stderr\",\n-     \"output_type\": \"stream\",\n-     \"text\": [\n-      \"2022-03-30 11:16:08.813432: I tensorflow/compiler/mlir/mlir_graph_optimization_pass.cc:185] None of the MLIR Optimization Passes are enabled (registered 2)\\n\",\n-      \"2022-03-30 11:16:09.600153: I tensorflow/stream_executor/cuda/cuda_dnn.cc:369] Loaded cuDNN version 8201\\n\",\n-      \"2022-03-30 11:16:10.578419: I tensorflow/core/platform/default/subprocess.cc:304] Start cannot spawn child process: No such file or directory\\n\",\n-      \"2022-03-30 11:16:10.579219: I tensorflow/core/platform/default/subprocess.cc:304] Start cannot spawn child process: No such file or directory\\n\",\n-      \"2022-03-30 11:16:10.579242: W tensorflow/stream_executor/gpu/asm_compiler.cc:77] Couldn't get ptxas version string: Internal: Couldn't invoke ptxas --version\\n\",\n-      \"2022-03-30 11:16:10.580133: I tensorflow/core/platform/default/subprocess.cc:304] Start cannot spawn child process: No such file or directory\\n\",\n-      \"2022-03-30 11:16:10.580183: W tensorflow/stream_executor/gpu/redzone_allocator.cc:314] Internal: Failed to launch ptxas\\n\",\n-      \"Relying on driver to perform ptx compilation. \\n\",\n-      \"Modify $PATH to customize ptxas location.\\n\",\n-      \"This message will be only logged once.\\n\",\n-      \"2022-03-30 11:16:11.621361: I tensorflow/stream_executor/cuda/cuda_blas.cc:1760] TensorFloat-32 will be used for the matrix multiplication. This will only be logged once.\\n\"\n-     ]\n-    },\n-    {\n-     \"name\": \"stdout\",\n-     \"output_type\": \"stream\",\n-     \"text\": [\n-      \"Confusion matrix:\\n\",\n-      \"H V P M \\n\",\n-      \"[[2458    0    5    2]\\n\",\n-      \" [   3 1906   33  581]\\n\",\n-      \" [   3   40 2404   48]\\n\",\n-      \" [   2  476   34 2004]]\\n\",\n-      \"Test accuracy: 0.8772877287728773\\n\",\n-      \"0.8772877287728773\\n\",\n-      \"Successfully loaded test data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/Distance_precise/1.0cm\\n\",\n-      \"\\n\",\n-      \"Found the test data synchronization at 65\\n\",\n-      \"\\n\",\n-      \"prepared test data with shape: (19994, 500)\\n\",\n-      \"Confusion matrix:\\n\",\n-      \"H V P M \\n\",\n-      \"[[2456    1    5    3]\\n\",\n-      \" [   0 1892   31  600]\\n\",\n-      \" [   4   31 2424   36]\\n\",\n-      \" [   1  454   42 2019]]\\n\",\n-      \"Test accuracy: 0.8791879187918792\\n\",\n-      \"0.8791879187918792\\n\"\n+     \"ename\": \"AttributeError\",\n+     \"evalue\": \"module 'preprocessing' has no attribute 'load_test_data_synchronized'\",\n+     \"output_type\": \"error\",\n+     \"traceback\": [\n+      \"\\u001b[0;31m---------------------------------------------------------------------------\\u001b[0m\",\n+      \"\\u001b[0;31mAttributeError\\u001b[0m                            Traceback (most recent call last)\",\n+      \"\\u001b[0;32m/tmp/ipykernel_682/1305286116.py\\u001b[0m in \\u001b[0;36m<module>\\u001b[0;34m\\u001b[0m\\n\\u001b[1;32m      2\\u001b[0m \\u001b[0;34m\\u001b[0m\\u001b[0m\\n\\u001b[1;32m      3\\u001b[0m \\u001b[0;32mfor\\u001b[0m \\u001b[0mj\\u001b[0m \\u001b[0;32min\\u001b[0m \\u001b[0mrange\\u001b[0m\\u001b[0;34m(\\u001b[0m\\u001b[0;36m0\\u001b[0m\\u001b[0;34m,\\u001b[0m\\u001b[0;36m2\\u001b[0m\\u001b[0;34m)\\u001b[0m\\u001b[0;34m:\\u001b[0m\\u001b[0;34m\\u001b[0m\\u001b[0;34m\\u001b[0m\\u001b[0m\\n\\u001b[0;32m----> 4\\u001b[0;31m     test_data, test_labels = pp.load_test_data_synchronized(\\n\\u001b[0m\\u001b[1;32m      5\\u001b[0m         \\u001b[0mos\\u001b[0m\\u001b[0;34m.\\u001b[0m\\u001b[0mpath\\u001b[0m\\u001b[0;34m.\\u001b[0m\\u001b[0mjoin\\u001b[0m\\u001b[0;34m(\\u001b[0m\\u001b[0mdata_directory\\u001b[0m\\u001b[0;34m,\\u001b[0m \\u001b[0mposition\\u001b[0m\\u001b[0;34m[\\u001b[0m\\u001b[0;36m2\\u001b[0m\\u001b[0;34m]\\u001b[0m\\u001b[0;34m)\\u001b[0m\\u001b[0;34m,\\u001b[0m\\u001b[0;34m\\u001b[0m\\u001b[0;34m\\u001b[0m\\u001b[0m\\n\\u001b[1;32m      6\\u001b[0m         \\u001b[0mclock_freq\\u001b[0m\\u001b[0;34m=\\u001b[0m\\u001b[0mtechnical_details\\u001b[0m\\u001b[0;34m[\\u001b[0m\\u001b[0;34m\\\"clock_freq\\\"\\u001b[0m\\u001b[0;34m]\\u001b[0m\\u001b[0;34m,\\u001b[0m\\u001b[0;34m\\u001b[0m\\u001b[0;34m\\u001b[0m\\u001b[0m\\n\",\n+      \"\\u001b[0;31mAttributeError\\u001b[0m: module 'preprocessing' has no attribute 'load_test_data_synchronized'\"\n      ]\n     }\n    ],\n@@ -423,7 +447,7 @@\n   },\n   {\n    \"cell_type\": \"code\",\n-   \"execution_count\": 9,\n+   \"execution_count\": null,\n    \"id\": \"417d23fc-dcf8-42b9-99ef-6fc7d775c4b3\",\n    \"metadata\": {},\n    \"outputs\": [\n@@ -431,138 +455,13 @@\n      \"name\": \"stdout\",\n      \"output_type\": \"stream\",\n      \"text\": [\n-      \"prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 0 samples, test_accuracy=0.8791879187918792. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 1 samples, test_accuracy=0.8807880788078808. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 2 samples, test_accuracy=0.8781878187818782. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 3 samples, test_accuracy=0.8778877887788779. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 4 samples, test_accuracy=0.8735873587358736. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 5 samples, test_accuracy=0.8692869286928693. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 6 samples, test_accuracy=0.8593859385938594. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 7 samples, test_accuracy=0.8510851085108511. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 8 samples, test_accuracy=0.8343834383438344. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 9 samples, test_accuracy=0.8227822782278228. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 10 samples, test_accuracy=0.8014801480148015. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 11 samples, test_accuracy=0.7728772877287728. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 12 samples, test_accuracy=0.7338733873387339. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 13 samples, test_accuracy=0.686068606860686. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 14 samples, test_accuracy=0.6310631063106311. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 15 samples, test_accuracy=0.572957295729573. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 16 samples, test_accuracy=0.5141514151415142. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 17 samples, test_accuracy=0.45854585458545855. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 18 samples, test_accuracy=0.39893989398939894. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 19 samples, test_accuracy=0.2946294629462946. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 20 samples, test_accuracy=0.3029302930293029. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 21 samples, test_accuracy=0.2552255225522552. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 22 samples, test_accuracy=0.26242624262426245. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 23 samples, test_accuracy=0.2585258525852585. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 24 samples, test_accuracy=0.2548254825482548. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 25 samples, test_accuracy=0.2538253825382538. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 26 samples, test_accuracy=0.25822582258225824. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 27 samples, test_accuracy=0.2557255725572557. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 28 samples, test_accuracy=0.31683168316831684. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 29 samples, test_accuracy=0.3161316131613161. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 30 samples, test_accuracy=0.3175317531753175. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 31 samples, test_accuracy=0.3181318131813181. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 32 samples, test_accuracy=0.32143214321432145. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 33 samples, test_accuracy=0.3215321532153215. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 34 samples, test_accuracy=0.32323232323232326. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 35 samples, test_accuracy=0.3209320932093209. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 36 samples, test_accuracy=0.26512651265126513. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 37 samples, test_accuracy=0.2672267226722672. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 38 samples, test_accuracy=0.27002700270027. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 39 samples, test_accuracy=0.27542754275427545. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 40 samples, test_accuracy=0.2556255625562556. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 41 samples, test_accuracy=0.2583258325832583. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 42 samples, test_accuracy=0.2621262126212621. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 43 samples, test_accuracy=0.2538253825382538. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 44 samples, test_accuracy=0.25682568256825683. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 45 samples, test_accuracy=0.2565256525652565. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 46 samples, test_accuracy=0.2532253225322532. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 47 samples, test_accuracy=0.25842584258425844. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 48 samples, test_accuracy=0.25742574257425743. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 49 samples, test_accuracy=0.25292529252925294. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 50 samples, test_accuracy=0.2625262526252625. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 51 samples, test_accuracy=0.2654265426542654. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 52 samples, test_accuracy=0.2648264826482648. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 53 samples, test_accuracy=0.2542254225422542. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 54 samples, test_accuracy=0.2544254425442544. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 55 samples, test_accuracy=0.25642564256425643. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 56 samples, test_accuracy=0.25882588258825884. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 57 samples, test_accuracy=0.2526252625262526. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 58 samples, test_accuracy=0.25662566256625663. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 59 samples, test_accuracy=0.25072507250725073. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 60 samples, test_accuracy=0.25412541254125415. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 61 samples, test_accuracy=0.25742574257425743. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 62 samples, test_accuracy=0.2518251825182518. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 63 samples, test_accuracy=0.2569256925692569. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 64 samples, test_accuracy=0.2571257125712571. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 65 samples, test_accuracy=0.2536253625362536. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 66 samples, test_accuracy=0.28172817281728174. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 67 samples, test_accuracy=0.2796279627962796. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 68 samples, test_accuracy=0.2554255425542554. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 69 samples, test_accuracy=0.2611261126112611. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 70 samples, test_accuracy=0.25272527252725274. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 71 samples, test_accuracy=0.2644264426442644. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 72 samples, test_accuracy=0.2538253825382538. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 73 samples, test_accuracy=0.2571257125712571. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 74 samples, test_accuracy=0.25512551255125515. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 75 samples, test_accuracy=0.2538253825382538. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 76 samples, test_accuracy=0.25252525252525254. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 77 samples, test_accuracy=0.2524252425242524. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 78 samples, test_accuracy=0.25862586258625864. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 79 samples, test_accuracy=0.26572657265726574. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 80 samples, test_accuracy=0.2723272327232723. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 81 samples, test_accuracy=0.28392839283928395. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 82 samples, test_accuracy=0.3013301330133013. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 83 samples, test_accuracy=0.3361336133613361. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 84 samples, test_accuracy=0.39403940394039405. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 85 samples, test_accuracy=0.47024702470247026. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 86 samples, test_accuracy=0.25332533253325334. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 87 samples, test_accuracy=0.2571257125712571. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 88 samples, test_accuracy=0.7174717471747175. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 89 samples, test_accuracy=0.7701770177017702. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 90 samples, test_accuracy=0.8061806180618062. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 91 samples, test_accuracy=0.8306830683068307. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 92 samples, test_accuracy=0.8438843884388438. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 93 samples, test_accuracy=0.8577857785778578. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 94 samples, test_accuracy=0.8647864786478647. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 95 samples, test_accuracy=0.866986698669867. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 96 samples, test_accuracy=0.8691869186918691. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 97 samples, test_accuracy=0.876987698769877. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 98 samples, test_accuracy=0.8755875587558756. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 99 samples, test_accuracy=0.8809880988098809. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 100 samples, test_accuracy=0.8791879187918792. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 101 samples, test_accuracy=0.8807880788078808. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 102 samples, test_accuracy=0.8781878187818782. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 103 samples, test_accuracy=0.8778877887788779. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 104 samples, test_accuracy=0.8735873587358736. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 105 samples, test_accuracy=0.8692869286928693. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 106 samples, test_accuracy=0.8593859385938594. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 107 samples, test_accuracy=0.8510851085108511. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 108 samples, test_accuracy=0.8343834383438344. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 109 samples, test_accuracy=0.8227822782278228. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 110 samples, test_accuracy=0.8014801480148015. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 111 samples, test_accuracy=0.7728772877287728. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 112 samples, test_accuracy=0.7338733873387339. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 113 samples, test_accuracy=0.686068606860686. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 114 samples, test_accuracy=0.6310631063106311. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 115 samples, test_accuracy=0.572957295729573. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 116 samples, test_accuracy=0.5141514151415142. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 117 samples, test_accuracy=0.45854585458545855. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 118 samples, test_accuracy=0.39893989398939894. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 119 samples, test_accuracy=0.2946294629462946. BEST Test accuracy after trying all displacements: 0.8810 at displacement 99 \\n\"\n+      \"WARNING:tensorflow:Unresolved object in checkpoint: (root).optimizer.iter\\n\",\n+      \"WARNING:tensorflow:Unresolved object in checkpoint: (root).optimizer.beta_1\\n\",\n+      \"WARNING:tensorflow:Unresolved object in checkpoint: (root).optimizer.beta_2\\n\",\n+      \"WARNING:tensorflow:Unresolved object in checkpoint: (root).optimizer.decay\\n\",\n+      \"WARNING:tensorflow:Unresolved object in checkpoint: (root).optimizer.learning_rate\\n\",\n+      \"WARNING:tensorflow:A checkpoint was restored (e.g. tf.train.Checkpoint.restore or tf.keras.Model.load_weights) but not all checkpointed values were used. See above for specific issues. Use expect_partial() on the load status object, e.g. tf.train.Checkpoint.restore(...).expect_partial(), to silence these warnings, or use assert_consumed() to make the check explicit. See https://www.tensorflow.org/guide/checkpoint#loading_mechanics for details.\\n\"\n      ]\n-    },\n-    {\n-     \"data\": {\n-      \"text/plain\": [\n-       \"0.8809880988098809\"\n-      ]\n-     },\n-     \"execution_count\": 9,\n-     \"metadata\": {},\n-     \"output_type\": \"execute_result\"\n     }\n    ],\n    \"source\": [\n\n---"]}