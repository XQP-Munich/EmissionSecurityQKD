{"test_accuracies": {"FPGA2.5cm_2": [0.5412017811577525, 0.5260656393836302, 0.5357482363536299, 0.5439535698203832, 0.5413518787211687], "FPGA2.5cm_3": [0.5677190173612848, 0.563338002801681, 0.5714714564466904, 0.5666183018962325, 0.5679191474458398], "FPGA2.5cm_4": [0.5714714564466904, 0.5690914548729238, 0.5800770500825536, 0.5758242857857607, 0.5769750337719518], "FPGA2.5cm_5": [0.5812778305898835, 0.581448869321593, 0.5855305948866764, 0.5816780907589933, 0.5795767248711663], "FPGA2.5cm_6": [0.5813278631110221, 0.5821492895737442, 0.5893330664932206, 0.5867313753940061, 0.5879321559013359], "FPGA2.5cm_7": [0.5848301395907339, 0.5803982389433661, 0.5905338470005503, 0.5868314404362835, 0.5865812778305899], "FPGA2.5cm_8": [0.5866313103517287, 0.5888032819691815, 0.594836643818482, 0.589633261620053, 0.5893330664932206], "FPGA2.5cm_9": [0.584630009506179, 0.588152891735041, 0.5947866112973432, 0.5896832941411918, 0.5952869365087307], "FPGA2.5cm_10": [0.5869315054785611, 0.5896037622573544, 0.5940361234802621, 0.5852303997598439, 0.5938860259168459], "FPGA2.5cm_11": [0.5953369690298694, 0.5850010006003602, 0.5952369039875919, 0.5887326762395557, 0.5989393105518587], "FPGA2.5cm_12": [0.5963376194526442, 0.5930558335001, 0.5989893430729974, 0.5953870015510082, 0.5959873918046731], "FPGA2.5cm_13": [0.5959873918046731, 0.5890534320592355, 0.5978886276079451, 0.5953369690298694, 0.5953369690298694], "FPGA2.5cm_14": [0.5910842047330765, 0.5877026215729437, 0.597338269875419, 0.5977885625656677, 0.5952369039875919], "FPGA2.5cm_15": [0.5950868064241757, 0.5901540924554732, 0.606194026116976, 0.59848901786161, 0.6005903837494372], "FPGA2.5cm_16": [0.5980887576925001, 0.5982089253552131, 0.6019912943413218, 0.5995397008055235, 0.5986391154250262], "FPGA2.5cm_17": [0.6032921398909291, 0.6025615369221533, 0.6044929203982589, 0.6046430179616751, 0.6062940911592535], "FPGA2.5cm_18": [0.6039925951868714, 0.5965079047428458, 0.6056436683844499, 0.5979386601290839, 0.6047931155250913], "FPGA2.5cm_19": [0.5943863511282333, 0.5927556533920352, 0.596587782058338, 0.5975884324811127, 0.5991894731575524]}, "train_accuracies": {"FPGA2.5cm_2": 0.6672337055206299, "FPGA2.5cm_3": 0.6500478982925415, "FPGA2.5cm_4": 0.6549688577651978, "FPGA2.5cm_5": 0.634321928024292, "FPGA2.5cm_6": 0.6500886082649231, "FPGA2.5cm_7": 0.6542052626609802, "FPGA2.5cm_8": 0.6372475028038025, "FPGA2.5cm_9": 0.6404525637626648, "FPGA2.5cm_10": 0.644027829170227, "FPGA2.5cm_11": 0.6516088843345642, "FPGA2.5cm_12": 0.646965742111206, "FPGA2.5cm_13": 0.6416199803352356, "FPGA2.5cm_14": 0.6457096934318542, "FPGA2.5cm_15": 0.6421847939491272, "FPGA2.5cm_16": 0.6399794220924377, "FPGA2.5cm_17": 0.6393885016441345, "FPGA2.5cm_18": 0.6420754194259644, "FPGA2.5cm_19": 0.6428484916687012}, "validation_accuracies": {"FPGA2.5cm_2": 0.5547605752944946, "FPGA2.5cm_3": 0.5812778472900391, "FPGA2.5cm_4": 0.5921849012374878, "FPGA2.5cm_5": 0.5989392995834351, "FPGA2.5cm_6": 0.6000400185585022, "FPGA2.5cm_7": 0.6045429706573486, "FPGA2.5cm_8": 0.6108970642089844, "FPGA2.5cm_9": 0.612398087978363, "FPGA2.5cm_10": 0.617701530456543, "FPGA2.5cm_11": 0.6246560215950012, "FPGA2.5cm_12": 0.6298093795776367, "FPGA2.5cm_13": 0.6235553026199341, "FPGA2.5cm_14": 0.6241557002067566, "FPGA2.5cm_15": 0.6281082630157471, "FPGA2.5cm_16": 0.6232551336288452, "FPGA2.5cm_17": 0.6369140148162842, "FPGA2.5cm_18": 0.6351628303527832, "FPGA2.5cm_19": 0.637214183807373}, "GIT_SHA1_ONSAVING": "872176a2d536541e229e621339d4edd887823a26", "GIT_DIFF_ONSAVING": ["paper/DataOverview.md\n=======================================================\nlhs: 100644 | 4d0aa9f693c2eb7ee166d91623849d50e2a226da\nrhs: 100644 | a4e51a4acdac35b89aac36d4d0b91657e2cf7811\n---@@ -3,86 +3,137 @@\n \n ## pictures  \n Folder with photos\n+TODO\n+- upload all photos\n+- select which to use in paper (Appendix?)\n \n ## Background\n \n-### BackgroundTuesday \n-### BackgroundSaturday    \n-\n-\n-\n-\n-## Rev1\n+### BackgroundTuesday & BackgroundSaturday\n+TODO\n+- plot together with raw probe spectrum\n \n \n+## ---------------------------------------------------- Rev1\n \n ### TEMPEST\n \n ### Rev130meas2.5cm\n+TODO\n+- How much training data do we need? DO 15 EPOCHS (Appendix!)\n+\n ### Rev1Rotation10deg\n+TODO\n+- Plot results (Appendix)\n \n ### Rev12D\n+TODO\n+- plot (PAPER!)\n ### Rev1Distance\n+TODO\n+- plot (PAPER!)\n+- Think about how to underlay schematic\n \n ### Rev1TEMPESTShieldingUSBHole\n-### Rev1TEMPESTShieldingFPGA\n+TODO\n+- Evaluate\n \n+### Rev1TEMPESTShieldingFPGA\n+TODO\n+- Evaluate\n \n \n ### AB\n \n ### Rev1AntennaAB4m\n+TODO\n+- Evaluate. Preliminary result: 50/50\n+\n ### Rev1ABShieldingUSBHole\n+TODO\n+- Evaluate\n \n ### Rev1ABShieldingFPGA   \n-\n-\n+TODO\n+- Evaluate\n \n ### Other\n \n ### AntennaSpectra\n+TODO\n+- Plot in paper??? Measure more to have more confidence in results?\n \n \n-\n-\n-\n-## Rev2\n-\n+## ---------------------------------------------------- Rev2\n \n \n ### TEMPEST\n \n-### TestRev2Pre2D  \n-DELETE???\n+### TestRev2Pre2D\n+TODO\n+- Move to parent folder? Do not need for paper!\n \n ### Rev230meas2.5cm\n-### Rev2Rotation10deg\n+TODO\n+- Hyperparem Optimization (Appendix?)\n+- How much training data do we need? DO 15 EPOCHS (Appendix!)\n \n-### Rev22D\n-### Rev22Dstart_7_0\n-### Rev2Distance\n \n+### Rev2Rotation10deg\n+TODO\n+- Plot results (Appendix)\n+\n+### Rev22D & Rev22Dstart_7_0\n+TODO\n+- plot (PAPER!)\n+- Think about how to underlay schematic\n \n+### Rev2Distance\n+TODO\n+- plot (PAPER!)\n+- Think about how to underlay schematic\n \n ### AB\n \n ### ABVeryFarAwayProbeRev2\n+TODO\n+- Verify expected 50/50 performance\n+- NO PLOT\n+\n ### Rev2ABShielding\n+TODO\n+- What is this data?\n \n ### Rev2AntennaAB\n+TODO\n+- Evaluate\n \n ### Rev2ProbeABShieldungBig\n+TODO\n+- Evaluate. If result, mention in paper.\n \n ### rev2NoShieldABAntennaFar\n+TODO\n+- Evaluate. Probably no result!\n \n ### Rev2AB7cm\n+TODO\n+- plot AB measurement (Appendix?)\n \n ### Rev2AntennaOnOff\n-\n+TODO\n+- What is this data?\n \n \n ### Other\n \n ### Rev2FarAway\n+TODO\n+- what is this data?\n \n ### Rev2ShieldingAntenna\n+TODO\n+- What is this data?\n+\n+\n+\n\n---", "paper/TEMPEST_ATTACK_VARY_TRAINING_DATA.ipynb\n=======================================================\nlhs: 100644 | d3f44e2516d5599a604a0c2e7cae955b8f759ddc\nrhs: 100644 | 9b25fba2a328b9d5bddecda50e2f0f5bc274c40e\n---@@ -106,7 +106,7 @@\n     \"    \\\"training_EPOCHS\\\": 10,\\n\",\n     \"}\\n\",\n     \"\\n\",\n-    \"data_augmentation_halflength = 1\\n\",\n+    \"data_augmentation_halflength = 3\\n\",\n     \"\\n\",\n     \"stop_at_val_acc = 0.99\\n\",\n     \"\\n\",\n@@ -191,16 +191,16 @@\n       \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n       \"Cut data in pieces with these shapes: after header:(13992, 500), before header:(5995, 500)\\n\",\n       \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n-      \"Cut data in pieces with these shapes: after header:(41976, 500), before header:(17986, 500)\\n\"\n+      \"Cut data in pieces with these shapes: after header:(97944, 500), before header:(41968, 500)\\n\"\n      ]\n     },\n     {\n      \"name\": \"stderr\",\n      \"output_type\": \"stream\",\n      \"text\": [\n-      \"2022-07-04 14:26:48.620113: I tensorflow/core/platform/cpu_feature_guard.cc:142] This TensorFlow binary is optimized with oneAPI Deep Neural Network Library (oneDNN) to use the following CPU instructions in performance-critical operations:  SSE4.1 SSE4.2 AVX AVX2 FMA\\n\",\n+      \"2022-07-04 21:00:35.215500: I tensorflow/core/platform/cpu_feature_guard.cc:142] This TensorFlow binary is optimized with oneAPI Deep Neural Network Library (oneDNN) to use the following CPU instructions in performance-critical operations:  SSE4.1 SSE4.2 AVX AVX2 FMA\\n\",\n       \"To enable them in other operations, rebuild TensorFlow with the appropriate compiler flags.\\n\",\n-      \"2022-07-04 14:26:49.210897: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1510] Created device /job:localhost/replica:0/task:0/device:GPU:0 with 43643 MB memory:  -> device: 0, name: NVIDIA A40, pci bus id: 0000:a1:00.0, compute capability: 8.6\\n\"\n+      \"2022-07-04 21:00:35.785131: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1510] Created device /job:localhost/replica:0/task:0/device:GPU:0 with 43643 MB memory:  -> device: 0, name: NVIDIA A40, pci bus id: 0000:a1:00.0, compute capability: 8.6\\n\"\n      ]\n     },\n     {\n@@ -256,109 +256,108 @@\n      \"name\": \"stderr\",\n      \"output_type\": \"stream\",\n      \"text\": [\n-      \"2022-07-04 14:26:51.909856: I tensorflow/compiler/mlir/mlir_graph_optimization_pass.cc:185] None of the MLIR Optimization Passes are enabled (registered 2)\\n\",\n-      \"2022-07-04 14:26:52.967175: I tensorflow/stream_executor/cuda/cuda_dnn.cc:369] Loaded cuDNN version 8201\\n\",\n-      \"2022-07-04 14:26:54.843728: I tensorflow/stream_executor/cuda/cuda_blas.cc:1760] TensorFloat-32 will be used for the matrix multiplication. This will only be logged once.\\n\"\n+      \"2022-07-04 21:00:39.094068: I tensorflow/compiler/mlir/mlir_graph_optimization_pass.cc:185] None of the MLIR Optimization Passes are enabled (registered 2)\\n\",\n+      \"2022-07-04 21:00:40.250402: I tensorflow/stream_executor/cuda/cuda_dnn.cc:369] Loaded cuDNN version 8201\\n\",\n+      \"2022-07-04 21:00:42.114049: I tensorflow/stream_executor/cuda/cuda_blas.cc:1760] TensorFloat-32 will be used for the matrix multiplication. This will only be logged once.\\n\"\n      ]\n     },\n     {\n      \"name\": \"stdout\",\n      \"output_type\": \"stream\",\n      \"text\": [\n-      \"469/469 [==============================] - 10s 11ms/step - loss: 1.2128 - accuracy: 0.4266 - val_loss: 1.1510 - val_accuracy: 0.4441\\n\",\n+      \"1094/1094 [==============================] - 16s 10ms/step - loss: 1.1395 - accuracy: 0.4538 - val_loss: 1.0252 - val_accuracy: 0.5029\\n\",\n       \"Epoch 2/10\\n\",\n-      \"469/469 [==============================] - 5s 11ms/step - loss: 1.0747 - accuracy: 0.4782 - val_loss: 1.0290 - val_accuracy: 0.4918\\n\",\n+      \"1094/1094 [==============================] - 11s 10ms/step - loss: 1.0271 - accuracy: 0.5075 - val_loss: 0.9965 - val_accuracy: 0.5198\\n\",\n       \"Epoch 3/10\\n\",\n-      \"469/469 [==============================] - 5s 11ms/step - loss: 1.0385 - accuracy: 0.4913 - val_loss: 1.0330 - val_accuracy: 0.4933\\n\",\n+      \"1094/1094 [==============================] - 11s 10ms/step - loss: 0.9853 - accuracy: 0.5299 - val_loss: 0.9687 - val_accuracy: 0.5401\\n\",\n       \"Epoch 4/10\\n\",\n-      \"469/469 [==============================] - 5s 11ms/step - loss: 1.0149 - accuracy: 0.5005 - val_loss: 1.0218 - val_accuracy: 0.5007\\n\",\n+      \"1094/1094 [==============================] - 10s 9ms/step - loss: 0.9537 - accuracy: 0.5495 - val_loss: 0.9539 - val_accuracy: 0.5487\\n\",\n       \"Epoch 5/10\\n\",\n-      \"469/469 [==============================] - 5s 11ms/step - loss: 0.9966 - accuracy: 0.5115 - val_loss: 0.9997 - val_accuracy: 0.5174\\n\",\n+      \"1094/1094 [==============================] - 10s 9ms/step - loss: 0.9211 - accuracy: 0.5671 - val_loss: 0.9517 - val_accuracy: 0.5549\\n\",\n       \"Epoch 6/10\\n\",\n-      \"469/469 [==============================] - 5s 11ms/step - loss: 0.9770 - accuracy: 0.5264 - val_loss: 0.9800 - val_accuracy: 0.5335\\n\",\n+      \"1094/1094 [==============================] - 10s 9ms/step - loss: 0.8869 - accuracy: 0.5914 - val_loss: 0.9573 - val_accuracy: 0.5611\\n\",\n       \"Epoch 7/10\\n\",\n-      \"469/469 [==============================] - 5s 11ms/step - loss: 0.9545 - accuracy: 0.5450 - val_loss: 0.9600 - val_accuracy: 0.5426\\n\",\n+      \"1094/1094 [==============================] - 10s 9ms/step - loss: 0.8491 - accuracy: 0.6130 - val_loss: 0.9921 - val_accuracy: 0.5577\\n\",\n       \"Epoch 8/10\\n\",\n-      \"469/469 [==============================] - 5s 11ms/step - loss: 0.9410 - accuracy: 0.5552 - val_loss: 0.9730 - val_accuracy: 0.5380\\n\",\n+      \"1094/1094 [==============================] - 10s 9ms/step - loss: 0.8086 - accuracy: 0.6349 - val_loss: 1.0119 - val_accuracy: 0.5590\\n\",\n       \"Epoch 9/10\\n\",\n-      \"469/469 [==============================] - 5s 11ms/step - loss: 0.9239 - accuracy: 0.5650 - val_loss: 0.9555 - val_accuracy: 0.5449\\n\",\n-      \"Epoch 10/10\\n\",\n-      \"469/469 [==============================] - 5s 11ms/step - loss: 0.9023 - accuracy: 0.5766 - val_loss: 0.9515 - val_accuracy: 0.5533\\n\",\n+      \"1094/1094 [==============================] - 10s 9ms/step - loss: 0.7539 - accuracy: 0.6672 - val_loss: 1.0487 - val_accuracy: 0.5548\\n\",\n+      \"Epoch 00009: early stopping\\n\",\n       \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n       \"Cut data in pieces with these shapes: after header:(13992, 500), before header:(5995, 500)\\n\",\n       \"Confusion matrix:\\n\",\n       \"H V P M \\n\",\n-      \"[[4468   75  289  122]\\n\",\n-      \" [ 310 1171 2437 1182]\\n\",\n-      \" [ 440  691 3201  639]\\n\",\n-      \" [ 322  957 1655 2028]]\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0101: 0.6872467103617351\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0011: 0.6777905638665133\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0110: 0.7224696052434082\\n\",\n-      \"Test accuracy: 0.5437534397358282\\n\",\n+      \"[[4324  206  234  190]\\n\",\n+      \" [ 267 1897 1647 1289]\\n\",\n+      \" [ 397 1289 2389  896]\\n\",\n+      \" [ 282 1390 1083 2207]]\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0101: 0.7068094261269825\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0011: 0.6638815229899435\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0110: 0.711712613198579\\n\",\n+      \"Test accuracy: 0.5412017811577525\\n\",\n       \"\\n\",\n       \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n       \"Cut data in pieces with these shapes: after header:(13992, 500), before header:(5996, 500)\\n\",\n       \"Confusion matrix:\\n\",\n       \"H V P M \\n\",\n-      \"[[4352   65  436  101]\\n\",\n-      \" [ 342  890 2923  946]\\n\",\n-      \" [ 430  461 3610  470]\\n\",\n-      \" [ 354  766 2178 1664]]\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0101: 0.6550930558335001\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0011: 0.6789573744246548\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0110: 0.7181809085451271\\n\",\n-      \"Test accuracy: 0.526115669401641\\n\",\n+      \"[[4090  282  425  157]\\n\",\n+      \" [ 238 1752 2126  985]\\n\",\n+      \" [ 349 1131 2907  584]\\n\",\n+      \" [ 271 1418 1507 1766]]\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0101: 0.6850110066039624\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0011: 0.6566940164098459\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0110: 0.7104262557534521\\n\",\n+      \"Test accuracy: 0.5260656393836302\\n\",\n       \"\\n\",\n       \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n       \"Cut data in pieces with these shapes: after header:(13992, 500), before header:(5995, 500)\\n\",\n       \"Confusion matrix:\\n\",\n       \"H V P M \\n\",\n-      \"[[4443   58  369   84]\\n\",\n-      \" [ 318  936 2843 1003]\\n\",\n-      \" [ 435  449 3590  497]\\n\",\n-      \" [ 335  790 2044 1793]]\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0101: 0.6683844498924301\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0011: 0.684394856656827\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0110: 0.7241206784409866\\n\",\n-      \"Test accuracy: 0.5384499924951218\\n\",\n+      \"[[4248  211  347  148]\\n\",\n+      \" [ 244 1766 2057 1033]\\n\",\n+      \" [ 350 1192 2776  653]\\n\",\n+      \" [ 254 1449 1341 1918]]\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0101: 0.6948016210536849\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0011: 0.6582778806224046\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0110: 0.7184169710311703\\n\",\n+      \"Test accuracy: 0.5357482363536299\\n\",\n       \"\\n\",\n       \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n       \"Cut data in pieces with these shapes: after header:(13992, 500), before header:(5995, 500)\\n\",\n       \"Confusion matrix:\\n\",\n       \"H V P M \\n\",\n-      \"[[4460   72  307  115]\\n\",\n-      \" [ 255 1207 2457 1181]\\n\",\n-      \" [ 377  729 3203  662]\\n\",\n-      \" [ 288 1013 1618 2043]]\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0101: 0.6899984990243658\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0011: 0.6764396857957673\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0110: 0.7255716215540101\\n\",\n-      \"Test accuracy: 0.5460049031870716\\n\",\n+      \"[[4304  228  238  184]\\n\",\n+      \" [ 241 1875 1652 1332]\\n\",\n+      \" [ 367 1312 2357  935]\\n\",\n+      \" [ 230 1365 1031 2336]]\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0101: 0.7091609546205033\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0011: 0.6657827587932156\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0110: 0.7129634262270476\\n\",\n+      \"Test accuracy: 0.5439535698203832\\n\",\n       \"\\n\",\n       \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n       \"Cut data in pieces with these shapes: after header:(13992, 500), before header:(5995, 500)\\n\",\n       \"Confusion matrix:\\n\",\n       \"H V P M \\n\",\n-      \"[[4463   62  294  135]\\n\",\n-      \" [ 321 1159 2464 1156]\\n\",\n-      \" [ 452  640 3216  663]\\n\",\n-      \" [ 341  887 1643 2091]]\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0101: 0.6863461249812378\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0011: 0.6813428728673638\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0110: 0.7259218492019813\\n\",\n-      \"Test accuracy: 0.5468054235252915\\n\",\n+      \"[[4308  225  239  182]\\n\",\n+      \" [ 286 1792 1703 1319]\\n\",\n+      \" [ 395 1279 2437  860]\\n\",\n+      \" [ 248 1342 1089 2283]]\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0101: 0.7062090358733176\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0011: 0.6644318807224696\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0110: 0.7120628408465502\\n\",\n+      \"Test accuracy: 0.5413518787211687\\n\",\n       \"\\n\",\n       \"\\n\",\n       \"\\n\",\n-      \"created a json file of the test accuracies at ./test_accuracy_20220704-1426.json\\n\",\n+      \"created a json file of the test accuracies at /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/result_vary_raining_data_20220704-2100.json\\n\",\n       \"------------- dataset 0: FPGA2.5cm with max_train_files=3 ----------------------------------\\n\",\n       \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n       \"Cut data in pieces with these shapes: after header:(13992, 500), before header:(5995, 500)\\n\",\n       \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n-      \"Cut data in pieces with these shapes: after header:(41976, 500), before header:(17986, 500)\\n\",\n+      \"Cut data in pieces with these shapes: after header:(97944, 500), before header:(41968, 500)\\n\",\n       \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n-      \"Cut data in pieces with these shapes: after header:(41976, 500), before header:(17986, 500)\\n\",\n+      \"Cut data in pieces with these shapes: after header:(97944, 500), before header:(41968, 500)\\n\",\n       \"Model: \\\"sequential_1\\\"\\n\",\n       \"_________________________________________________________________\\n\",\n       \"Layer (type)                 Output Shape              Param #   \\n\",\n@@ -402,102 +401,101 @@\n       \"Non-trainable params: 462\\n\",\n       \"_________________________________________________________________\\n\",\n       \"Epoch 1/10\\n\",\n-      \"937/937 [==============================] - 11s 10ms/step - loss: 1.1585 - accuracy: 0.4458 - val_loss: 1.0138 - val_accuracy: 0.5070\\n\",\n+      \"2187/2187 [==============================] - 21s 9ms/step - loss: 1.0878 - accuracy: 0.4746 - val_loss: 0.9760 - val_accuracy: 0.5283\\n\",\n       \"Epoch 2/10\\n\",\n-      \"937/937 [==============================] - 9s 10ms/step - loss: 1.0267 - accuracy: 0.5083 - val_loss: 0.9911 - val_accuracy: 0.5283\\n\",\n+      \"2187/2187 [==============================] - 20s 9ms/step - loss: 0.9828 - accuracy: 0.5316 - val_loss: 0.9435 - val_accuracy: 0.5501\\n\",\n       \"Epoch 3/10\\n\",\n-      \"937/937 [==============================] - 9s 10ms/step - loss: 0.9958 - accuracy: 0.5268 - val_loss: 0.9587 - val_accuracy: 0.5393\\n\",\n+      \"2187/2187 [==============================] - 20s 9ms/step - loss: 0.9474 - accuracy: 0.5537 - val_loss: 0.9265 - val_accuracy: 0.5592\\n\",\n       \"Epoch 4/10\\n\",\n-      \"937/937 [==============================] - 9s 10ms/step - loss: 0.9756 - accuracy: 0.5374 - val_loss: 0.9464 - val_accuracy: 0.5474\\n\",\n+      \"2187/2187 [==============================] - 19s 9ms/step - loss: 0.9228 - accuracy: 0.5707 - val_loss: 0.9087 - val_accuracy: 0.5728\\n\",\n       \"Epoch 5/10\\n\",\n-      \"937/937 [==============================] - 9s 10ms/step - loss: 0.9586 - accuracy: 0.5474 - val_loss: 0.9407 - val_accuracy: 0.5510\\n\",\n+      \"2187/2187 [==============================] - 19s 9ms/step - loss: 0.8998 - accuracy: 0.5852 - val_loss: 0.9040 - val_accuracy: 0.5800\\n\",\n       \"Epoch 6/10\\n\",\n-      \"937/937 [==============================] - 10s 10ms/step - loss: 0.9450 - accuracy: 0.5565 - val_loss: 0.9339 - val_accuracy: 0.5553\\n\",\n+      \"2187/2187 [==============================] - 19s 9ms/step - loss: 0.8755 - accuracy: 0.5998 - val_loss: 0.9076 - val_accuracy: 0.5843\\n\",\n       \"Epoch 7/10\\n\",\n-      \"937/937 [==============================] - 9s 10ms/step - loss: 0.9305 - accuracy: 0.5679 - val_loss: 0.9268 - val_accuracy: 0.5614\\n\",\n+      \"2187/2187 [==============================] - 19s 9ms/step - loss: 0.8457 - accuracy: 0.6173 - val_loss: 0.9119 - val_accuracy: 0.5857\\n\",\n       \"Epoch 8/10\\n\",\n-      \"937/937 [==============================] - 9s 10ms/step - loss: 0.9122 - accuracy: 0.5776 - val_loss: 0.9161 - val_accuracy: 0.5695\\n\",\n+      \"2187/2187 [==============================] - 19s 9ms/step - loss: 0.8166 - accuracy: 0.6326 - val_loss: 0.9253 - val_accuracy: 0.5872\\n\",\n       \"Epoch 9/10\\n\",\n-      \"937/937 [==============================] - 9s 10ms/step - loss: 0.8976 - accuracy: 0.5868 - val_loss: 0.9278 - val_accuracy: 0.5697\\n\",\n-      \"Epoch 10/10\\n\",\n-      \"937/937 [==============================] - 9s 9ms/step - loss: 0.8862 - accuracy: 0.5920 - val_loss: 0.9285 - val_accuracy: 0.5677\\n\",\n+      \"2187/2187 [==============================] - 19s 9ms/step - loss: 0.7861 - accuracy: 0.6500 - val_loss: 0.9547 - val_accuracy: 0.5813\\n\",\n+      \"Epoch 00009: early stopping\\n\",\n       \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n       \"Cut data in pieces with these shapes: after header:(13992, 500), before header:(5995, 500)\\n\",\n       \"Confusion matrix:\\n\",\n       \"H V P M \\n\",\n-      \"[[4338   79  303  234]\\n\",\n-      \" [ 208 1248 1504 2140]\\n\",\n-      \" [ 306  855 2352 1458]\\n\",\n-      \" [ 203  748  841 3170]]\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0101: 0.7307249712313003\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0011: 0.6851453444739081\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0110: 0.6956521739130435\\n\",\n-      \"Test accuracy: 0.5557612448091259\\n\",\n+      \"[[4471   90  188  205]\\n\",\n+      \" [ 253 1619 1243 1985]\\n\",\n+      \" [ 357 1112 2190 1312]\\n\",\n+      \" [ 212  962  721 3067]]\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0101: 0.7424325811777656\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0011: 0.6865962875869315\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0110: 0.7064091659578726\\n\",\n+      \"Test accuracy: 0.5677190173612848\\n\",\n       \"\\n\",\n       \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n       \"Cut data in pieces with these shapes: after header:(13992, 500), before header:(5996, 500)\\n\",\n       \"Confusion matrix:\\n\",\n       \"H V P M \\n\",\n-      \"[[4270   74  359  251]\\n\",\n-      \" [ 184 1205 1515 2197]\\n\",\n-      \" [ 281  791 2474 1425]\\n\",\n-      \" [ 178  704  905 3175]]\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0101: 0.7336902141284771\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0011: 0.6860116069641785\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0110: 0.693366019611767\\n\",\n-      \"Test accuracy: 0.5565339203522113\\n\",\n+      \"[[4413  101  250  190]\\n\",\n+      \" [ 204 1522 1440 1935]\\n\",\n+      \" [ 351 1032 2359 1229]\\n\",\n+      \" [ 214  908  874 2966]]\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0101: 0.7356413848308986\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0011: 0.683810286171703\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0110: 0.7072243346007605\\n\",\n+      \"Test accuracy: 0.563338002801681\\n\",\n       \"\\n\",\n       \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n       \"Cut data in pieces with these shapes: after header:(13992, 500), before header:(5995, 500)\\n\",\n       \"Confusion matrix:\\n\",\n       \"H V P M \\n\",\n-      \"[[4355   74  307  218]\\n\",\n-      \" [ 219 1163 1590 2128]\\n\",\n-      \" [ 308  810 2447 1406]\\n\",\n-      \" [ 226  695  813 3228]]\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0101: 0.7320258167809076\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0011: 0.6856957022064342\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0110: 0.702306499224496\\n\",\n-      \"Test accuracy: 0.5600140091059188\\n\",\n+      \"[[4463   84  210  197]\\n\",\n+      \" [ 238 1580 1307 1975]\\n\",\n+      \" [ 332 1062 2312 1265]\\n\",\n+      \" [ 229  862  804 3067]]\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0101: 0.7405313453744934\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0011: 0.6910992144894181\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0110: 0.7113123530294692\\n\",\n+      \"Test accuracy: 0.5714714564466904\\n\",\n       \"\\n\",\n       \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n       \"Cut data in pieces with these shapes: after header:(13992, 500), before header:(5995, 500)\\n\",\n       \"Confusion matrix:\\n\",\n       \"H V P M \\n\",\n-      \"[[4342   77  300  235]\\n\",\n-      \" [ 187 1270 1468 2175]\\n\",\n-      \" [ 262  819 2452 1438]\\n\",\n-      \" [ 185  705  860 3212]]\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0101: 0.7363786461199779\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0011: 0.6923500275178867\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0110: 0.6996047430830039\\n\",\n-      \"Test accuracy: 0.5641667083604343\\n\",\n+      \"[[4442   99  199  214]\\n\",\n+      \" [ 204 1649 1252 1995]\\n\",\n+      \" [ 323 1099 2151 1398]\\n\",\n+      \" [ 219  897  763 3083]]\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0101: 0.7374293290638916\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0011: 0.6898984339820884\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0110: 0.7059088407464852\\n\",\n+      \"Test accuracy: 0.5666183018962325\\n\",\n       \"\\n\",\n       \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n       \"Cut data in pieces with these shapes: after header:(13992, 500), before header:(5995, 500)\\n\",\n       \"Confusion matrix:\\n\",\n       \"H V P M \\n\",\n-      \"[[4323   74  309  248]\\n\",\n-      \" [ 248 1230 1489 2133]\\n\",\n-      \" [ 311  892 2345 1423]\\n\",\n-      \" [ 209  692  853 3208]]\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0101: 0.7280232150898084\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0011: 0.6856456696852954\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0110: 0.6976534747585931\\n\",\n-      \"Test accuracy: 0.5556611797668485\\n\",\n+      \"[[4474   76  194  210]\\n\",\n+      \" [ 255 1560 1237 2048]\\n\",\n+      \" [ 349 1058 2228 1336]\\n\",\n+      \" [ 241  863  769 3089]]\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0101: 0.7407314754590484\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0011: 0.6897983689398108\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0110: 0.7053084504928203\\n\",\n+      \"Test accuracy: 0.5679191474458398\\n\",\n       \"\\n\",\n       \"\\n\",\n       \"\\n\",\n-      \"created a json file of the test accuracies at ./test_accuracy_20220704-1426.json\\n\",\n+      \"created a json file of the test accuracies at /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/result_vary_raining_data_20220704-2100.json\\n\",\n       \"------------- dataset 0: FPGA2.5cm with max_train_files=4 ----------------------------------\\n\",\n       \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n       \"Cut data in pieces with these shapes: after header:(13992, 500), before header:(5995, 500)\\n\",\n       \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n-      \"Cut data in pieces with these shapes: after header:(41976, 500), before header:(17986, 500)\\n\",\n+      \"Cut data in pieces with these shapes: after header:(97944, 500), before header:(41968, 500)\\n\",\n       \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n-      \"Cut data in pieces with these shapes: after header:(41976, 500), before header:(17986, 500)\\n\",\n+      \"Cut data in pieces with these shapes: after header:(97944, 500), before header:(41968, 500)\\n\",\n       \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n-      \"Cut data in pieces with these shapes: after header:(41976, 500), before header:(17986, 500)\\n\",\n+      \"Cut data in pieces with these shapes: after header:(97944, 500), before header:(41968, 500)\\n\",\n       \"Model: \\\"sequential_2\\\"\\n\",\n       \"_________________________________________________________________\\n\",\n       \"Layer (type)                 Output Shape              Param #   \\n\",\n@@ -541,104 +539,103 @@\n       \"Non-trainable params: 462\\n\",\n       \"_________________________________________________________________\\n\",\n       \"Epoch 1/10\\n\",\n-      \"1406/1406 [==============================] - 15s 10ms/step - loss: 1.1154 - accuracy: 0.4636 - val_loss: 1.0034 - val_accuracy: 0.5137\\n\",\n+      \"3280/3280 [==============================] - 31s 9ms/step - loss: 1.0547 - accuracy: 0.4881 - val_loss: 0.9640 - val_accuracy: 0.5314\\n\",\n       \"Epoch 2/10\\n\",\n-      \"1406/1406 [==============================] - 13s 10ms/step - loss: 1.0071 - accuracy: 0.5197 - val_loss: 0.9757 - val_accuracy: 0.5349\\n\",\n+      \"3280/3280 [==============================] - 30s 9ms/step - loss: 0.9548 - accuracy: 0.5468 - val_loss: 0.9128 - val_accuracy: 0.5663\\n\",\n       \"Epoch 3/10\\n\",\n-      \"1406/1406 [==============================] - 14s 10ms/step - loss: 0.9740 - accuracy: 0.5393 - val_loss: 0.9604 - val_accuracy: 0.5418\\n\",\n+      \"3280/3280 [==============================] - 30s 9ms/step - loss: 0.9167 - accuracy: 0.5724 - val_loss: 0.8927 - val_accuracy: 0.5803\\n\",\n       \"Epoch 4/10\\n\",\n-      \"1406/1406 [==============================] - 13s 9ms/step - loss: 0.9480 - accuracy: 0.5538 - val_loss: 0.9493 - val_accuracy: 0.5522\\n\",\n+      \"3280/3280 [==============================] - 30s 9ms/step - loss: 0.8908 - accuracy: 0.5875 - val_loss: 0.8862 - val_accuracy: 0.5850\\n\",\n       \"Epoch 5/10\\n\",\n-      \"1406/1406 [==============================] - 13s 9ms/step - loss: 0.9291 - accuracy: 0.5648 - val_loss: 0.9311 - val_accuracy: 0.5630\\n\",\n+      \"3280/3280 [==============================] - 30s 9ms/step - loss: 0.8666 - accuracy: 0.6013 - val_loss: 0.8845 - val_accuracy: 0.5872\\n\",\n       \"Epoch 6/10\\n\",\n-      \"1406/1406 [==============================] - 13s 9ms/step - loss: 0.9151 - accuracy: 0.5727 - val_loss: 0.9146 - val_accuracy: 0.5732\\n\",\n+      \"3280/3280 [==============================] - 30s 9ms/step - loss: 0.8429 - accuracy: 0.6151 - val_loss: 0.8890 - val_accuracy: 0.5915\\n\",\n       \"Epoch 7/10\\n\",\n-      \"1406/1406 [==============================] - 13s 9ms/step - loss: 0.9002 - accuracy: 0.5835 - val_loss: 0.9215 - val_accuracy: 0.5734\\n\",\n+      \"3280/3280 [==============================] - 30s 9ms/step - loss: 0.8193 - accuracy: 0.6279 - val_loss: 0.8939 - val_accuracy: 0.5926\\n\",\n       \"Epoch 8/10\\n\",\n-      \"1406/1406 [==============================] - 13s 9ms/step - loss: 0.8865 - accuracy: 0.5910 - val_loss: 0.9133 - val_accuracy: 0.5776\\n\",\n+      \"3280/3280 [==============================] - 30s 9ms/step - loss: 0.7941 - accuracy: 0.6413 - val_loss: 0.9015 - val_accuracy: 0.5894\\n\",\n       \"Epoch 9/10\\n\",\n-      \"1406/1406 [==============================] - 13s 9ms/step - loss: 0.8751 - accuracy: 0.5984 - val_loss: 0.9132 - val_accuracy: 0.5800\\n\",\n-      \"Epoch 10/10\\n\",\n-      \"1406/1406 [==============================] - 13s 9ms/step - loss: 0.8623 - accuracy: 0.6049 - val_loss: 0.9144 - val_accuracy: 0.5782\\n\",\n+      \"3280/3280 [==============================] - 31s 9ms/step - loss: 0.7693 - accuracy: 0.6550 - val_loss: 0.9197 - val_accuracy: 0.5922\\n\",\n+      \"Epoch 00009: early stopping\\n\",\n       \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n       \"Cut data in pieces with these shapes: after header:(13992, 500), before header:(5995, 500)\\n\",\n       \"Confusion matrix:\\n\",\n       \"H V P M \\n\",\n-      \"[[4257  210  219  268]\\n\",\n-      \" [ 143 1847 1133 1977]\\n\",\n-      \" [ 249 1356 2042 1324]\\n\",\n-      \" [ 166 1150  606 3040]]\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0101: 0.7395306949517186\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0011: 0.6738880272176915\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0110: 0.7059088407464852\\n\",\n-      \"Test accuracy: 0.5596637814579477\\n\",\n+      \"[[4469  106  205  174]\\n\",\n+      \" [ 220 1725 1421 1734]\\n\",\n+      \" [ 318 1183 2381 1089]\\n\",\n+      \" [ 193 1056  866 2847]]\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0101: 0.7372291989793366\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0011: 0.6855956371641567\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0110: 0.7201180767498875\\n\",\n+      \"Test accuracy: 0.5714714564466904\\n\",\n       \"\\n\",\n       \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n       \"Cut data in pieces with these shapes: after header:(13992, 500), before header:(5996, 500)\\n\",\n       \"Confusion matrix:\\n\",\n       \"H V P M \\n\",\n-      \"[[4132  237  310  275]\\n\",\n-      \" [ 148 1715 1374 1864]\\n\",\n-      \" [ 243 1228 2356 1144]\\n\",\n-      \" [ 139 1116  822 2885]]\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0101: 0.7314888933360016\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0011: 0.6723534120472283\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0110: 0.7056233740244147\\n\",\n-      \"Test accuracy: 0.5547328397038223\\n\",\n+      \"[[4394  141  251  168]\\n\",\n+      \" [ 168 1699 1568 1666]\\n\",\n+      \" [ 308 1172 2557  934]\\n\",\n+      \" [ 189 1049  999 2725]]\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0101: 0.7328897338403042\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0011: 0.6812587552531519\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0110: 0.7240344206523914\\n\",\n+      \"Test accuracy: 0.5690914548729238\\n\",\n       \"\\n\",\n       \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n       \"Cut data in pieces with these shapes: after header:(13992, 500), before header:(5995, 500)\\n\",\n       \"Confusion matrix:\\n\",\n       \"H V P M \\n\",\n-      \"[[4283  190  245  236]\\n\",\n-      \" [ 153 1764 1298 1885]\\n\",\n-      \" [ 279 1263 2257 1172]\\n\",\n-      \" [ 164 1081  694 3023]]\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0101: 0.7413318657127133\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0011: 0.677240206133987\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0110: 0.7148646620303197\\n\",\n-      \"Test accuracy: 0.5667183669385101\\n\",\n+      \"[[4447  122  225  160]\\n\",\n+      \" [ 197 1737 1537 1629]\\n\",\n+      \" [ 291 1184 2544  952]\\n\",\n+      \" [ 180 1014  902 2866]]\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0101: 0.7381297843598339\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0011: 0.6887977185170361\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0110: 0.7332265972882374\\n\",\n+      \"Test accuracy: 0.5800770500825536\\n\",\n       \"\\n\",\n       \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n       \"Cut data in pieces with these shapes: after header:(13992, 500), before header:(5995, 500)\\n\",\n       \"Confusion matrix:\\n\",\n       \"H V P M \\n\",\n-      \"[[4203  255  225  271]\\n\",\n-      \" [ 129 1862 1142 1967]\\n\",\n-      \" [ 238 1367 2056 1310]\\n\",\n-      \" [ 142 1130  630 3060]]\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0101: 0.737529394106169\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0011: 0.6756891979786861\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0110: 0.7056086456196528\\n\",\n-      \"Test accuracy: 0.5594136188522539\\n\",\n+      \"[[4453  132  185  184]\\n\",\n+      \" [ 200 1749 1384 1767]\\n\",\n+      \" [ 311 1244 2337 1079]\\n\",\n+      \" [ 182  971  839 2970]]\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0101: 0.7376294591484465\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0011: 0.6883974583479262\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0110: 0.7256216540751489\\n\",\n+      \"Test accuracy: 0.5758242857857607\\n\",\n       \"\\n\",\n       \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n       \"Cut data in pieces with these shapes: after header:(13992, 500), before header:(5995, 500)\\n\",\n       \"Confusion matrix:\\n\",\n       \"H V P M \\n\",\n-      \"[[4243  201  226  284]\\n\",\n-      \" [ 168 1808 1160 1964]\\n\",\n-      \" [ 281 1312 2075 1303]\\n\",\n-      \" [ 145 1097  633 3087]]\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0101: 0.7395306949517186\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0011: 0.6763396207534897\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0110: 0.706159003352179\\n\",\n-      \"Test accuracy: 0.5610146595286937\\n\",\n+      \"[[4480  108  191  175]\\n\",\n+      \" [ 222 1717 1407 1754]\\n\",\n+      \" [ 357 1115 2430 1069]\\n\",\n+      \" [ 210  967  880 2905]]\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0101: 0.7405313453744934\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0011: 0.6909991494471407\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0110: 0.7224195727222694\\n\",\n+      \"Test accuracy: 0.5769750337719518\\n\",\n       \"\\n\",\n       \"\\n\",\n       \"\\n\",\n-      \"created a json file of the test accuracies at ./test_accuracy_20220704-1426.json\\n\",\n+      \"created a json file of the test accuracies at /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/result_vary_raining_data_20220704-2100.json\\n\",\n       \"------------- dataset 0: FPGA2.5cm with max_train_files=5 ----------------------------------\\n\",\n       \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n       \"Cut data in pieces with these shapes: after header:(13992, 500), before header:(5995, 500)\\n\",\n       \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n-      \"Cut data in pieces with these shapes: after header:(41976, 500), before header:(17986, 500)\\n\",\n+      \"Cut data in pieces with these shapes: after header:(97944, 500), before header:(41968, 500)\\n\",\n       \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n-      \"Cut data in pieces with these shapes: after header:(41976, 500), before header:(17986, 500)\\n\",\n+      \"Cut data in pieces with these shapes: after header:(97944, 500), before header:(41968, 500)\\n\",\n       \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n-      \"Cut data in pieces with these shapes: after header:(41976, 500), before header:(17986, 500)\\n\",\n+      \"Cut data in pieces with these shapes: after header:(97944, 500), before header:(41968, 500)\\n\",\n       \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n-      \"Cut data in pieces with these shapes: after header:(41976, 500), before header:(17986, 500)\\n\",\n+      \"Cut data in pieces with these shapes: after header:(97944, 500), before header:(41968, 500)\\n\",\n       \"Model: \\\"sequential_3\\\"\\n\",\n       \"_________________________________________________________________\\n\",\n       \"Layer (type)                 Output Shape              Param #   \\n\",\n@@ -682,106 +679,105 @@\n       \"Non-trainable params: 462\\n\",\n       \"_________________________________________________________________\\n\",\n       \"Epoch 1/10\\n\",\n-      \"1874/1874 [==============================] - 19s 9ms/step - loss: 1.1046 - accuracy: 0.4671 - val_loss: 0.9937 - val_accuracy: 0.5109\\n\",\n+      \"4373/4373 [==============================] - 43s 9ms/step - loss: 1.0574 - accuracy: 0.4889 - val_loss: 0.9701 - val_accuracy: 0.5301\\n\",\n       \"Epoch 2/10\\n\",\n-      \"1874/1874 [==============================] - 17s 9ms/step - loss: 1.0119 - accuracy: 0.5070 - val_loss: 0.9675 - val_accuracy: 0.5222\\n\",\n+      \"4373/4373 [==============================] - 41s 9ms/step - loss: 0.9640 - accuracy: 0.5395 - val_loss: 0.9152 - val_accuracy: 0.5670\\n\",\n       \"Epoch 3/10\\n\",\n-      \"1874/1874 [==============================] - 17s 9ms/step - loss: 0.9857 - accuracy: 0.5205 - val_loss: 0.9525 - val_accuracy: 0.5360\\n\",\n+      \"4373/4373 [==============================] - 41s 9ms/step - loss: 0.9287 - accuracy: 0.5624 - val_loss: 0.8926 - val_accuracy: 0.5792\\n\",\n       \"Epoch 4/10\\n\",\n-      \"1874/1874 [==============================] - 17s 9ms/step - loss: 0.9682 - accuracy: 0.5307 - val_loss: 0.9382 - val_accuracy: 0.5411\\n\",\n+      \"4373/4373 [==============================] - 41s 9ms/step - loss: 0.9044 - accuracy: 0.5800 - val_loss: 0.8893 - val_accuracy: 0.5866\\n\",\n       \"Epoch 5/10\\n\",\n-      \"1874/1874 [==============================] - 17s 9ms/step - loss: 0.9503 - accuracy: 0.5463 - val_loss: 0.9179 - val_accuracy: 0.5589\\n\",\n+      \"4373/4373 [==============================] - 42s 10ms/step - loss: 0.8824 - accuracy: 0.5938 - val_loss: 0.8754 - val_accuracy: 0.5928\\n\",\n       \"Epoch 6/10\\n\",\n-      \"1874/1874 [==============================] - 17s 9ms/step - loss: 0.9286 - accuracy: 0.5614 - val_loss: 0.9126 - val_accuracy: 0.5654\\n\",\n+      \"4373/4373 [==============================] - 42s 10ms/step - loss: 0.8635 - accuracy: 0.6047 - val_loss: 0.8771 - val_accuracy: 0.5969\\n\",\n       \"Epoch 7/10\\n\",\n-      \"1874/1874 [==============================] - 17s 9ms/step - loss: 0.9130 - accuracy: 0.5709 - val_loss: 0.8931 - val_accuracy: 0.5787\\n\",\n+      \"4373/4373 [==============================] - 42s 10ms/step - loss: 0.8460 - accuracy: 0.6140 - val_loss: 0.8823 - val_accuracy: 0.5991\\n\",\n       \"Epoch 8/10\\n\",\n-      \"1874/1874 [==============================] - 17s 9ms/step - loss: 0.8992 - accuracy: 0.5808 - val_loss: 0.8883 - val_accuracy: 0.5850\\n\",\n+      \"4373/4373 [==============================] - 42s 10ms/step - loss: 0.8267 - accuracy: 0.6241 - val_loss: 0.8811 - val_accuracy: 0.5969\\n\",\n       \"Epoch 9/10\\n\",\n-      \"1874/1874 [==============================] - 17s 9ms/step - loss: 0.8867 - accuracy: 0.5887 - val_loss: 0.8891 - val_accuracy: 0.5898\\n\",\n-      \"Epoch 10/10\\n\",\n-      \"1874/1874 [==============================] - 17s 9ms/step - loss: 0.8750 - accuracy: 0.5971 - val_loss: 0.8797 - val_accuracy: 0.5903\\n\",\n+      \"4373/4373 [==============================] - 42s 10ms/step - loss: 0.8076 - accuracy: 0.6343 - val_loss: 0.8874 - val_accuracy: 0.5989\\n\",\n+      \"Epoch 00009: early stopping\\n\",\n       \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n       \"Cut data in pieces with these shapes: after header:(13992, 500), before header:(5995, 500)\\n\",\n       \"Confusion matrix:\\n\",\n       \"H V P M \\n\",\n-      \"[[4518   56  204  176]\\n\",\n-      \" [ 250 2051 1317 1482]\\n\",\n-      \" [ 344 1349 2297  981]\\n\",\n-      \" [ 213 1499  733 2517]]\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0101: 0.7460849552208936\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0011: 0.6705858808225347\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0110: 0.7223695402011308\\n\",\n-      \"Test accuracy: 0.5695201881222794\\n\",\n+      \"[[4564   61  155  174]\\n\",\n+      \" [ 258 1708 1327 1807]\\n\",\n+      \" [ 377 1034 2349 1211]\\n\",\n+      \" [ 218  998  749 2997]]\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0101: 0.7482363536298594\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0011: 0.6953019462650722\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0110: 0.7190173612848352\\n\",\n+      \"Test accuracy: 0.5812778305898835\\n\",\n       \"\\n\",\n       \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n       \"Cut data in pieces with these shapes: after header:(13992, 500), before header:(5996, 500)\\n\",\n       \"Confusion matrix:\\n\",\n       \"H V P M \\n\",\n-      \"[[4449   85  246  174]\\n\",\n-      \" [ 223 2101 1312 1465]\\n\",\n-      \" [ 339 1385 2351  896]\\n\",\n-      \" [ 240 1470  776 2476]]\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0101: 0.7452971783069842\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0011: 0.6682509505703422\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0110: 0.7248349009405644\\n\",\n-      \"Test accuracy: 0.5691915149089454\\n\",\n+      \"[[4547   78  171  158]\\n\",\n+      \" [ 244 1727 1347 1783]\\n\",\n+      \" [ 361 1046 2417 1147]\\n\",\n+      \" [ 237  980  814 2931]]\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0101: 0.7462977786672004\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0011: 0.6956674004402642\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0110: 0.7209325595357214\\n\",\n+      \"Test accuracy: 0.581448869321593\\n\",\n       \"\\n\",\n       \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n       \"Cut data in pieces with these shapes: after header:(13992, 500), before header:(5995, 500)\\n\",\n       \"Confusion matrix:\\n\",\n       \"H V P M \\n\",\n-      \"[[4526   74  221  133]\\n\",\n-      \" [ 229 2100 1327 1444]\\n\",\n-      \" [ 347 1319 2381  924]\\n\",\n-      \" [ 243 1497  706 2516]]\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0101: 0.7520888577575424\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0011: 0.6732376044428878\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0110: 0.727723019962976\\n\",\n-      \"Test accuracy: 0.5765247410817032\\n\",\n+      \"[[4580   65  169  140]\\n\",\n+      \" [ 252 1685 1345 1818]\\n\",\n+      \" [ 363 1027 2462 1119]\\n\",\n+      \" [ 252  986  748 2976]]\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0101: 0.7524390854055136\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0011: 0.6948016210536849\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0110: 0.7238204833141542\\n\",\n+      \"Test accuracy: 0.5855305948866764\\n\",\n       \"\\n\",\n       \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n       \"Cut data in pieces with these shapes: after header:(13992, 500), before header:(5995, 500)\\n\",\n       \"Confusion matrix:\\n\",\n       \"H V P M \\n\",\n-      \"[[4501   86  206  161]\\n\",\n-      \" [ 234 2133 1256 1477]\\n\",\n-      \" [ 340 1367 2316  948]\\n\",\n-      \" [ 214 1461  726 2561]]\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0101: 0.750237654475409\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0011: 0.6756891979786861\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0110: 0.7259218492019813\\n\",\n-      \"Test accuracy: 0.5759243508280383\\n\",\n+      \"[[4559   71  164  160]\\n\",\n+      \" [ 211 1752 1279 1858]\\n\",\n+      \" [ 345 1088 2318 1220]\\n\",\n+      \" [ 223 1025  717 2997]]\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0101: 0.7513884024616\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0011: 0.6927002551658578\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0110: 0.7192675238905288\\n\",\n+      \"Test accuracy: 0.5816780907589933\\n\",\n       \"\\n\",\n       \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n       \"Cut data in pieces with these shapes: after header:(13992, 500), before header:(5995, 500)\\n\",\n       \"Confusion matrix:\\n\",\n       \"H V P M \\n\",\n-      \"[[4491   67  208  188]\\n\",\n-      \" [ 252 2065 1305 1478]\\n\",\n-      \" [ 370 1315 2338  948]\\n\",\n-      \" [ 252 1408  702 2600]]\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0101: 0.7483864511932756\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0011: 0.673587832090859\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0110: 0.7281733126532246\\n\",\n-      \"Test accuracy: 0.5750737979686796\\n\",\n+      \"[[4568   70  158  158]\\n\",\n+      \" [ 280 1678 1322 1820]\\n\",\n+      \" [ 408 1034 2331 1198]\\n\",\n+      \" [ 233  964  758 3007]]\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0101: 0.7471856706859459\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0011: 0.6949517186171011\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0110: 0.7170160604392856\\n\",\n+      \"Test accuracy: 0.5795767248711663\\n\",\n       \"\\n\",\n       \"\\n\",\n       \"\\n\",\n-      \"created a json file of the test accuracies at ./test_accuracy_20220704-1426.json\\n\",\n+      \"created a json file of the test accuracies at /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/result_vary_raining_data_20220704-2100.json\\n\",\n       \"------------- dataset 0: FPGA2.5cm with max_train_files=6 ----------------------------------\\n\",\n       \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n       \"Cut data in pieces with these shapes: after header:(13992, 500), before header:(5995, 500)\\n\",\n       \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n-      \"Cut data in pieces with these shapes: after header:(41976, 500), before header:(17986, 500)\\n\",\n+      \"Cut data in pieces with these shapes: after header:(97944, 500), before header:(41968, 500)\\n\",\n       \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n-      \"Cut data in pieces with these shapes: after header:(41976, 500), before header:(17986, 500)\\n\",\n+      \"Cut data in pieces with these shapes: after header:(97944, 500), before header:(41968, 500)\\n\",\n       \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n-      \"Cut data in pieces with these shapes: after header:(41976, 500), before header:(17986, 500)\\n\",\n+      \"Cut data in pieces with these shapes: after header:(97944, 500), before header:(41968, 500)\\n\",\n       \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n-      \"Cut data in pieces with these shapes: after header:(41976, 500), before header:(17986, 500)\\n\",\n+      \"Cut data in pieces with these shapes: after header:(97944, 500), before header:(41968, 500)\\n\",\n       \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n-      \"Cut data in pieces with these shapes: after header:(41976, 500), before header:(17986, 500)\\n\",\n+      \"Cut data in pieces with these shapes: after header:(97944, 500), before header:(41968, 500)\\n\",\n       \"Model: \\\"sequential_4\\\"\\n\",\n       \"_________________________________________________________________\\n\",\n       \"Layer (type)                 Output Shape              Param #   \\n\",\n@@ -825,108 +821,109 @@\n       \"Non-trainable params: 462\\n\",\n       \"_________________________________________________________________\\n\",\n       \"Epoch 1/10\\n\",\n-      \"2343/2343 [==============================] - 22s 9ms/step - loss: 1.1081 - accuracy: 0.4648 - val_loss: 1.0075 - val_accuracy: 0.5017\\n\",\n+      \"5466/5466 [==============================] - 55s 10ms/step - loss: 1.0487 - accuracy: 0.4931 - val_loss: 0.9305 - val_accuracy: 0.5555\\n\",\n       \"Epoch 2/10\\n\",\n-      \"2343/2343 [==============================] - 21s 9ms/step - loss: 1.0009 - accuracy: 0.5130 - val_loss: 0.9493 - val_accuracy: 0.5340\\n\",\n+      \"5466/5466 [==============================] - 52s 10ms/step - loss: 0.9433 - accuracy: 0.5567 - val_loss: 0.8917 - val_accuracy: 0.5806\\n\",\n       \"Epoch 3/10\\n\",\n-      \"2343/2343 [==============================] - 22s 9ms/step - loss: 0.9688 - accuracy: 0.5326 - val_loss: 0.9335 - val_accuracy: 0.5456\\n\",\n+      \"5466/5466 [==============================] - 52s 10ms/step - loss: 0.9108 - accuracy: 0.5775 - val_loss: 0.8856 - val_accuracy: 0.5892\\n\",\n       \"Epoch 4/10\\n\",\n-      \"2343/2343 [==============================] - 22s 9ms/step - loss: 0.9523 - accuracy: 0.5457 - val_loss: 0.9243 - val_accuracy: 0.5550\\n\",\n+      \"5466/5466 [==============================] - 52s 9ms/step - loss: 0.8882 - accuracy: 0.5900 - val_loss: 0.8712 - val_accuracy: 0.5967\\n\",\n       \"Epoch 5/10\\n\",\n-      \"2343/2343 [==============================] - 21s 9ms/step - loss: 0.9334 - accuracy: 0.5616 - val_loss: 0.9025 - val_accuracy: 0.5726\\n\",\n+      \"5466/5466 [==============================] - 52s 9ms/step - loss: 0.8693 - accuracy: 0.6010 - val_loss: 0.8654 - val_accuracy: 0.6036\\n\",\n       \"Epoch 6/10\\n\",\n-      \"2343/2343 [==============================] - 22s 9ms/step - loss: 0.9201 - accuracy: 0.5718 - val_loss: 0.8884 - val_accuracy: 0.5827\\n\",\n+      \"5466/5466 [==============================] - 52s 10ms/step - loss: 0.8516 - accuracy: 0.6106 - val_loss: 0.8577 - val_accuracy: 0.6074\\n\",\n       \"Epoch 7/10\\n\",\n-      \"2343/2343 [==============================] - 22s 9ms/step - loss: 0.9056 - accuracy: 0.5781 - val_loss: 0.8832 - val_accuracy: 0.5838\\n\",\n+      \"5466/5466 [==============================] - 53s 10ms/step - loss: 0.8338 - accuracy: 0.6200 - val_loss: 0.8598 - val_accuracy: 0.6099\\n\",\n       \"Epoch 8/10\\n\",\n-      \"2343/2343 [==============================] - 22s 9ms/step - loss: 0.8955 - accuracy: 0.5850 - val_loss: 0.8791 - val_accuracy: 0.5847\\n\",\n+      \"5466/5466 [==============================] - 52s 10ms/step - loss: 0.8162 - accuracy: 0.6305 - val_loss: 0.8737 - val_accuracy: 0.6063\\n\",\n       \"Epoch 9/10\\n\",\n-      \"2343/2343 [==============================] - 22s 9ms/step - loss: 0.8858 - accuracy: 0.5901 - val_loss: 0.8725 - val_accuracy: 0.5935\\n\",\n+      \"5466/5466 [==============================] - 52s 10ms/step - loss: 0.7975 - accuracy: 0.6406 - val_loss: 0.8794 - val_accuracy: 0.6058\\n\",\n       \"Epoch 10/10\\n\",\n-      \"2343/2343 [==============================] - 22s 9ms/step - loss: 0.8760 - accuracy: 0.5958 - val_loss: 0.8670 - val_accuracy: 0.5937\\n\",\n+      \"5466/5466 [==============================] - 52s 10ms/step - loss: 0.7791 - accuracy: 0.6501 - val_loss: 0.8916 - val_accuracy: 0.6000\\n\",\n+      \"Epoch 00010: early stopping\\n\",\n       \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n       \"Cut data in pieces with these shapes: after header:(13992, 500), before header:(5995, 500)\\n\",\n       \"Confusion matrix:\\n\",\n       \"H V P M \\n\",\n-      \"[[4566   61  176  151]\\n\",\n-      \" [ 242 1736 1650 1472]\\n\",\n-      \" [ 380 1088 2660  843]\\n\",\n-      \" [ 205 1209 1001 2547]]\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0101: 0.7377795567118627\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0011: 0.6832441086706359\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0110: 0.7306249061890229\\n\",\n-      \"Test accuracy: 0.5758242857857607\\n\",\n+      \"[[4606   79  145  124]\\n\",\n+      \" [ 290 1651 1380 1779]\\n\",\n+      \" [ 393 1104 2367 1107]\\n\",\n+      \" [ 250  996  721 2995]]\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0101: 0.7470856056436684\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0011: 0.6912493120528344\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0110: 0.7243208085255416\\n\",\n+      \"Test accuracy: 0.5813278631110221\\n\",\n       \"\\n\",\n       \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n       \"Cut data in pieces with these shapes: after header:(13992, 500), before header:(5996, 500)\\n\",\n       \"Confusion matrix:\\n\",\n       \"H V P M \\n\",\n-      \"[[4462   85  269  138]\\n\",\n-      \" [ 189 1714 1795 1403]\\n\",\n-      \" [ 311 1025 2882  753]\\n\",\n-      \" [ 190 1203 1168 2401]]\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0101: 0.7326896137682609\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0011: 0.6831098659195517\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0110: 0.7307884730838503\\n\",\n-      \"Test accuracy: 0.5732939763858315\\n\",\n+      \"[[4516  101  181  156]\\n\",\n+      \" [ 221 1699 1422 1759]\\n\",\n+      \" [ 372 1081 2481 1037]\\n\",\n+      \" [ 197 1034  791 2940]]\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0101: 0.7495497298379027\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0011: 0.6897138282969781\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0110: 0.7250350210126075\\n\",\n+      \"Test accuracy: 0.5821492895737442\\n\",\n       \"\\n\",\n       \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n       \"Cut data in pieces with these shapes: after header:(13992, 500), before header:(5995, 500)\\n\",\n       \"Confusion matrix:\\n\",\n       \"H V P M \\n\",\n-      \"[[4544   79  207  124]\\n\",\n-      \" [ 213 1693 1750 1444]\\n\",\n-      \" [ 331 1060 2820  760]\\n\",\n-      \" [ 203 1172 1063 2524]]\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0101: 0.7372291989793366\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0011: 0.6852454095161855\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0110: 0.7363786461199779\\n\",\n-      \"Test accuracy: 0.5794266273077501\\n\",\n+      \"[[4587   73  153  141]\\n\",\n+      \" [ 262 1742 1366 1730]\\n\",\n+      \" [ 377 1087 2444 1063]\\n\",\n+      \" [ 243  979  734 3006]]\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0101: 0.7513884024616\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0011: 0.6960024015610147\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0110: 0.7312753289638265\\n\",\n+      \"Test accuracy: 0.5893330664932206\\n\",\n       \"\\n\",\n       \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n       \"Cut data in pieces with these shapes: after header:(13992, 500), before header:(5995, 500)\\n\",\n       \"Confusion matrix:\\n\",\n       \"H V P M \\n\",\n-      \"[[4564   71  184  135]\\n\",\n-      \" [ 205 1755 1637 1503]\\n\",\n-      \" [ 337 1071 2700  863]\\n\",\n-      \" [ 196 1203  960 2603]]\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0101: 0.742932906389153\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0011: 0.686496222544654\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0110: 0.7335267924150698\\n\",\n-      \"Test accuracy: 0.5814779606744384\\n\",\n+      \"[[4603   88  123  140]\\n\",\n+      \" [ 249 1724 1287 1840]\\n\",\n+      \" [ 361 1102 2397 1111]\\n\",\n+      \" [ 222  990  747 3003]]\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0101: 0.7525391504477911\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0011: 0.6965527592935408\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0110: 0.7243708410466804\\n\",\n+      \"Test accuracy: 0.5867313753940061\\n\",\n       \"\\n\",\n       \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n       \"Cut data in pieces with these shapes: after header:(13992, 500), before header:(5995, 500)\\n\",\n       \"Confusion matrix:\\n\",\n       \"H V P M \\n\",\n-      \"[[4547   69  202  136]\\n\",\n-      \" [ 258 1743 1616 1483]\\n\",\n-      \" [ 368 1049 2704  850]\\n\",\n-      \" [ 213 1177  949 2623]]\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0101: 0.7428328413468754\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0011: 0.6875969380097063\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0110: 0.7320258167809076\\n\",\n-      \"Test accuracy: 0.5812277980687447\\n\",\n+      \"[[4618   87  115  134]\\n\",\n+      \" [ 285 1688 1311 1816]\\n\",\n+      \" [ 403 1073 2393 1102]\\n\",\n+      \" [ 241  924  745 3052]]\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0101: 0.7509381097713513\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0011: 0.6989543203082004\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0110: 0.72597188172312\\n\",\n+      \"Test accuracy: 0.5879321559013359\\n\",\n       \"\\n\",\n       \"\\n\",\n       \"\\n\",\n-      \"created a json file of the test accuracies at ./test_accuracy_20220704-1426.json\\n\",\n+      \"created a json file of the test accuracies at /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/result_vary_raining_data_20220704-2100.json\\n\",\n       \"------------- dataset 0: FPGA2.5cm with max_train_files=7 ----------------------------------\\n\",\n       \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n       \"Cut data in pieces with these shapes: after header:(13992, 500), before header:(5995, 500)\\n\",\n       \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n-      \"Cut data in pieces with these shapes: after header:(41976, 500), before header:(17986, 500)\\n\",\n+      \"Cut data in pieces with these shapes: after header:(97944, 500), before header:(41968, 500)\\n\",\n       \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n-      \"Cut data in pieces with these shapes: after header:(41976, 500), before header:(17986, 500)\\n\",\n+      \"Cut data in pieces with these shapes: after header:(97944, 500), before header:(41968, 500)\\n\",\n       \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n-      \"Cut data in pieces with these shapes: after header:(41976, 500), before header:(17986, 500)\\n\",\n+      \"Cut data in pieces with these shapes: after header:(97944, 500), before header:(41968, 500)\\n\",\n       \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n-      \"Cut data in pieces with these shapes: after header:(41976, 500), before header:(17986, 500)\\n\",\n+      \"Cut data in pieces with these shapes: after header:(97944, 500), before header:(41968, 500)\\n\",\n       \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n-      \"Cut data in pieces with these shapes: after header:(41976, 500), before header:(17986, 500)\\n\",\n+      \"Cut data in pieces with these shapes: after header:(97944, 500), before header:(41968, 500)\\n\",\n       \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n-      \"Cut data in pieces with these shapes: after header:(41976, 500), before header:(17986, 500)\\n\",\n+      \"Cut data in pieces with these shapes: after header:(97944, 500), before header:(41968, 500)\\n\",\n       \"Model: \\\"sequential_5\\\"\\n\",\n       \"_________________________________________________________________\\n\",\n       \"Layer (type)                 Output Shape              Param #   \\n\",\n@@ -970,110 +967,111 @@\n       \"Non-trainable params: 462\\n\",\n       \"_________________________________________________________________\\n\",\n       \"Epoch 1/10\\n\",\n-      \"2811/2811 [==============================] - 28s 9ms/step - loss: 1.0945 - accuracy: 0.4714 - val_loss: 0.9787 - val_accuracy: 0.5262\\n\",\n+      \"6559/6559 [==============================] - 65s 9ms/step - loss: 1.0252 - accuracy: 0.5074 - val_loss: 0.9239 - val_accuracy: 0.5553\\n\",\n       \"Epoch 2/10\\n\",\n-      \"2811/2811 [==============================] - 26s 9ms/step - loss: 0.9890 - accuracy: 0.5280 - val_loss: 0.9281 - val_accuracy: 0.5615\\n\",\n+      \"6559/6559 [==============================] - 62s 10ms/step - loss: 0.9327 - accuracy: 0.5646 - val_loss: 0.8792 - val_accuracy: 0.5837\\n\",\n       \"Epoch 3/10\\n\",\n-      \"2811/2811 [==============================] - 26s 9ms/step - loss: 0.9559 - accuracy: 0.5470 - val_loss: 0.9006 - val_accuracy: 0.5749\\n\",\n+      \"6559/6559 [==============================] - 63s 10ms/step - loss: 0.8990 - accuracy: 0.5841 - val_loss: 0.8655 - val_accuracy: 0.5957\\n\",\n       \"Epoch 4/10\\n\",\n-      \"2811/2811 [==============================] - 27s 9ms/step - loss: 0.9332 - accuracy: 0.5622 - val_loss: 0.8844 - val_accuracy: 0.5816\\n\",\n+      \"6559/6559 [==============================] - 63s 10ms/step - loss: 0.8762 - accuracy: 0.5974 - val_loss: 0.8571 - val_accuracy: 0.6036\\n\",\n       \"Epoch 5/10\\n\",\n-      \"2811/2811 [==============================] - 27s 10ms/step - loss: 0.9143 - accuracy: 0.5727 - val_loss: 0.8718 - val_accuracy: 0.5884\\n\",\n+      \"6559/6559 [==============================] - 62s 9ms/step - loss: 0.8591 - accuracy: 0.6072 - val_loss: 0.8540 - val_accuracy: 0.6082\\n\",\n       \"Epoch 6/10\\n\",\n-      \"2811/2811 [==============================] - 27s 10ms/step - loss: 0.9021 - accuracy: 0.5819 - val_loss: 0.8706 - val_accuracy: 0.5912\\n\",\n+      \"6559/6559 [==============================] - 62s 10ms/step - loss: 0.8422 - accuracy: 0.6168 - val_loss: 0.8529 - val_accuracy: 0.6125\\n\",\n       \"Epoch 7/10\\n\",\n-      \"2811/2811 [==============================] - 27s 10ms/step - loss: 0.8905 - accuracy: 0.5893 - val_loss: 0.8657 - val_accuracy: 0.5962\\n\",\n+      \"6559/6559 [==============================] - 63s 10ms/step - loss: 0.8249 - accuracy: 0.6263 - val_loss: 0.8626 - val_accuracy: 0.6078\\n\",\n       \"Epoch 8/10\\n\",\n-      \"2811/2811 [==============================] - 27s 10ms/step - loss: 0.8810 - accuracy: 0.5950 - val_loss: 0.8650 - val_accuracy: 0.5957\\n\",\n+      \"6559/6559 [==============================] - 62s 9ms/step - loss: 0.8085 - accuracy: 0.6350 - val_loss: 0.8623 - val_accuracy: 0.6102\\n\",\n       \"Epoch 9/10\\n\",\n-      \"2811/2811 [==============================] - 27s 10ms/step - loss: 0.8726 - accuracy: 0.5985 - val_loss: 0.8619 - val_accuracy: 0.5972\\n\",\n+      \"6559/6559 [==============================] - 62s 10ms/step - loss: 0.7905 - accuracy: 0.6450 - val_loss: 0.8779 - val_accuracy: 0.6087\\n\",\n       \"Epoch 10/10\\n\",\n-      \"2811/2811 [==============================] - 27s 10ms/step - loss: 0.8631 - accuracy: 0.6050 - val_loss: 0.8598 - val_accuracy: 0.6010\\n\",\n+      \"6559/6559 [==============================] - 63s 10ms/step - loss: 0.7729 - accuracy: 0.6542 - val_loss: 0.8911 - val_accuracy: 0.6045\\n\",\n+      \"Epoch 00010: early stopping\\n\",\n       \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n       \"Cut data in pieces with these shapes: after header:(13992, 500), before header:(5995, 500)\\n\",\n       \"Confusion matrix:\\n\",\n       \"H V P M \\n\",\n-      \"[[4494   67  223  170]\\n\",\n-      \" [ 216 1479 1647 1758]\\n\",\n-      \" [ 319  892 2746 1014]\\n\",\n-      \" [ 187  917  962 2896]]\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0101: 0.7420823535297943\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0011: 0.6941511982788813\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0110: 0.7260219142442588\\n\",\n-      \"Test accuracy: 0.5811277330264673\\n\",\n+      \"[[4625   78  161   90]\\n\",\n+      \" [ 279 1916 1443 1462]\\n\",\n+      \" [ 389 1161 2518  903]\\n\",\n+      \" [ 232 1241  859 2630]]\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0101: 0.7475859308550558\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0011: 0.6908490518837245\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0110: 0.7312252964426877\\n\",\n+      \"Test accuracy: 0.5848301395907339\\n\",\n       \"\\n\",\n       \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n       \"Cut data in pieces with these shapes: after header:(13992, 500), before header:(5996, 500)\\n\",\n       \"Confusion matrix:\\n\",\n       \"H V P M \\n\",\n-      \"[[4430   80  293  151]\\n\",\n-      \" [ 181 1499 1738 1683]\\n\",\n-      \" [ 292  841 2920  918]\\n\",\n-      \" [ 192  973 1040 2757]]\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0101: 0.7427956774064439\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0011: 0.6916649989993996\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0110: 0.7268361016609965\\n\",\n-      \"Test accuracy: 0.5806483890334201\\n\",\n+      \"[[4540   86  231   97]\\n\",\n+      \" [ 204 1899 1555 1443]\\n\",\n+      \" [ 344 1212 2581  834]\\n\",\n+      \" [ 221 1230  930 2581]]\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0101: 0.7428957374424655\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0011: 0.6831598959375625\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0110: 0.7347408445067041\\n\",\n+      \"Test accuracy: 0.5803982389433661\\n\",\n       \"\\n\",\n       \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n       \"Cut data in pieces with these shapes: after header:(13992, 500), before header:(5995, 500)\\n\",\n       \"Confusion matrix:\\n\",\n       \"H V P M \\n\",\n-      \"[[4495   72  241  146]\\n\",\n-      \" [ 207 1479 1764 1650]\\n\",\n-      \" [ 308  837 2872  954]\\n\",\n-      \" [ 203  912 1008 2839]]\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0101: 0.7402811827687997\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0011: 0.6967528893780958\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0110: 0.7322259468654625\\n\",\n-      \"Test accuracy: 0.584630009506179\\n\",\n+      \"[[4607   83  165   99]\\n\",\n+      \" [ 240 1922 1493 1445]\\n\",\n+      \" [ 346 1142 2632  851]\\n\",\n+      \" [ 250 1178  892 2642]]\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0101: 0.7473357682493621\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0011: 0.6939010356731876\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0110: 0.7398308900785511\\n\",\n+      \"Test accuracy: 0.5905338470005503\\n\",\n       \"\\n\",\n       \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n       \"Cut data in pieces with these shapes: after header:(13992, 500), before header:(5995, 500)\\n\",\n       \"Confusion matrix:\\n\",\n       \"H V P M \\n\",\n-      \"[[4496   84  226  148]\\n\",\n-      \" [ 184 1564 1601 1751]\\n\",\n-      \" [ 279  848 2757 1087]\\n\",\n-      \" [ 177  929  906 2950]]\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0101: 0.7480862560664432\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0011: 0.7018562065342473\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0110: 0.727522889878421\\n\",\n-      \"Test accuracy: 0.5887326762395557\\n\",\n+      \"[[4624   76  162   92]\\n\",\n+      \" [ 230 1974 1389 1507]\\n\",\n+      \" [ 358 1160 2495  958]\\n\",\n+      \" [ 232 1241  853 2636]]\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0101: 0.7503377195176865\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0011: 0.6927502876869965\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0110: 0.7305748736678841\\n\",\n+      \"Test accuracy: 0.5868314404362835\\n\",\n       \"\\n\",\n       \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n       \"Cut data in pieces with these shapes: after header:(13992, 500), before header:(5995, 500)\\n\",\n       \"Confusion matrix:\\n\",\n       \"H V P M \\n\",\n-      \"[[4523   76  221  134]\\n\",\n-      \" [ 220 1528 1631 1721]\\n\",\n-      \" [ 333  859 2756 1023]\\n\",\n-      \" [ 194  863  956 2949]]\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0101: 0.7451843698403963\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0011: 0.7020063040976635\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0110: 0.7291739630759994\\n\",\n-      \"Test accuracy: 0.5881823185070296\\n\",\n+      \"[[4591   87  165  111]\\n\",\n+      \" [ 280 1915 1426 1479]\\n\",\n+      \" [ 410 1214 2522  825]\\n\",\n+      \" [ 252 1144  870 2696]]\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0101: 0.746585280432281\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0011: 0.6897483364186722\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0110: 0.7368289388102266\\n\",\n+      \"Test accuracy: 0.5865812778305899\\n\",\n       \"\\n\",\n       \"\\n\",\n       \"\\n\",\n-      \"created a json file of the test accuracies at ./test_accuracy_20220704-1426.json\\n\",\n+      \"created a json file of the test accuracies at /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/result_vary_raining_data_20220704-2100.json\\n\",\n       \"------------- dataset 0: FPGA2.5cm with max_train_files=8 ----------------------------------\\n\",\n       \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n       \"Cut data in pieces with these shapes: after header:(13992, 500), before header:(5995, 500)\\n\",\n       \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n-      \"Cut data in pieces with these shapes: after header:(41976, 500), before header:(17986, 500)\\n\",\n+      \"Cut data in pieces with these shapes: after header:(97944, 500), before header:(41968, 500)\\n\",\n       \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n-      \"Cut data in pieces with these shapes: after header:(41976, 500), before header:(17986, 500)\\n\",\n+      \"Cut data in pieces with these shapes: after header:(97944, 500), before header:(41968, 500)\\n\",\n       \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n-      \"Cut data in pieces with these shapes: after header:(41976, 500), before header:(17986, 500)\\n\",\n+      \"Cut data in pieces with these shapes: after header:(97944, 500), before header:(41968, 500)\\n\",\n       \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n-      \"Cut data in pieces with these shapes: after header:(41976, 500), before header:(17986, 500)\\n\",\n+      \"Cut data in pieces with these shapes: after header:(97944, 500), before header:(41968, 500)\\n\",\n       \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n-      \"Cut data in pieces with these shapes: after header:(41976, 500), before header:(17986, 500)\\n\",\n+      \"Cut data in pieces with these shapes: after header:(97944, 500), before header:(41968, 500)\\n\",\n       \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n-      \"Cut data in pieces with these shapes: after header:(41976, 500), before header:(17986, 500)\\n\",\n+      \"Cut data in pieces with these shapes: after header:(97944, 500), before header:(41968, 500)\\n\",\n       \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n-      \"Cut data in pieces with these shapes: after header:(41976, 500), before header:(17986, 500)\\n\",\n+      \"Cut data in pieces with these shapes: after header:(97944, 500), before header:(41968, 500)\\n\",\n       \"Model: \\\"sequential_6\\\"\\n\",\n       \"_________________________________________________________________\\n\",\n       \"Layer (type)                 Output Shape              Param #   \\n\",\n@@ -1117,112 +1115,111 @@\n       \"Non-trainable params: 462\\n\",\n       \"_________________________________________________________________\\n\",\n       \"Epoch 1/10\\n\",\n-      \"3280/3280 [==============================] - 33s 10ms/step - loss: 1.0764 - accuracy: 0.4783 - val_loss: 1.0213 - val_accuracy: 0.5137\\n\",\n+      \"7652/7652 [==============================] - 75s 10ms/step - loss: 1.0065 - accuracy: 0.5240 - val_loss: 0.9068 - val_accuracy: 0.5707\\n\",\n       \"Epoch 2/10\\n\",\n-      \"3280/3280 [==============================] - 32s 10ms/step - loss: 0.9798 - accuracy: 0.5318 - val_loss: 0.9208 - val_accuracy: 0.5706\\n\",\n+      \"7652/7652 [==============================] - 69s 9ms/step - loss: 0.9216 - accuracy: 0.5737 - val_loss: 0.8761 - val_accuracy: 0.5870\\n\",\n       \"Epoch 3/10\\n\",\n-      \"3280/3280 [==============================] - 32s 10ms/step - loss: 0.9477 - accuracy: 0.5541 - val_loss: 0.9006 - val_accuracy: 0.5786\\n\",\n+      \"7652/7652 [==============================] - 69s 9ms/step - loss: 0.8974 - accuracy: 0.5867 - val_loss: 0.8654 - val_accuracy: 0.5982\\n\",\n       \"Epoch 4/10\\n\",\n-      \"3280/3280 [==============================] - 32s 10ms/step - loss: 0.9260 - accuracy: 0.5687 - val_loss: 0.8842 - val_accuracy: 0.5880\\n\",\n+      \"7652/7652 [==============================] - 67s 9ms/step - loss: 0.8774 - accuracy: 0.5975 - val_loss: 0.8553 - val_accuracy: 0.6054\\n\",\n       \"Epoch 5/10\\n\",\n-      \"3280/3280 [==============================] - 32s 10ms/step - loss: 0.9030 - accuracy: 0.5834 - val_loss: 0.8668 - val_accuracy: 0.5926\\n\",\n+      \"7652/7652 [==============================] - 66s 9ms/step - loss: 0.8606 - accuracy: 0.6061 - val_loss: 0.8476 - val_accuracy: 0.6103\\n\",\n       \"Epoch 6/10\\n\",\n-      \"3280/3280 [==============================] - 32s 10ms/step - loss: 0.8866 - accuracy: 0.5922 - val_loss: 0.8646 - val_accuracy: 0.5977\\n\",\n+      \"7652/7652 [==============================] - 66s 9ms/step - loss: 0.8460 - accuracy: 0.6140 - val_loss: 0.8485 - val_accuracy: 0.6083\\n\",\n       \"Epoch 7/10\\n\",\n-      \"3280/3280 [==============================] - 32s 10ms/step - loss: 0.8737 - accuracy: 0.5998 - val_loss: 0.8537 - val_accuracy: 0.6062\\n\",\n+      \"7652/7652 [==============================] - 68s 9ms/step - loss: 0.8310 - accuracy: 0.6216 - val_loss: 0.8494 - val_accuracy: 0.6076\\n\",\n       \"Epoch 8/10\\n\",\n-      \"3280/3280 [==============================] - 32s 10ms/step - loss: 0.8617 - accuracy: 0.6068 - val_loss: 0.8536 - val_accuracy: 0.6064\\n\",\n+      \"7652/7652 [==============================] - 69s 9ms/step - loss: 0.8164 - accuracy: 0.6297 - val_loss: 0.8490 - val_accuracy: 0.6129\\n\",\n       \"Epoch 9/10\\n\",\n-      \"3280/3280 [==============================] - 32s 10ms/step - loss: 0.8524 - accuracy: 0.6118 - val_loss: 0.8470 - val_accuracy: 0.6078\\n\",\n-      \"Epoch 10/10\\n\",\n-      \"3280/3280 [==============================] - 32s 10ms/step - loss: 0.8424 - accuracy: 0.6178 - val_loss: 0.8494 - val_accuracy: 0.6064\\n\",\n+      \"7652/7652 [==============================] - 69s 9ms/step - loss: 0.8025 - accuracy: 0.6372 - val_loss: 0.8571 - val_accuracy: 0.6109\\n\",\n+      \"Epoch 00009: early stopping\\n\",\n       \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n       \"Cut data in pieces with these shapes: after header:(13992, 500), before header:(5995, 500)\\n\",\n       \"Confusion matrix:\\n\",\n       \"H V P M \\n\",\n-      \"[[4523   59  199  173]\\n\",\n-      \" [ 198 1731 1455 1716]\\n\",\n-      \" [ 308 1052 2562 1049]\\n\",\n-      \" [ 175 1011  817 2959]]\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0101: 0.7509381097713513\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0011: 0.695351978786211\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0110: 0.7319757842597688\\n\",\n-      \"Test accuracy: 0.5891329364086656\\n\",\n+      \"[[4543   67  184  160]\\n\",\n+      \" [ 226 1575 1431 1868]\\n\",\n+      \" [ 311  955 2494 1211]\\n\",\n+      \" [ 176  867  806 3113]]\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0101: 0.7482363536298594\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0011: 0.7022064341822184\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0110: 0.7228198328913794\\n\",\n+      \"Test accuracy: 0.5866313103517287\\n\",\n       \"\\n\",\n       \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n       \"Cut data in pieces with these shapes: after header:(13992, 500), before header:(5996, 500)\\n\",\n       \"Confusion matrix:\\n\",\n       \"H V P M \\n\",\n-      \"[[4426   83  269  176]\\n\",\n-      \" [ 147 1796 1608 1550]\\n\",\n-      \" [ 282 1070 2763  856]\\n\",\n-      \" [ 159 1071  946 2786]]\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0101: 0.7475985591354813\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0011: 0.6905643386031619\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0110: 0.7396437862717631\\n\",\n-      \"Test accuracy: 0.5889033420052031\\n\",\n+      \"[[4450   99  229  176]\\n\",\n+      \" [ 155 1616 1446 1884]\\n\",\n+      \" [ 276 1006 2573 1116]\\n\",\n+      \" [ 164  868  800 3130]]\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0101: 0.7517510506303783\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0011: 0.6973684210526315\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0110: 0.7284870922553532\\n\",\n+      \"Test accuracy: 0.5888032819691815\\n\",\n       \"\\n\",\n       \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n       \"Cut data in pieces with these shapes: after header:(13992, 500), before header:(5995, 500)\\n\",\n       \"Confusion matrix:\\n\",\n       \"H V P M \\n\",\n-      \"[[4490   63  242  159]\\n\",\n-      \" [ 179 1755 1552 1614]\\n\",\n-      \" [ 288 1021 2740  922]\\n\",\n-      \" [ 174 1038  854 2896]]\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0101: 0.7536398659128434\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0011: 0.6954020113073498\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0110: 0.7398308900785511\\n\",\n-      \"Test accuracy: 0.5944363836493721\\n\",\n+      \"[[4540   64  195  155]\\n\",\n+      \" [ 187 1612 1447 1854]\\n\",\n+      \" [ 282  983 2568 1138]\\n\",\n+      \" [ 184  835  774 3169]]\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0101: 0.7532396057437334\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0011: 0.703056987041577\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0110: 0.7333766948516536\\n\",\n+      \"Test accuracy: 0.594836643818482\\n\",\n       \"\\n\",\n       \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n       \"Cut data in pieces with these shapes: after header:(13992, 500), before header:(5995, 500)\\n\",\n       \"Confusion matrix:\\n\",\n       \"H V P M \\n\",\n-      \"[[4474   64  217  199]\\n\",\n-      \" [ 169 1796 1438 1697]\\n\",\n-      \" [ 260 1064 2575 1072]\\n\",\n-      \" [ 142 1045  811 2964]]\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0101: 0.7518887276729874\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0011: 0.696702856856957\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0110: 0.7330764997248211\\n\",\n-      \"Test accuracy: 0.5908340421273828\\n\",\n+      \"[[4538   71  185  160]\\n\",\n+      \" [ 178 1592 1419 1911]\\n\",\n+      \" [ 288  980 2488 1215]\\n\",\n+      \" [ 164  883  748 3167]]\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0101: 0.7530895081803172\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0011: 0.7003051983789463\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0110: 0.7258718166808426\\n\",\n+      \"Test accuracy: 0.589633261620053\\n\",\n       \"\\n\",\n       \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n       \"Cut data in pieces with these shapes: after header:(13992, 500), before header:(5995, 500)\\n\",\n       \"Confusion matrix:\\n\",\n       \"H V P M \\n\",\n-      \"[[4484   56  224  190]\\n\",\n-      \" [ 223 1731 1449 1697]\\n\",\n-      \" [ 318 1067 2603  983]\\n\",\n-      \" [ 180  974  771 3037]]\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0101: 0.753890028518537\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0011: 0.6948516535748236\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0110: 0.737529394106169\\n\",\n-      \"Test accuracy: 0.5931355380997648\\n\",\n+      \"[[4518   82  187  167]\\n\",\n+      \" [ 212 1562 1402 1924]\\n\",\n+      \" [ 319  947 2508 1197]\\n\",\n+      \" [ 176  827  768 3191]]\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0101: 0.7522889878420974\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0011: 0.7023565317456346\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0110: 0.7240206133987092\\n\",\n+      \"Test accuracy: 0.5893330664932206\\n\",\n       \"\\n\",\n       \"\\n\",\n       \"\\n\",\n-      \"created a json file of the test accuracies at ./test_accuracy_20220704-1426.json\\n\",\n+      \"created a json file of the test accuracies at /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/result_vary_raining_data_20220704-2100.json\\n\",\n       \"------------- dataset 0: FPGA2.5cm with max_train_files=9 ----------------------------------\\n\",\n       \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n       \"Cut data in pieces with these shapes: after header:(13992, 500), before header:(5995, 500)\\n\",\n       \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n-      \"Cut data in pieces with these shapes: after header:(41976, 500), before header:(17986, 500)\\n\",\n+      \"Cut data in pieces with these shapes: after header:(97944, 500), before header:(41968, 500)\\n\",\n       \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n-      \"Cut data in pieces with these shapes: after header:(41976, 500), before header:(17986, 500)\\n\",\n+      \"Cut data in pieces with these shapes: after header:(97944, 500), before header:(41968, 500)\\n\",\n       \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n-      \"Cut data in pieces with these shapes: after header:(41976, 500), before header:(17986, 500)\\n\",\n+      \"Cut data in pieces with these shapes: after header:(97944, 500), before header:(41968, 500)\\n\",\n       \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n-      \"Cut data in pieces with these shapes: after header:(41976, 500), before header:(17986, 500)\\n\",\n+      \"Cut data in pieces with these shapes: after header:(97944, 500), before header:(41968, 500)\\n\",\n       \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n-      \"Cut data in pieces with these shapes: after header:(41976, 500), before header:(17986, 500)\\n\",\n+      \"Cut data in pieces with these shapes: after header:(97944, 500), before header:(41968, 500)\\n\",\n       \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n-      \"Cut data in pieces with these shapes: after header:(41976, 500), before header:(17986, 500)\\n\",\n+      \"Cut data in pieces with these shapes: after header:(97944, 500), before header:(41968, 500)\\n\",\n       \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n-      \"Cut data in pieces with these shapes: after header:(41976, 500), before header:(17986, 500)\\n\",\n+      \"Cut data in pieces with these shapes: after header:(97944, 500), before header:(41968, 500)\\n\",\n       \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n-      \"Cut data in pieces with these shapes: after header:(41976, 500), before header:(17986, 500)\\n\",\n+      \"Cut data in pieces with these shapes: after header:(97944, 500), before header:(41968, 500)\\n\",\n       \"Model: \\\"sequential_7\\\"\\n\",\n       \"_________________________________________________________________\\n\",\n       \"Layer (type)                 Output Shape              Param #   \\n\",\n@@ -1266,114 +1263,113 @@\n       \"Non-trainable params: 462\\n\",\n       \"_________________________________________________________________\\n\",\n       \"Epoch 1/10\\n\",\n-      \"3748/3748 [==============================] - 39s 10ms/step - loss: 1.0490 - accuracy: 0.4976 - val_loss: 0.9595 - val_accuracy: 0.5373\\n\",\n+      \"8745/8745 [==============================] - 83s 9ms/step - loss: 1.0011 - accuracy: 0.5234 - val_loss: 0.9074 - val_accuracy: 0.5677\\n\",\n       \"Epoch 2/10\\n\",\n-      \"3748/3748 [==============================] - 36s 10ms/step - loss: 0.9635 - accuracy: 0.5451 - val_loss: 0.9196 - val_accuracy: 0.5643\\n\",\n+      \"8745/8745 [==============================] - 80s 9ms/step - loss: 0.9222 - accuracy: 0.5710 - val_loss: 0.8740 - val_accuracy: 0.5886\\n\",\n       \"Epoch 3/10\\n\",\n-      \"3748/3748 [==============================] - 36s 10ms/step - loss: 0.9311 - accuracy: 0.5653 - val_loss: 0.8903 - val_accuracy: 0.5806\\n\",\n+      \"8745/8745 [==============================] - 82s 9ms/step - loss: 0.8908 - accuracy: 0.5892 - val_loss: 0.8557 - val_accuracy: 0.6005\\n\",\n       \"Epoch 4/10\\n\",\n-      \"3748/3748 [==============================] - 36s 10ms/step - loss: 0.9080 - accuracy: 0.5800 - val_loss: 0.8785 - val_accuracy: 0.5909\\n\",\n+      \"8745/8745 [==============================] - 84s 10ms/step - loss: 0.8721 - accuracy: 0.5996 - val_loss: 0.8478 - val_accuracy: 0.6025\\n\",\n       \"Epoch 5/10\\n\",\n-      \"3748/3748 [==============================] - 36s 10ms/step - loss: 0.8934 - accuracy: 0.5880 - val_loss: 0.8632 - val_accuracy: 0.5973\\n\",\n+      \"8745/8745 [==============================] - 84s 10ms/step - loss: 0.8562 - accuracy: 0.6081 - val_loss: 0.8403 - val_accuracy: 0.6074\\n\",\n       \"Epoch 6/10\\n\",\n-      \"3748/3748 [==============================] - 36s 10ms/step - loss: 0.8827 - accuracy: 0.5932 - val_loss: 0.8529 - val_accuracy: 0.6031\\n\",\n+      \"8745/8745 [==============================] - 84s 10ms/step - loss: 0.8414 - accuracy: 0.6164 - val_loss: 0.8416 - val_accuracy: 0.6096\\n\",\n       \"Epoch 7/10\\n\",\n-      \"3748/3748 [==============================] - 36s 10ms/step - loss: 0.8736 - accuracy: 0.5990 - val_loss: 0.8553 - val_accuracy: 0.6024\\n\",\n+      \"8745/8745 [==============================] - 84s 10ms/step - loss: 0.8266 - accuracy: 0.6242 - val_loss: 0.8431 - val_accuracy: 0.6125\\n\",\n       \"Epoch 8/10\\n\",\n-      \"3748/3748 [==============================] - 36s 10ms/step - loss: 0.8643 - accuracy: 0.6047 - val_loss: 0.8443 - val_accuracy: 0.6103\\n\",\n+      \"8745/8745 [==============================] - 84s 10ms/step - loss: 0.8108 - accuracy: 0.6330 - val_loss: 0.8488 - val_accuracy: 0.6122\\n\",\n       \"Epoch 9/10\\n\",\n-      \"3748/3748 [==============================] - 36s 10ms/step - loss: 0.8554 - accuracy: 0.6086 - val_loss: 0.8444 - val_accuracy: 0.6090\\n\",\n-      \"Epoch 10/10\\n\",\n-      \"3748/3748 [==============================] - 37s 10ms/step - loss: 0.8466 - accuracy: 0.6138 - val_loss: 0.8466 - val_accuracy: 0.6098\\n\",\n+      \"8745/8745 [==============================] - 84s 10ms/step - loss: 0.7972 - accuracy: 0.6405 - val_loss: 0.8543 - val_accuracy: 0.6124\\n\",\n+      \"Epoch 00009: early stopping\\n\",\n       \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n       \"Cut data in pieces with these shapes: after header:(13992, 500), before header:(5995, 500)\\n\",\n       \"Confusion matrix:\\n\",\n       \"H V P M \\n\",\n-      \"[[4610   64  163  117]\\n\",\n-      \" [ 267 1615 1606 1612]\\n\",\n-      \" [ 381  838 2744 1008]\\n\",\n-      \" [ 226 1044  915 2777]]\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0101: 0.7477860609396108\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0011: 0.7004552959423626\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0110: 0.7271226297093111\\n\",\n-      \"Test accuracy: 0.5876819932956422\\n\",\n+      \"[[4535   79  161  179]\\n\",\n+      \" [ 198 1361 1501 2040]\\n\",\n+      \" [ 285  873 2566 1247]\\n\",\n+      \" [ 165  734  840 3223]]\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0101: 0.7457347275729224\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0011: 0.7029068894781608\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0110: 0.7206184019612748\\n\",\n+      \"Test accuracy: 0.584630009506179\\n\",\n       \"\\n\",\n       \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n       \"Cut data in pieces with these shapes: after header:(13992, 500), before header:(5996, 500)\\n\",\n       \"Confusion matrix:\\n\",\n       \"H V P M \\n\",\n-      \"[[4538   77  217  122]\\n\",\n-      \" [ 208 1621 1628 1644]\\n\",\n-      \" [ 360  813 2882  916]\\n\",\n-      \" [ 211 1045  949 2757]]\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0101: 0.7536521913147889\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0011: 0.6978186912147288\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0110: 0.729037422453472\\n\",\n-      \"Test accuracy: 0.5902541524914949\\n\",\n+      \"[[4420  102  237  195]\\n\",\n+      \" [ 163 1470 1603 1865]\\n\",\n+      \" [ 273  855 2775 1068]\\n\",\n+      \" [ 172  788  911 3091]]\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0101: 0.746397838703222\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0011: 0.7004202521512908\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0110: 0.7294876926155693\\n\",\n+      \"Test accuracy: 0.588152891735041\\n\",\n       \"\\n\",\n       \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n       \"Cut data in pieces with these shapes: after header:(13992, 500), before header:(5995, 500)\\n\",\n       \"Confusion matrix:\\n\",\n       \"H V P M \\n\",\n-      \"[[4609   65  165  115]\\n\",\n-      \" [ 243 1628 1607 1622]\\n\",\n-      \" [ 343  818 2872  938]\\n\",\n-      \" [ 224  983  906 2849]]\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0101: 0.7540401260819533\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0011: 0.705958873267624\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0110: 0.7365787762045329\\n\",\n-      \"Test accuracy: 0.5982888877770551\\n\",\n+      \"[[4517   91  179  167]\\n\",\n+      \" [ 187 1404 1643 1866]\\n\",\n+      \" [ 261  825 2764 1121]\\n\",\n+      \" [ 178  772  809 3203]]\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0101: 0.7487867113623855\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0011: 0.7052584179716815\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0110: 0.7355280932606194\\n\",\n+      \"Test accuracy: 0.5947866112973432\\n\",\n       \"\\n\",\n       \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n       \"Cut data in pieces with these shapes: after header:(13992, 500), before header:(5995, 500)\\n\",\n       \"Confusion matrix:\\n\",\n       \"H V P M \\n\",\n-      \"[[4632   57  157  108]\\n\",\n-      \" [ 235 1609 1555 1701]\\n\",\n-      \" [ 365  869 2706 1031]\\n\",\n-      \" [ 233 1030  913 2786]]\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0101: 0.7497873617851604\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0011: 0.6989042877870616\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0110: 0.7253714914694551\\n\",\n-      \"Test accuracy: 0.5870315705208385\\n\",\n+      \"[[4512   81  180  181]\\n\",\n+      \" [ 167 1416 1481 2036]\\n\",\n+      \" [ 272  836 2605 1258]\\n\",\n+      \" [ 153  766  790 3253]]\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0101: 0.7524891179266523\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0011: 0.7045579626757392\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0110: 0.722319507679992\\n\",\n+      \"Test accuracy: 0.5896832941411918\\n\",\n       \"\\n\",\n       \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n       \"Cut data in pieces with these shapes: after header:(13992, 500), before header:(5995, 500)\\n\",\n       \"Confusion matrix:\\n\",\n       \"H V P M \\n\",\n-      \"[[4613   53  161  127]\\n\",\n-      \" [ 285 1590 1574 1651]\\n\",\n-      \" [ 394  830 2791  956]\\n\",\n-      \" [ 251  930  875 2906]]\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0101: 0.7522889878420974\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0011: 0.7039075399009356\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0110: 0.7345774753589833\\n\",\n-      \"Test accuracy: 0.5953870015510082\\n\",\n+      \"[[4505   79  187  183]\\n\",\n+      \" [ 210 1445 1471 1974]\\n\",\n+      \" [ 305  849 2626 1191]\\n\",\n+      \" [ 169  711  760 3322]]\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0101: 0.7542402561665082\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0011: 0.7073597838595087\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0110: 0.7289738329914445\\n\",\n+      \"Test accuracy: 0.5952869365087307\\n\",\n       \"\\n\",\n       \"\\n\",\n       \"\\n\",\n-      \"created a json file of the test accuracies at ./test_accuracy_20220704-1426.json\\n\",\n+      \"created a json file of the test accuracies at /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/result_vary_raining_data_20220704-2100.json\\n\",\n       \"------------- dataset 0: FPGA2.5cm with max_train_files=10 ----------------------------------\\n\",\n       \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n       \"Cut data in pieces with these shapes: after header:(13992, 500), before header:(5995, 500)\\n\",\n       \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n-      \"Cut data in pieces with these shapes: after header:(41976, 500), before header:(17986, 500)\\n\",\n+      \"Cut data in pieces with these shapes: after header:(97944, 500), before header:(41968, 500)\\n\",\n       \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n-      \"Cut data in pieces with these shapes: after header:(41976, 500), before header:(17986, 500)\\n\",\n+      \"Cut data in pieces with these shapes: after header:(97944, 500), before header:(41968, 500)\\n\",\n       \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n-      \"Cut data in pieces with these shapes: after header:(41976, 500), before header:(17986, 500)\\n\",\n+      \"Cut data in pieces with these shapes: after header:(97944, 500), before header:(41968, 500)\\n\",\n       \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n-      \"Cut data in pieces with these shapes: after header:(41976, 500), before header:(17986, 500)\\n\",\n+      \"Cut data in pieces with these shapes: after header:(97944, 500), before header:(41968, 500)\\n\",\n       \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n-      \"Cut data in pieces with these shapes: after header:(41976, 500), before header:(17986, 500)\\n\",\n+      \"Cut data in pieces with these shapes: after header:(97944, 500), before header:(41968, 500)\\n\",\n       \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n-      \"Cut data in pieces with these shapes: after header:(41976, 500), before header:(17986, 500)\\n\",\n+      \"Cut data in pieces with these shapes: after header:(97944, 500), before header:(41968, 500)\\n\",\n       \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n-      \"Cut data in pieces with these shapes: after header:(41976, 500), before header:(17986, 500)\\n\",\n+      \"Cut data in pieces with these shapes: after header:(97944, 500), before header:(41968, 500)\\n\",\n       \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n-      \"Cut data in pieces with these shapes: after header:(41976, 500), before header:(17986, 500)\\n\",\n+      \"Cut data in pieces with these shapes: after header:(97944, 500), before header:(41968, 500)\\n\",\n       \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n-      \"Cut data in pieces with these shapes: after header:(41976, 500), before header:(17986, 500)\\n\",\n+      \"Cut data in pieces with these shapes: after header:(97944, 500), before header:(41968, 500)\\n\",\n       \"Model: \\\"sequential_8\\\"\\n\",\n       \"_________________________________________________________________\\n\",\n       \"Layer (type)                 Output Shape              Param #   \\n\",\n@@ -1417,116 +1413,117 @@\n       \"Non-trainable params: 462\\n\",\n       \"_________________________________________________________________\\n\",\n       \"Epoch 1/10\\n\",\n-      \"4217/4217 [==============================] - 44s 10ms/step - loss: 1.0698 - accuracy: 0.4825 - val_loss: 0.9650 - val_accuracy: 0.5320\\n\",\n+      \"9838/9838 [==============================] - 99s 10ms/step - loss: 1.0031 - accuracy: 0.5221 - val_loss: 0.8971 - val_accuracy: 0.5751\\n\",\n       \"Epoch 2/10\\n\",\n-      \"4217/4217 [==============================] - 41s 10ms/step - loss: 0.9794 - accuracy: 0.5296 - val_loss: 0.9179 - val_accuracy: 0.5542\\n\",\n+      \"9838/9838 [==============================] - 95s 10ms/step - loss: 0.9164 - accuracy: 0.5743 - val_loss: 0.8648 - val_accuracy: 0.5926\\n\",\n       \"Epoch 3/10\\n\",\n-      \"4217/4217 [==============================] - 40s 10ms/step - loss: 0.9459 - accuracy: 0.5506 - val_loss: 0.8990 - val_accuracy: 0.5673\\n\",\n+      \"9838/9838 [==============================] - 95s 10ms/step - loss: 0.8889 - accuracy: 0.5901 - val_loss: 0.8557 - val_accuracy: 0.6020\\n\",\n       \"Epoch 4/10\\n\",\n-      \"4217/4217 [==============================] - 40s 9ms/step - loss: 0.9305 - accuracy: 0.5581 - val_loss: 0.8880 - val_accuracy: 0.5745\\n\",\n+      \"9838/9838 [==============================] - 95s 10ms/step - loss: 0.8711 - accuracy: 0.6002 - val_loss: 0.8403 - val_accuracy: 0.6104\\n\",\n       \"Epoch 5/10\\n\",\n-      \"4217/4217 [==============================] - 40s 10ms/step - loss: 0.9138 - accuracy: 0.5707 - val_loss: 0.8786 - val_accuracy: 0.5825\\n\",\n+      \"9838/9838 [==============================] - 94s 10ms/step - loss: 0.8563 - accuracy: 0.6076 - val_loss: 0.8371 - val_accuracy: 0.6094\\n\",\n       \"Epoch 6/10\\n\",\n-      \"4217/4217 [==============================] - 41s 10ms/step - loss: 0.8961 - accuracy: 0.5839 - val_loss: 0.8615 - val_accuracy: 0.5967\\n\",\n+      \"9838/9838 [==============================] - 95s 10ms/step - loss: 0.8426 - accuracy: 0.6152 - val_loss: 0.8354 - val_accuracy: 0.6134\\n\",\n       \"Epoch 7/10\\n\",\n-      \"4217/4217 [==============================] - 41s 10ms/step - loss: 0.8818 - accuracy: 0.5929 - val_loss: 0.8539 - val_accuracy: 0.6015\\n\",\n+      \"9838/9838 [==============================] - 95s 10ms/step - loss: 0.8287 - accuracy: 0.6231 - val_loss: 0.8356 - val_accuracy: 0.6139\\n\",\n       \"Epoch 8/10\\n\",\n-      \"4217/4217 [==============================] - 41s 10ms/step - loss: 0.8714 - accuracy: 0.5983 - val_loss: 0.8437 - val_accuracy: 0.6061\\n\",\n+      \"9838/9838 [==============================] - 94s 10ms/step - loss: 0.8162 - accuracy: 0.6299 - val_loss: 0.8379 - val_accuracy: 0.6144\\n\",\n       \"Epoch 9/10\\n\",\n-      \"4217/4217 [==============================] - 41s 10ms/step - loss: 0.8612 - accuracy: 0.6046 - val_loss: 0.8487 - val_accuracy: 0.6052\\n\",\n+      \"9838/9838 [==============================] - 91s 9ms/step - loss: 0.8038 - accuracy: 0.6368 - val_loss: 0.8371 - val_accuracy: 0.6174\\n\",\n       \"Epoch 10/10\\n\",\n-      \"4217/4217 [==============================] - 41s 10ms/step - loss: 0.8520 - accuracy: 0.6094 - val_loss: 0.8403 - val_accuracy: 0.6111\\n\",\n+      \"9838/9838 [==============================] - 88s 9ms/step - loss: 0.7913 - accuracy: 0.6440 - val_loss: 0.8429 - val_accuracy: 0.6177\\n\",\n+      \"Epoch 00010: early stopping\\n\",\n       \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n       \"Cut data in pieces with these shapes: after header:(13992, 500), before header:(5995, 500)\\n\",\n       \"Confusion matrix:\\n\",\n       \"H V P M \\n\",\n-      \"[[4557   84  161  152]\\n\",\n-      \" [ 228 1826 1167 1879]\\n\",\n-      \" [ 316 1216 2245 1194]\\n\",\n-      \" [ 175 1030  590 3167]]\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0101: 0.7595437034072147\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0011: 0.6950017511382398\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0110: 0.7257217191174263\\n\",\n-      \"Test accuracy: 0.5901335868314405\\n\",\n+      \"[[4487  100  203  164]\\n\",\n+      \" [ 168 1890 1480 1562]\\n\",\n+      \" [ 237 1265 2511  958]\\n\",\n+      \" [ 136 1181  802 2843]]\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0101: 0.746185020263171\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0011: 0.6883974583479262\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0110: 0.7392805323460249\\n\",\n+      \"Test accuracy: 0.5869315054785611\\n\",\n       \"\\n\",\n       \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n       \"Cut data in pieces with these shapes: after header:(13992, 500), before header:(5996, 500)\\n\",\n       \"Confusion matrix:\\n\",\n       \"H V P M \\n\",\n-      \"[[4471   91  218  174]\\n\",\n-      \" [ 162 1893 1258 1788]\\n\",\n-      \" [ 309 1222 2350 1090]\\n\",\n-      \" [ 182 1117  645 3018]]\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0101: 0.7586551931158695\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0011: 0.686411847108265\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0110: 0.7288373023814289\\n\",\n-      \"Test accuracy: 0.5869521713027817\\n\",\n+      \"[[4351  142  295  166]\\n\",\n+      \" [ 121 1901 1587 1492]\\n\",\n+      \" [ 224 1189 2753  805]\\n\",\n+      \" [ 147 1149  886 2780]]\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0101: 0.7476986191715029\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0011: 0.6873624174504703\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0110: 0.7441464878927356\\n\",\n+      \"Test accuracy: 0.5896037622573544\\n\",\n       \"\\n\",\n       \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n       \"Cut data in pieces with these shapes: after header:(13992, 500), before header:(5995, 500)\\n\",\n       \"Confusion matrix:\\n\",\n       \"H V P M \\n\",\n-      \"[[4550   83  175  146]\\n\",\n-      \" [ 202 1888 1202 1808]\\n\",\n-      \" [ 292 1250 2322 1107]\\n\",\n-      \" [ 207 1089  563 3103]]\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0101: 0.7618451993795967\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0011: 0.6913493770951118\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0110: 0.733877020063041\\n\",\n-      \"Test accuracy: 0.5935357982688748\\n\",\n+      \"[[4441  109  236  168]\\n\",\n+      \" [ 149 1880 1545 1526]\\n\",\n+      \" [ 212 1190 2756  813]\\n\",\n+      \" [ 154 1158  854 2796]]\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0101: 0.7507379796867965\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0011: 0.690348726672337\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0110: 0.7469855406013909\\n\",\n+      \"Test accuracy: 0.5940361234802621\\n\",\n       \"\\n\",\n       \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n       \"Cut data in pieces with these shapes: after header:(13992, 500), before header:(5995, 500)\\n\",\n       \"Confusion matrix:\\n\",\n       \"H V P M \\n\",\n-      \"[[4538   96  163  157]\\n\",\n-      \" [ 177 1869 1146 1908]\\n\",\n-      \" [ 300 1193 2210 1268]\\n\",\n-      \" [ 177 1057  554 3174]]\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0101: 0.7614449392104868\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0011: 0.6947515885325461\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0110: 0.7236703857507379\\n\",\n-      \"Test accuracy: 0.5899334567468855\\n\",\n+      \"[[4457  121  220  156]\\n\",\n+      \" [ 136 1928 1392 1644]\\n\",\n+      \" [ 213 1235 2516 1007]\\n\",\n+      \" [ 139 1267  760 2796]]\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0101: 0.7525391504477911\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0011: 0.686496222544654\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0110: 0.7314254265272427\\n\",\n+      \"Test accuracy: 0.5852303997598439\\n\",\n       \"\\n\",\n       \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n       \"Cut data in pieces with these shapes: after header:(13992, 500), before header:(5995, 500)\\n\",\n       \"Confusion matrix:\\n\",\n       \"H V P M \\n\",\n-      \"[[4550   84  167  153]\\n\",\n-      \" [ 246 1811 1161 1882]\\n\",\n-      \" [ 343 1200 2265 1163]\\n\",\n-      \" [ 198  968  570 3226]]\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0101: 0.7610947115625156\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0011: 0.6962025316455697\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0110: 0.728673637864612\\n\",\n-      \"Test accuracy: 0.5929854405363486\\n\",\n+      \"[[4446  115  219  174]\\n\",\n+      \" [ 170 1921 1410 1599]\\n\",\n+      \" [ 268 1176 2605  922]\\n\",\n+      \" [ 148 1140  776 2898]]\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0101: 0.7552909391104218\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0011: 0.6931005153349677\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0110: 0.7393805973883024\\n\",\n+      \"Test accuracy: 0.5938860259168459\\n\",\n       \"\\n\",\n       \"\\n\",\n       \"\\n\",\n-      \"created a json file of the test accuracies at ./test_accuracy_20220704-1426.json\\n\",\n+      \"created a json file of the test accuracies at /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/result_vary_raining_data_20220704-2100.json\\n\",\n       \"------------- dataset 0: FPGA2.5cm with max_train_files=11 ----------------------------------\\n\",\n       \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n       \"Cut data in pieces with these shapes: after header:(13992, 500), before header:(5995, 500)\\n\",\n       \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n-      \"Cut data in pieces with these shapes: after header:(41976, 500), before header:(17986, 500)\\n\",\n+      \"Cut data in pieces with these shapes: after header:(97944, 500), before header:(41968, 500)\\n\",\n       \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n-      \"Cut data in pieces with these shapes: after header:(41976, 500), before header:(17986, 500)\\n\",\n+      \"Cut data in pieces with these shapes: after header:(97944, 500), before header:(41968, 500)\\n\",\n       \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n-      \"Cut data in pieces with these shapes: after header:(41976, 500), before header:(17986, 500)\\n\",\n+      \"Cut data in pieces with these shapes: after header:(97944, 500), before header:(41968, 500)\\n\",\n       \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n-      \"Cut data in pieces with these shapes: after header:(41976, 500), before header:(17986, 500)\\n\",\n+      \"Cut data in pieces with these shapes: after header:(97944, 500), before header:(41968, 500)\\n\",\n       \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n-      \"Cut data in pieces with these shapes: after header:(41976, 500), before header:(17986, 500)\\n\",\n+      \"Cut data in pieces with these shapes: after header:(97944, 500), before header:(41968, 500)\\n\",\n       \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n-      \"Cut data in pieces with these shapes: after header:(41976, 500), before header:(17986, 500)\\n\",\n+      \"Cut data in pieces with these shapes: after header:(97944, 500), before header:(41968, 500)\\n\",\n       \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n-      \"Cut data in pieces with these shapes: after header:(41976, 500), before header:(17986, 500)\\n\",\n+      \"Cut data in pieces with these shapes: after header:(97944, 500), before header:(41968, 500)\\n\",\n       \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n-      \"Cut data in pieces with these shapes: after header:(41976, 500), before header:(17986, 500)\\n\",\n+      \"Cut data in pieces with these shapes: after header:(97944, 500), before header:(41968, 500)\\n\",\n       \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n-      \"Cut data in pieces with these shapes: after header:(41976, 500), before header:(17986, 500)\\n\",\n+      \"Cut data in pieces with these shapes: after header:(97944, 500), before header:(41968, 500)\\n\",\n       \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n-      \"Cut data in pieces with these shapes: after header:(41976, 500), before header:(17987, 500)\\n\",\n+      \"Cut data in pieces with these shapes: after header:(97943, 500), before header:(41969, 500)\\n\",\n       \"Model: \\\"sequential_9\\\"\\n\",\n       \"_________________________________________________________________\\n\",\n       \"Layer (type)                 Output Shape              Param #   \\n\",\n@@ -1570,118 +1567,119 @@\n       \"Non-trainable params: 462\\n\",\n       \"_________________________________________________________________\\n\",\n       \"Epoch 1/10\\n\",\n-      \"4685/4685 [==============================] - 47s 10ms/step - loss: 1.0519 - accuracy: 0.4924 - val_loss: 0.9517 - val_accuracy: 0.5434\\n\",\n+      \"10931/10931 [==============================] - 99s 9ms/step - loss: 0.9924 - accuracy: 0.5284 - val_loss: 0.8918 - val_accuracy: 0.5824\\n\",\n       \"Epoch 2/10\\n\",\n-      \"4685/4685 [==============================] - 45s 10ms/step - loss: 0.9601 - accuracy: 0.5409 - val_loss: 0.9160 - val_accuracy: 0.5628\\n\",\n+      \"10931/10931 [==============================] - 96s 9ms/step - loss: 0.9084 - accuracy: 0.5787 - val_loss: 0.8568 - val_accuracy: 0.5981\\n\",\n       \"Epoch 3/10\\n\",\n-      \"4685/4685 [==============================] - 45s 10ms/step - loss: 0.9335 - accuracy: 0.5583 - val_loss: 0.8905 - val_accuracy: 0.5783\\n\",\n+      \"10931/10931 [==============================] - 94s 9ms/step - loss: 0.8815 - accuracy: 0.5939 - val_loss: 0.8431 - val_accuracy: 0.6062\\n\",\n       \"Epoch 4/10\\n\",\n-      \"4685/4685 [==============================] - 43s 9ms/step - loss: 0.9142 - accuracy: 0.5697 - val_loss: 0.8742 - val_accuracy: 0.5901\\n\",\n+      \"10931/10931 [==============================] - 97s 9ms/step - loss: 0.8638 - accuracy: 0.6039 - val_loss: 0.8376 - val_accuracy: 0.6105\\n\",\n       \"Epoch 5/10\\n\",\n-      \"4685/4685 [==============================] - 43s 9ms/step - loss: 0.8936 - accuracy: 0.5855 - val_loss: 0.8617 - val_accuracy: 0.5965\\n\",\n+      \"10931/10931 [==============================] - 98s 9ms/step - loss: 0.8483 - accuracy: 0.6122 - val_loss: 0.8315 - val_accuracy: 0.6169\\n\",\n       \"Epoch 6/10\\n\",\n-      \"4685/4685 [==============================] - 44s 9ms/step - loss: 0.8817 - accuracy: 0.5929 - val_loss: 0.8580 - val_accuracy: 0.6007\\n\",\n+      \"10931/10931 [==============================] - 99s 9ms/step - loss: 0.8338 - accuracy: 0.6206 - val_loss: 0.8289 - val_accuracy: 0.6170\\n\",\n       \"Epoch 7/10\\n\",\n-      \"4685/4685 [==============================] - 44s 9ms/step - loss: 0.8716 - accuracy: 0.5991 - val_loss: 0.8472 - val_accuracy: 0.6060\\n\",\n+      \"10931/10931 [==============================] - 100s 9ms/step - loss: 0.8187 - accuracy: 0.6287 - val_loss: 0.8337 - val_accuracy: 0.6180\\n\",\n       \"Epoch 8/10\\n\",\n-      \"4685/4685 [==============================] - 42s 9ms/step - loss: 0.8619 - accuracy: 0.6047 - val_loss: 0.8431 - val_accuracy: 0.6103\\n\",\n+      \"10931/10931 [==============================] - 101s 9ms/step - loss: 0.8045 - accuracy: 0.6366 - val_loss: 0.8331 - val_accuracy: 0.6225\\n\",\n       \"Epoch 9/10\\n\",\n-      \"4685/4685 [==============================] - 41s 9ms/step - loss: 0.8539 - accuracy: 0.6098 - val_loss: 0.8408 - val_accuracy: 0.6113\\n\",\n+      \"10931/10931 [==============================] - 104s 10ms/step - loss: 0.7909 - accuracy: 0.6444 - val_loss: 0.8333 - val_accuracy: 0.6253\\n\",\n       \"Epoch 10/10\\n\",\n-      \"4685/4685 [==============================] - 42s 9ms/step - loss: 0.8450 - accuracy: 0.6142 - val_loss: 0.8378 - val_accuracy: 0.6135\\n\",\n+      \"10931/10931 [==============================] - 104s 10ms/step - loss: 0.7777 - accuracy: 0.6516 - val_loss: 0.8354 - val_accuracy: 0.6247\\n\",\n+      \"Epoch 00010: early stopping\\n\",\n       \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n       \"Cut data in pieces with these shapes: after header:(13992, 500), before header:(5995, 500)\\n\",\n       \"Confusion matrix:\\n\",\n       \"H V P M \\n\",\n-      \"[[4523   89  181  161]\\n\",\n-      \" [ 202 1654 1481 1763]\\n\",\n-      \" [ 309 1038 2535 1089]\\n\",\n-      \" [ 170 1020  764 3008]]\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0101: 0.7501375894331316\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0011: 0.6936508730674938\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0110: 0.7289738329914445\\n\",\n-      \"Test accuracy: 0.5863811477460349\\n\",\n+      \"[[4516   80  197  161]\\n\",\n+      \" [ 194 1694 1644 1568]\\n\",\n+      \" [ 260  914 2837  960]\\n\",\n+      \" [ 156  964  990 2852]]\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0101: 0.7448841747135638\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0011: 0.7066092960424276\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0110: 0.7391804673037474\\n\",\n+      \"Test accuracy: 0.5953369690298694\\n\",\n       \"\\n\",\n       \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n       \"Cut data in pieces with these shapes: after header:(13992, 500), before header:(5996, 500)\\n\",\n       \"Confusion matrix:\\n\",\n       \"H V P M \\n\",\n-      \"[[4409   98  258  189]\\n\",\n-      \" [ 147 1697 1528 1729]\\n\",\n-      \" [ 281  998 2679 1013]\\n\",\n-      \" [ 154  991  825 2992]]\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0101: 0.7522513508104863\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0011: 0.6934160496297779\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0110: 0.7327396437862718\\n\",\n-      \"Test accuracy: 0.589203522113268\\n\",\n+      \"[[4372  101  310  171]\\n\",\n+      \" [ 147 1620 1853 1481]\\n\",\n+      \" [ 254  912 3011  794]\\n\",\n+      \" [ 153 1015 1104 2690]]\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0101: 0.7380928557134281\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0011: 0.6923654192515509\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0110: 0.7395437262357415\\n\",\n+      \"Test accuracy: 0.5850010006003602\\n\",\n       \"\\n\",\n       \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n       \"Cut data in pieces with these shapes: after header:(13992, 500), before header:(5995, 500)\\n\",\n       \"Confusion matrix:\\n\",\n       \"H V P M \\n\",\n-      \"[[4488  101  195  170]\\n\",\n-      \" [ 173 1690 1490 1747]\\n\",\n-      \" [ 271 1011 2689 1000]\\n\",\n-      \" [ 171  953  758 3080]]\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0101: 0.7561414919697803\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0011: 0.699404612998449\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0110: 0.7399309551208285\\n\",\n-      \"Test accuracy: 0.5977385300445289\\n\",\n+      \"[[4483   98  230  143]\\n\",\n+      \" [ 172 1603 1837 1488]\\n\",\n+      \" [ 249  881 3002  839]\\n\",\n+      \" [ 154  966 1033 2809]]\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0101: 0.7419822884875169\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0011: 0.7024065642667734\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0110: 0.7460849552208936\\n\",\n+      \"Test accuracy: 0.5952369039875919\\n\",\n       \"\\n\",\n       \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n       \"Cut data in pieces with these shapes: after header:(13992, 500), before header:(5995, 500)\\n\",\n       \"Confusion matrix:\\n\",\n       \"H V P M \\n\",\n-      \"[[4502   87  209  156]\\n\",\n-      \" [ 183 1709 1435 1773]\\n\",\n-      \" [ 272 1046 2543 1110]\\n\",\n-      \" [ 173 1047  743 2999]]\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0101: 0.7531895732225947\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0011: 0.6942512633211587\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0110: 0.7286236053434733\\n\",\n-      \"Test accuracy: 0.5880322209436134\\n\",\n+      \"[[4486   95  221  152]\\n\",\n+      \" [ 162 1648 1648 1642]\\n\",\n+      \" [ 268  950 2774  979]\\n\",\n+      \" [ 147 1021  935 2859]]\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0101: 0.7464351828688648\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0011: 0.6973532796317606\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0110: 0.733676889978486\\n\",\n+      \"Test accuracy: 0.5887326762395557\\n\",\n       \"\\n\",\n       \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n       \"Cut data in pieces with these shapes: after header:(13992, 500), before header:(5995, 500)\\n\",\n       \"Confusion matrix:\\n\",\n       \"H V P M \\n\",\n-      \"[[4520   94  180  160]\\n\",\n-      \" [ 215 1707 1428 1750]\\n\",\n-      \" [ 323 1011 2569 1068]\\n\",\n-      \" [ 164  935  783 3080]]\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0101: 0.753689898433982\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0011: 0.7022564667033572\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0110: 0.7324260769500175\\n\",\n-      \"Test accuracy: 0.5941862210436784\\n\",\n+      \"[[4531   90  181  152]\\n\",\n+      \" [ 193 1671 1661 1575]\\n\",\n+      \" [ 285  939 2836  911]\\n\",\n+      \" [ 170  904  955 2933]]\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0101: 0.7462850853054486\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0011: 0.7064591984790114\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0110: 0.7451343373192575\\n\",\n+      \"Test accuracy: 0.5989393105518587\\n\",\n       \"\\n\",\n       \"\\n\",\n       \"\\n\",\n-      \"created a json file of the test accuracies at ./test_accuracy_20220704-1426.json\\n\",\n+      \"created a json file of the test accuracies at /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/result_vary_raining_data_20220704-2100.json\\n\",\n       \"------------- dataset 0: FPGA2.5cm with max_train_files=12 ----------------------------------\\n\",\n       \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n       \"Cut data in pieces with these shapes: after header:(13992, 500), before header:(5995, 500)\\n\",\n       \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n-      \"Cut data in pieces with these shapes: after header:(41976, 500), before header:(17986, 500)\\n\",\n+      \"Cut data in pieces with these shapes: after header:(97944, 500), before header:(41968, 500)\\n\",\n       \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n-      \"Cut data in pieces with these shapes: after header:(41976, 500), before header:(17986, 500)\\n\",\n+      \"Cut data in pieces with these shapes: after header:(97944, 500), before header:(41968, 500)\\n\",\n       \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n-      \"Cut data in pieces with these shapes: after header:(41976, 500), before header:(17986, 500)\\n\",\n+      \"Cut data in pieces with these shapes: after header:(97944, 500), before header:(41968, 500)\\n\",\n       \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n-      \"Cut data in pieces with these shapes: after header:(41976, 500), before header:(17986, 500)\\n\",\n+      \"Cut data in pieces with these shapes: after header:(97944, 500), before header:(41968, 500)\\n\",\n       \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n-      \"Cut data in pieces with these shapes: after header:(41976, 500), before header:(17986, 500)\\n\",\n+      \"Cut data in pieces with these shapes: after header:(97944, 500), before header:(41968, 500)\\n\",\n       \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n-      \"Cut data in pieces with these shapes: after header:(41976, 500), before header:(17986, 500)\\n\",\n+      \"Cut data in pieces with these shapes: after header:(97944, 500), before header:(41968, 500)\\n\",\n       \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n-      \"Cut data in pieces with these shapes: after header:(41976, 500), before header:(17986, 500)\\n\",\n+      \"Cut data in pieces with these shapes: after header:(97944, 500), before header:(41968, 500)\\n\",\n       \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n-      \"Cut data in pieces with these shapes: after header:(41976, 500), before header:(17986, 500)\\n\",\n+      \"Cut data in pieces with these shapes: after header:(97944, 500), before header:(41968, 500)\\n\",\n       \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n-      \"Cut data in pieces with these shapes: after header:(41976, 500), before header:(17986, 500)\\n\",\n+      \"Cut data in pieces with these shapes: after header:(97944, 500), before header:(41968, 500)\\n\",\n       \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n-      \"Cut data in pieces with these shapes: after header:(41976, 500), before header:(17987, 500)\\n\",\n+      \"Cut data in pieces with these shapes: after header:(97943, 500), before header:(41969, 500)\\n\",\n       \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n-      \"Cut data in pieces with these shapes: after header:(41976, 500), before header:(17987, 500)\\n\",\n+      \"Cut data in pieces with these shapes: after header:(97943, 500), before header:(41969, 500)\\n\",\n       \"Model: \\\"sequential_10\\\"\\n\",\n       \"_________________________________________________________________\\n\",\n       \"Layer (type)                 Output Shape              Param #   \\n\",\n@@ -1725,120 +1723,120 @@\n       \"Non-trainable params: 462\\n\",\n       \"_________________________________________________________________\\n\",\n       \"Epoch 1/10\\n\",\n-      \"5153/5153 [==============================] - 47s 9ms/step - loss: 1.0346 - accuracy: 0.5090 - val_loss: 0.9205 - val_accuracy: 0.5656\\n\",\n+      \"12024/12024 [==============================] - 118s 10ms/step - loss: 0.9917 - accuracy: 0.5286 - val_loss: 0.8828 - val_accuracy: 0.5841\\n\",\n       \"Epoch 2/10\\n\",\n-      \"5153/5153 [==============================] - 45s 9ms/step - loss: 0.9432 - accuracy: 0.5607 - val_loss: 0.8846 - val_accuracy: 0.5845\\n\",\n+      \"12024/12024 [==============================] - 114s 10ms/step - loss: 0.9076 - accuracy: 0.5796 - val_loss: 0.8563 - val_accuracy: 0.6032\\n\",\n       \"Epoch 3/10\\n\",\n-      \"5153/5153 [==============================] - 45s 9ms/step - loss: 0.9172 - accuracy: 0.5748 - val_loss: 0.8712 - val_accuracy: 0.5974\\n\",\n+      \"12024/12024 [==============================] - 114s 9ms/step - loss: 0.8802 - accuracy: 0.5952 - val_loss: 0.8385 - val_accuracy: 0.6139\\n\",\n       \"Epoch 4/10\\n\",\n-      \"5153/5153 [==============================] - 45s 9ms/step - loss: 0.9032 - accuracy: 0.5826 - val_loss: 0.8648 - val_accuracy: 0.5978\\n\",\n+      \"12024/12024 [==============================] - 115s 10ms/step - loss: 0.8629 - accuracy: 0.6049 - val_loss: 0.8298 - val_accuracy: 0.6164\\n\",\n       \"Epoch 5/10\\n\",\n-      \"5153/5153 [==============================] - 46s 9ms/step - loss: 0.8917 - accuracy: 0.5895 - val_loss: 0.8529 - val_accuracy: 0.6076\\n\",\n+      \"12024/12024 [==============================] - 114s 10ms/step - loss: 0.8486 - accuracy: 0.6133 - val_loss: 0.8256 - val_accuracy: 0.6235\\n\",\n       \"Epoch 6/10\\n\",\n-      \"5153/5153 [==============================] - 47s 9ms/step - loss: 0.8797 - accuracy: 0.5974 - val_loss: 0.8504 - val_accuracy: 0.6073\\n\",\n+      \"12024/12024 [==============================] - 114s 9ms/step - loss: 0.8358 - accuracy: 0.6197 - val_loss: 0.8245 - val_accuracy: 0.6222\\n\",\n       \"Epoch 7/10\\n\",\n-      \"5153/5153 [==============================] - 47s 9ms/step - loss: 0.8690 - accuracy: 0.6039 - val_loss: 0.8428 - val_accuracy: 0.6140\\n\",\n+      \"12024/12024 [==============================] - 115s 10ms/step - loss: 0.8231 - accuracy: 0.6265 - val_loss: 0.8215 - val_accuracy: 0.6258\\n\",\n       \"Epoch 8/10\\n\",\n-      \"5153/5153 [==============================] - 47s 9ms/step - loss: 0.8586 - accuracy: 0.6089 - val_loss: 0.8381 - val_accuracy: 0.6162\\n\",\n+      \"12024/12024 [==============================] - 115s 10ms/step - loss: 0.8108 - accuracy: 0.6335 - val_loss: 0.8194 - val_accuracy: 0.6286\\n\",\n       \"Epoch 9/10\\n\",\n-      \"5153/5153 [==============================] - 47s 9ms/step - loss: 0.8501 - accuracy: 0.6138 - val_loss: 0.8353 - val_accuracy: 0.6185\\n\",\n+      \"12024/12024 [==============================] - 114s 9ms/step - loss: 0.7985 - accuracy: 0.6404 - val_loss: 0.8240 - val_accuracy: 0.6290\\n\",\n       \"Epoch 10/10\\n\",\n-      \"5153/5153 [==============================] - 47s 9ms/step - loss: 0.8414 - accuracy: 0.6182 - val_loss: 0.8311 - val_accuracy: 0.6206\\n\",\n+      \"12024/12024 [==============================] - 113s 9ms/step - loss: 0.7869 - accuracy: 0.6470 - val_loss: 0.8217 - val_accuracy: 0.6298\\n\",\n       \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n       \"Cut data in pieces with these shapes: after header:(13992, 500), before header:(5995, 500)\\n\",\n       \"Confusion matrix:\\n\",\n       \"H V P M \\n\",\n-      \"[[4578   62  175  139]\\n\",\n-      \" [ 254 1824 1409 1613]\\n\",\n-      \" [ 350 1037 2638  946]\\n\",\n-      \" [ 205 1032  853 2872]]\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0101: 0.7545904838144795\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0011: 0.7018061740131085\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0110: 0.7355781257817582\\n\",\n-      \"Test accuracy: 0.5959873918046731\\n\",\n+      \"[[4579   81  183  111]\\n\",\n+      \" [ 203 1915 1571 1411]\\n\",\n+      \" [ 272 1115 2726  858]\\n\",\n+      \" [ 174 1170  919 2699]]\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0101: 0.7482363536298594\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0011: 0.6994546455195877\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0110: 0.7449842397558413\\n\",\n+      \"Test accuracy: 0.5963376194526442\\n\",\n       \"\\n\",\n       \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n       \"Cut data in pieces with these shapes: after header:(13992, 500), before header:(5996, 500)\\n\",\n       \"Confusion matrix:\\n\",\n       \"H V P M \\n\",\n-      \"[[4507   85  223  139]\\n\",\n-      \" [ 184 1767 1618 1532]\\n\",\n-      \" [ 303  988 2858  822]\\n\",\n-      \" [ 203 1068  954 2737]]\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0101: 0.7502001200720432\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0011: 0.6961176706023614\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0110: 0.7412947768661197\\n\",\n-      \"Test accuracy: 0.5938062837702621\\n\",\n+      \"[[4479  112  254  109]\\n\",\n+      \" [ 172 1921 1616 1392]\\n\",\n+      \" [ 272 1074 2813  812]\\n\",\n+      \" [ 173 1204  944 2641]]\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0101: 0.7492495497298379\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0011: 0.6951170702421453\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0110: 0.741745047028217\\n\",\n+      \"Test accuracy: 0.5930558335001\\n\",\n       \"\\n\",\n       \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n       \"Cut data in pieces with these shapes: after header:(13992, 500), before header:(5995, 500)\\n\",\n       \"Confusion matrix:\\n\",\n       \"H V P M \\n\",\n-      \"[[4567   63  188  136]\\n\",\n-      \" [ 207 1791 1561 1541]\\n\",\n-      \" [ 300 1031 2784  856]\\n\",\n-      \" [ 209 1052  870 2831]]\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0101: 0.7531895732225947\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0011: 0.6989042877870616\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0110: 0.7459848901786161\\n\",\n-      \"Test accuracy: 0.5990393755941362\\n\",\n+      \"[[4563   85  210   96]\\n\",\n+      \" [ 185 1864 1658 1393]\\n\",\n+      \" [ 273 1086 2844  768]\\n\",\n+      \" [ 191 1153  917 2701]]\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0101: 0.7505378496022415\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0011: 0.6968029218992345\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0110: 0.7506379146445189\\n\",\n+      \"Test accuracy: 0.5989893430729974\\n\",\n       \"\\n\",\n       \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n       \"Cut data in pieces with these shapes: after header:(13992, 500), before header:(5995, 500)\\n\",\n       \"Confusion matrix:\\n\",\n       \"H V P M \\n\",\n-      \"[[4592   63  181  118]\\n\",\n-      \" [ 215 1837 1388 1660]\\n\",\n-      \" [ 304 1023 2624 1020]\\n\",\n-      \" [ 187 1056  823 2896]]\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0101: 0.7579926952519137\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0011: 0.7039575724220744\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0110: 0.7337269224996248\\n\",\n-      \"Test accuracy: 0.5978385950868065\\n\",\n+      \"[[4529   97  220  108]\\n\",\n+      \" [ 181 1952 1514 1453]\\n\",\n+      \" [ 262 1136 2694  879]\\n\",\n+      \" [ 174 1186  877 2725]]\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0101: 0.7515385000250162\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0011: 0.6971531495472056\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0110: 0.7420823535297943\\n\",\n+      \"Test accuracy: 0.5953870015510082\\n\",\n       \"\\n\",\n       \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n       \"Cut data in pieces with these shapes: after header:(13992, 500), before header:(5995, 500)\\n\",\n       \"Confusion matrix:\\n\",\n       \"H V P M \\n\",\n-      \"[[4568   64  193  129]\\n\",\n-      \" [ 274 1769 1449 1608]\\n\",\n-      \" [ 363 1052 2621  935]\\n\",\n-      \" [ 228 1009  782 2943]]\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0101: 0.7541902236453695\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0011: 0.698253865012258\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0110: 0.7384299794866663\\n\",\n-      \"Test accuracy: 0.5954370340721469\\n\",\n+      \"[[4568   79  196  111]\\n\",\n+      \" [ 227 1888 1566 1419]\\n\",\n+      \" [ 317 1109 2698  847]\\n\",\n+      \" [ 199 1136  869 2758]]\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0101: 0.7494871666583279\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0011: 0.6971531495472056\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0110: 0.7453344674038125\\n\",\n+      \"Test accuracy: 0.5959873918046731\\n\",\n       \"\\n\",\n       \"\\n\",\n       \"\\n\",\n-      \"created a json file of the test accuracies at ./test_accuracy_20220704-1426.json\\n\",\n+      \"created a json file of the test accuracies at /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/result_vary_raining_data_20220704-2100.json\\n\",\n       \"------------- dataset 0: FPGA2.5cm with max_train_files=13 ----------------------------------\\n\",\n       \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n       \"Cut data in pieces with these shapes: after header:(13992, 500), before header:(5995, 500)\\n\",\n       \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n-      \"Cut data in pieces with these shapes: after header:(41976, 500), before header:(17986, 500)\\n\",\n+      \"Cut data in pieces with these shapes: after header:(97944, 500), before header:(41968, 500)\\n\",\n       \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n-      \"Cut data in pieces with these shapes: after header:(41976, 500), before header:(17986, 500)\\n\",\n+      \"Cut data in pieces with these shapes: after header:(97944, 500), before header:(41968, 500)\\n\",\n       \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n-      \"Cut data in pieces with these shapes: after header:(41976, 500), before header:(17986, 500)\\n\",\n+      \"Cut data in pieces with these shapes: after header:(97944, 500), before header:(41968, 500)\\n\",\n       \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n-      \"Cut data in pieces with these shapes: after header:(41976, 500), before header:(17986, 500)\\n\",\n+      \"Cut data in pieces with these shapes: after header:(97944, 500), before header:(41968, 500)\\n\",\n       \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n-      \"Cut data in pieces with these shapes: after header:(41976, 500), before header:(17986, 500)\\n\",\n+      \"Cut data in pieces with these shapes: after header:(97944, 500), before header:(41968, 500)\\n\",\n       \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n-      \"Cut data in pieces with these shapes: after header:(41976, 500), before header:(17986, 500)\\n\",\n+      \"Cut data in pieces with these shapes: after header:(97944, 500), before header:(41968, 500)\\n\",\n       \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n-      \"Cut data in pieces with these shapes: after header:(41976, 500), before header:(17986, 500)\\n\",\n+      \"Cut data in pieces with these shapes: after header:(97944, 500), before header:(41968, 500)\\n\",\n       \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n-      \"Cut data in pieces with these shapes: after header:(41976, 500), before header:(17986, 500)\\n\",\n+      \"Cut data in pieces with these shapes: after header:(97944, 500), before header:(41968, 500)\\n\",\n       \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n-      \"Cut data in pieces with these shapes: after header:(41976, 500), before header:(17986, 500)\\n\",\n+      \"Cut data in pieces with these shapes: after header:(97944, 500), before header:(41968, 500)\\n\",\n       \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n-      \"Cut data in pieces with these shapes: after header:(41976, 500), before header:(17987, 500)\\n\",\n+      \"Cut data in pieces with these shapes: after header:(97943, 500), before header:(41969, 500)\\n\",\n       \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n-      \"Cut data in pieces with these shapes: after header:(41976, 500), before header:(17987, 500)\\n\",\n+      \"Cut data in pieces with these shapes: after header:(97943, 500), before header:(41969, 500)\\n\",\n       \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n-      \"Cut data in pieces with these shapes: after header:(41976, 500), before header:(17986, 500)\\n\",\n+      \"Cut data in pieces with these shapes: after header:(97944, 500), before header:(41968, 500)\\n\",\n       \"Model: \\\"sequential_11\\\"\\n\",\n       \"_________________________________________________________________\\n\",\n       \"Layer (type)                 Output Shape              Param #   \\n\",\n@@ -1882,335 +1880,15 @@\n       \"Non-trainable params: 462\\n\",\n       \"_________________________________________________________________\\n\",\n       \"Epoch 1/10\\n\",\n-      \"5622/5622 [==============================] - 56s 10ms/step - loss: 1.0354 - accuracy: 0.5051 - val_loss: 0.9284 - val_accuracy: 0.5547\\n\",\n-      \"Epoch 2/10\\n\",\n-      \"5622/5622 [==============================] - 54s 10ms/step - loss: 0.9532 - accuracy: 0.5489 - val_loss: 0.9008 - val_accuracy: 0.5691\\n\",\n-      \"Epoch 3/10\\n\",\n-      \"5622/5622 [==============================] - 53s 10ms/step - loss: 0.9353 - accuracy: 0.5581 - val_loss: 0.8803 - val_accuracy: 0.5840\\n\",\n-      \"Epoch 4/10\\n\",\n-      \"5622/5622 [==============================] - 53s 9ms/step - loss: 0.9146 - accuracy: 0.5705 - val_loss: 0.8696 - val_accuracy: 0.5897\\n\",\n-      \"Epoch 5/10\\n\",\n-      \"5622/5622 [==============================] - 54s 10ms/step - loss: 0.8934 - accuracy: 0.5867 - val_loss: 0.8518 - val_accuracy: 0.6020\\n\",\n-      \"Epoch 6/10\\n\",\n-      \"5622/5622 [==============================] - 54s 10ms/step - loss: 0.8773 - accuracy: 0.5968 - val_loss: 0.8444 - val_accuracy: 0.6090\\n\",\n-      \"Epoch 7/10\\n\",\n-      \"5622/5622 [==============================] - 54s 10ms/step - loss: 0.8671 - accuracy: 0.6032 - val_loss: 0.8384 - val_accuracy: 0.6109\\n\",\n-      \"Epoch 8/10\\n\",\n-      \"5622/5622 [==============================] - 54s 10ms/step - loss: 0.8576 - accuracy: 0.6080 - val_loss: 0.8315 - val_accuracy: 0.6146\\n\",\n-      \"Epoch 9/10\\n\",\n-      \"5622/5622 [==============================] - 54s 10ms/step - loss: 0.8491 - accuracy: 0.6126 - val_loss: 0.8323 - val_accuracy: 0.6182\\n\",\n-      \"Epoch 10/10\\n\",\n-      \"5622/5622 [==============================] - 54s 10ms/step - loss: 0.8400 - accuracy: 0.6183 - val_loss: 0.8272 - val_accuracy: 0.6220\\n\",\n-      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n-      \"Cut data in pieces with these shapes: after header:(13992, 500), before header:(5995, 500)\\n\",\n-      \"Confusion matrix:\\n\",\n-      \"H V P M \\n\",\n-      \"[[4606   87  157  104]\\n\",\n-      \" [ 253 2222 1212 1413]\\n\",\n-      \" [ 338 1398 2350  885]\\n\",\n-      \" [ 210 1395  671 2686]]\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0101: 0.7588432481112724\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0011: 0.6884474908690649\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0110: 0.7398809225996898\\n\",\n-      \"Test accuracy: 0.5935858307900135\\n\",\n-      \"\\n\",\n-      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n-      \"Cut data in pieces with these shapes: after header:(13992, 500), before header:(5996, 500)\\n\",\n-      \"Confusion matrix:\\n\",\n-      \"H V P M \\n\",\n-      \"[[4512   92  231  119]\\n\",\n-      \" [ 197 2186 1383 1335]\\n\",\n-      \" [ 316 1276 2588  791]\\n\",\n-      \" [ 204 1469  765 2524]]\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0101: 0.758505103061837\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0011: 0.6831598959375625\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0110: 0.7400440264158495\\n\",\n-      \"Test accuracy: 0.5908545127076246\\n\",\n-      \"\\n\",\n-      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n-      \"Cut data in pieces with these shapes: after header:(13992, 500), before header:(5995, 500)\\n\",\n-      \"Confusion matrix:\\n\",\n-      \"H V P M \\n\",\n-      \"[[4573   92  180  109]\\n\",\n-      \" [ 209 2145 1355 1391]\\n\",\n-      \" [ 316 1302 2513  840]\\n\",\n-      \" [ 216 1321  750 2675]]\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0101: 0.7561915244909191\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0011: 0.6902986941511983\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0110: 0.7448841747135638\\n\",\n-      \"Test accuracy: 0.5956871966778406\\n\",\n-      \"\\n\",\n-      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n-      \"Cut data in pieces with these shapes: after header:(13992, 500), before header:(5995, 500)\\n\",\n-      \"Confusion matrix:\\n\",\n-      \"H V P M \\n\",\n-      \"[[4586   97  174   97]\\n\",\n-      \" [ 195 2231 1217 1457]\\n\",\n-      \" [ 316 1397 2297  961]\\n\",\n-      \" [ 197 1381  678 2706]]\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0101: 0.7578926302096363\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0011: 0.6879971981788162\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0110: 0.7368789713313654\\n\",\n-      \"Test accuracy: 0.591384399859909\\n\",\n-      \"\\n\",\n-      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n-      \"Cut data in pieces with these shapes: after header:(13992, 500), before header:(5995, 500)\\n\",\n-      \"Confusion matrix:\\n\",\n-      \"H V P M \\n\",\n-      \"[[4587   79  176  112]\\n\",\n-      \" [ 241 2134 1255 1470]\\n\",\n-      \" [ 360 1306 2385  920]\\n\",\n-      \" [ 217 1347  661 2737]]\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0101: 0.7602941912242958\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0011: 0.687646970530845\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0110: 0.737129133937059\\n\",\n-      \"Test accuracy: 0.5925351478461\\n\",\n-      \"\\n\",\n-      \"\\n\",\n-      \"\\n\",\n-      \"created a json file of the test accuracies at ./test_accuracy_20220704-1426.json\\n\",\n-      \"------------- dataset 0: FPGA2.5cm with max_train_files=14 ----------------------------------\\n\",\n-      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n-      \"Cut data in pieces with these shapes: after header:(13992, 500), before header:(5995, 500)\\n\",\n-      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n-      \"Cut data in pieces with these shapes: after header:(41976, 500), before header:(17986, 500)\\n\",\n-      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n-      \"Cut data in pieces with these shapes: after header:(41976, 500), before header:(17986, 500)\\n\",\n-      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n-      \"Cut data in pieces with these shapes: after header:(41976, 500), before header:(17986, 500)\\n\",\n-      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n-      \"Cut data in pieces with these shapes: after header:(41976, 500), before header:(17986, 500)\\n\",\n-      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n-      \"Cut data in pieces with these shapes: after header:(41976, 500), before header:(17986, 500)\\n\",\n-      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n-      \"Cut data in pieces with these shapes: after header:(41976, 500), before header:(17986, 500)\\n\",\n-      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n-      \"Cut data in pieces with these shapes: after header:(41976, 500), before header:(17986, 500)\\n\",\n-      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n-      \"Cut data in pieces with these shapes: after header:(41976, 500), before header:(17986, 500)\\n\",\n-      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n-      \"Cut data in pieces with these shapes: after header:(41976, 500), before header:(17986, 500)\\n\",\n-      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n-      \"Cut data in pieces with these shapes: after header:(41976, 500), before header:(17987, 500)\\n\",\n-      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n-      \"Cut data in pieces with these shapes: after header:(41976, 500), before header:(17987, 500)\\n\",\n-      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n-      \"Cut data in pieces with these shapes: after header:(41976, 500), before header:(17986, 500)\\n\",\n-      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n-      \"Cut data in pieces with these shapes: after header:(41976, 500), before header:(17986, 500)\\n\",\n-      \"Model: \\\"sequential_12\\\"\\n\",\n-      \"_________________________________________________________________\\n\",\n-      \"Layer (type)                 Output Shape              Param #   \\n\",\n-      \"=================================================================\\n\",\n-      \"reshape_12 (Reshape)         (None, 500, 1)            0         \\n\",\n-      \"_________________________________________________________________\\n\",\n-      \"gaussian_noise_12 (GaussianN (None, 500, 1)            0         \\n\",\n-      \"_________________________________________________________________\\n\",\n-      \"conv1d_36 (Conv1D)           (None, 500, 13)           52        \\n\",\n-      \"_________________________________________________________________\\n\",\n-      \"max_pooling1d_36 (MaxPooling (None, 250, 13)           0         \\n\",\n-      \"_________________________________________________________________\\n\",\n-      \"spatial_dropout1d_36 (Spatia (None, 250, 13)           0         \\n\",\n-      \"_________________________________________________________________\\n\",\n-      \"batch_normalization_36 (Batc (None, 250, 13)           52        \\n\",\n-      \"_________________________________________________________________\\n\",\n-      \"conv1d_37 (Conv1D)           (None, 250, 118)          23128     \\n\",\n-      \"_________________________________________________________________\\n\",\n-      \"max_pooling1d_37 (MaxPooling (None, 250, 118)          0         \\n\",\n-      \"_________________________________________________________________\\n\",\n-      \"spatial_dropout1d_37 (Spatia (None, 250, 118)          0         \\n\",\n-      \"_________________________________________________________________\\n\",\n-      \"batch_normalization_37 (Batc (None, 250, 118)          472       \\n\",\n-      \"_________________________________________________________________\\n\",\n-      \"conv1d_38 (Conv1D)           (None, 250, 100)          59100     \\n\",\n-      \"_________________________________________________________________\\n\",\n-      \"max_pooling1d_38 (MaxPooling (None, 62, 100)           0         \\n\",\n-      \"_________________________________________________________________\\n\",\n-      \"batch_normalization_38 (Batc (None, 62, 100)           400       \\n\",\n-      \"_________________________________________________________________\\n\",\n-      \"spatial_dropout1d_38 (Spatia (None, 62, 100)           0         \\n\",\n-      \"_________________________________________________________________\\n\",\n-      \"flatten_12 (Flatten)         (None, 6200)              0         \\n\",\n-      \"_________________________________________________________________\\n\",\n-      \"dense_24 (Dense)             (None, 224)               1389024   \\n\",\n-      \"_________________________________________________________________\\n\",\n-      \"dense_25 (Dense)             (None, 4)                 900       \\n\",\n-      \"=================================================================\\n\",\n-      \"Total params: 1,473,128\\n\",\n-      \"Trainable params: 1,472,666\\n\",\n-      \"Non-trainable params: 462\\n\",\n-      \"_________________________________________________________________\\n\",\n-      \"Epoch 1/10\\n\",\n-      \"6090/6090 [==============================] - 61s 10ms/step - loss: 1.0404 - accuracy: 0.4968 - val_loss: 0.9316 - val_accuracy: 0.5485\\n\",\n-      \"Epoch 2/10\\n\",\n-      \"6090/6090 [==============================] - 59s 10ms/step - loss: 0.9546 - accuracy: 0.5470 - val_loss: 0.8895 - val_accuracy: 0.5792\\n\",\n-      \"Epoch 3/10\\n\",\n-      \"6090/6090 [==============================] - 59s 10ms/step - loss: 0.9248 - accuracy: 0.5699 - val_loss: 0.8723 - val_accuracy: 0.5905\\n\",\n-      \"Epoch 4/10\\n\",\n-      \"6090/6090 [==============================] - 59s 10ms/step - loss: 0.9057 - accuracy: 0.5815 - val_loss: 0.8585 - val_accuracy: 0.6014\\n\",\n-      \"Epoch 5/10\\n\",\n-      \"6090/6090 [==============================] - 58s 10ms/step - loss: 0.8894 - accuracy: 0.5898 - val_loss: 0.8497 - val_accuracy: 0.6062\\n\",\n-      \"Epoch 6/10\\n\",\n-      \"6090/6090 [==============================] - 58s 10ms/step - loss: 0.8773 - accuracy: 0.5973 - val_loss: 0.8419 - val_accuracy: 0.6096\\n\",\n-      \"Epoch 7/10\\n\",\n-      \"6090/6090 [==============================] - 58s 10ms/step - loss: 0.8673 - accuracy: 0.6038 - val_loss: 0.8357 - val_accuracy: 0.6120\\n\",\n-      \"Epoch 8/10\\n\",\n-      \"6090/6090 [==============================] - 59s 10ms/step - loss: 0.8584 - accuracy: 0.6087 - val_loss: 0.8312 - val_accuracy: 0.6142\\n\",\n-      \"Epoch 9/10\\n\",\n-      \"6090/6090 [==============================] - 59s 10ms/step - loss: 0.8506 - accuracy: 0.6127 - val_loss: 0.8272 - val_accuracy: 0.6220\\n\",\n-      \"Epoch 10/10\\n\",\n-      \"6090/6090 [==============================] - 58s 10ms/step - loss: 0.8420 - accuracy: 0.6169 - val_loss: 0.8247 - val_accuracy: 0.6193\\n\",\n-      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n-      \"Cut data in pieces with these shapes: after header:(13992, 500), before header:(5995, 500)\\n\",\n-      \"Confusion matrix:\\n\",\n-      \"H V P M \\n\",\n-      \"[[4547   72  181  154]\\n\",\n-      \" [ 206 1918 1306 1670]\\n\",\n-      \" [ 294 1223 2382 1072]\\n\",\n-      \" [ 174 1083  718 2987]]\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0101: 0.7535898333917046\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0011: 0.695552108870766\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0110: 0.735027768049232\\n\",\n-      \"Test accuracy: 0.5920848551558513\\n\",\n-      \"\\n\",\n-      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n-      \"Cut data in pieces with these shapes: after header:(13992, 500), before header:(5996, 500)\\n\",\n-      \"Confusion matrix:\\n\",\n-      \"H V P M \\n\",\n-      \"[[4425   78  255  196]\\n\",\n-      \" [ 144 1919 1412 1626]\\n\",\n-      \" [ 267 1183 2520 1001]\\n\",\n-      \" [ 162 1185  763 2852]]\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0101: 0.7529017410446268\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0011: 0.6855113067840705\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0110: 0.7338903342005203\\n\",\n-      \"Test accuracy: 0.5861516910146087\\n\",\n-      \"\\n\",\n-      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n-      \"Cut data in pieces with these shapes: after header:(13992, 500), before header:(5995, 500)\\n\",\n-      \"Confusion matrix:\\n\",\n-      \"H V P M \\n\",\n-      \"[[4518   71  208  157]\\n\",\n-      \" [ 169 1925 1352 1654]\\n\",\n-      \" [ 280 1156 2559  976]\\n\",\n-      \" [ 167 1086  683 3026]]\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0101: 0.7632961424926202\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0011: 0.6968029218992345\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0110: 0.7434832641216791\\n\",\n-      \"Test accuracy: 0.6017911642567669\\n\",\n-      \"\\n\",\n-      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n-      \"Cut data in pieces with these shapes: after header:(13992, 500), before header:(5995, 500)\\n\",\n-      \"Confusion matrix:\\n\",\n-      \"H V P M \\n\",\n-      \"[[4550   61  196  147]\\n\",\n-      \" [ 178 2002 1246 1674]\\n\",\n-      \" [ 274 1156 2459 1082]\\n\",\n-      \" [ 169 1135  671 2987]]\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0101: 0.7643468254365338\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0011: 0.6999549707309751\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0110: 0.7362785810777005\\n\",\n-      \"Test accuracy: 0.6002901886226047\\n\",\n-      \"\\n\",\n-      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n-      \"Cut data in pieces with these shapes: after header:(13992, 500), before header:(5995, 500)\\n\",\n-      \"Confusion matrix:\\n\",\n-      \"H V P M \\n\",\n-      \"[[4565   68  177  144]\\n\",\n-      \" [ 214 1959 1259 1668]\\n\",\n-      \" [ 326 1158 2423 1064]\\n\",\n-      \" [ 178 1080  648 3056]]\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0101: 0.7631960774503427\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0011: 0.7003051983789463\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0110: 0.7375794266273078\\n\",\n-      \"Test accuracy: 0.6005403512282984\\n\",\n-      \"\\n\",\n-      \"\\n\",\n-      \"\\n\",\n-      \"created a json file of the test accuracies at ./test_accuracy_20220704-1426.json\\n\",\n-      \"------------- dataset 0: FPGA2.5cm with max_train_files=15 ----------------------------------\\n\",\n-      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n-      \"Cut data in pieces with these shapes: after header:(13992, 500), before header:(5995, 500)\\n\",\n-      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n-      \"Cut data in pieces with these shapes: after header:(41976, 500), before header:(17986, 500)\\n\",\n-      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n-      \"Cut data in pieces with these shapes: after header:(41976, 500), before header:(17986, 500)\\n\",\n-      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n-      \"Cut data in pieces with these shapes: after header:(41976, 500), before header:(17986, 500)\\n\",\n-      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n-      \"Cut data in pieces with these shapes: after header:(41976, 500), before header:(17986, 500)\\n\",\n-      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n-      \"Cut data in pieces with these shapes: after header:(41976, 500), before header:(17986, 500)\\n\",\n-      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n-      \"Cut data in pieces with these shapes: after header:(41976, 500), before header:(17986, 500)\\n\",\n-      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n-      \"Cut data in pieces with these shapes: after header:(41976, 500), before header:(17986, 500)\\n\",\n-      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n-      \"Cut data in pieces with these shapes: after header:(41976, 500), before header:(17986, 500)\\n\",\n-      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n-      \"Cut data in pieces with these shapes: after header:(41976, 500), before header:(17986, 500)\\n\",\n-      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n-      \"Cut data in pieces with these shapes: after header:(41976, 500), before header:(17987, 500)\\n\",\n-      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n-      \"Cut data in pieces with these shapes: after header:(41976, 500), before header:(17987, 500)\\n\",\n-      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n-      \"Cut data in pieces with these shapes: after header:(41976, 500), before header:(17986, 500)\\n\",\n-      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n-      \"Cut data in pieces with these shapes: after header:(41976, 500), before header:(17986, 500)\\n\",\n-      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n-      \"Cut data in pieces with these shapes: after header:(41976, 500), before header:(17986, 500)\\n\",\n-      \"Model: \\\"sequential_13\\\"\\n\",\n-      \"_________________________________________________________________\\n\",\n-      \"Layer (type)                 Output Shape              Param #   \\n\",\n-      \"=================================================================\\n\",\n-      \"reshape_13 (Reshape)         (None, 500, 1)            0         \\n\",\n-      \"_________________________________________________________________\\n\",\n-      \"gaussian_noise_13 (GaussianN (None, 500, 1)            0         \\n\",\n-      \"_________________________________________________________________\\n\",\n-      \"conv1d_39 (Conv1D)           (None, 500, 13)           52        \\n\",\n-      \"_________________________________________________________________\\n\",\n-      \"max_pooling1d_39 (MaxPooling (None, 250, 13)           0         \\n\",\n-      \"_________________________________________________________________\\n\",\n-      \"spatial_dropout1d_39 (Spatia (None, 250, 13)           0         \\n\",\n-      \"_________________________________________________________________\\n\",\n-      \"batch_normalization_39 (Batc (None, 250, 13)           52        \\n\",\n-      \"_________________________________________________________________\\n\",\n-      \"conv1d_40 (Conv1D)           (None, 250, 118)          23128     \\n\",\n-      \"_________________________________________________________________\\n\",\n-      \"max_pooling1d_40 (MaxPooling (None, 250, 118)          0         \\n\",\n-      \"_________________________________________________________________\\n\",\n-      \"spatial_dropout1d_40 (Spatia (None, 250, 118)          0         \\n\",\n-      \"_________________________________________________________________\\n\",\n-      \"batch_normalization_40 (Batc (None, 250, 118)          472       \\n\",\n-      \"_________________________________________________________________\\n\",\n-      \"conv1d_41 (Conv1D)           (None, 250, 100)          59100     \\n\",\n-      \"_________________________________________________________________\\n\",\n-      \"max_pooling1d_41 (MaxPooling (None, 62, 100)           0         \\n\",\n-      \"_________________________________________________________________\\n\",\n-      \"batch_normalization_41 (Batc (None, 62, 100)           400       \\n\",\n-      \"_________________________________________________________________\\n\",\n-      \"spatial_dropout1d_41 (Spatia (None, 62, 100)           0         \\n\",\n-      \"_________________________________________________________________\\n\",\n-      \"flatten_13 (Flatten)         (None, 6200)              0         \\n\",\n-      \"_________________________________________________________________\\n\",\n-      \"dense_26 (Dense)             (None, 224)               1389024   \\n\",\n-      \"_________________________________________________________________\\n\",\n-      \"dense_27 (Dense)             (None, 4)                 900       \\n\",\n-      \"=================================================================\\n\",\n-      \"Total params: 1,473,128\\n\",\n-      \"Trainable params: 1,472,666\\n\",\n-      \"Non-trainable params: 462\\n\",\n-      \"_________________________________________________________________\\n\",\n-      \"Epoch 1/10\\n\",\n-      \"6559/6559 [==============================] - 66s 10ms/step - loss: 1.0479 - accuracy: 0.4897 - val_loss: 0.9354 - val_accuracy: 0.5446\\n\",\n+      \"13117/13117 [==============================] - 123s 9ms/step - loss: 0.9745 - accuracy: 0.5413 - val_loss: 0.8800 - val_accuracy: 0.5866\\n\",\n       \"Epoch 2/10\\n\",\n-      \"6559/6559 [==============================] - 62s 9ms/step - loss: 0.9604 - accuracy: 0.5388 - val_loss: 0.8941 - val_accuracy: 0.5714\\n\",\n+      \"13117/13117 [==============================] - 114s 9ms/step - loss: 0.9086 - accuracy: 0.5796 - val_loss: 0.8573 - val_accuracy: 0.5964\\n\",\n       \"Epoch 3/10\\n\",\n-      \"6559/6559 [==============================] - 63s 10ms/step - loss: 0.9301 - accuracy: 0.5598 - val_loss: 0.8713 - val_accuracy: 0.5891\\n\",\n+      \"13117/13117 [==============================] - 116s 9ms/step - loss: 0.8850 - accuracy: 0.5920 - val_loss: 0.8411 - val_accuracy: 0.6063\\n\",\n       \"Epoch 4/10\\n\",\n-      \"6559/6559 [==============================] - 63s 10ms/step - loss: 0.9096 - accuracy: 0.5742 - val_loss: 0.8609 - val_accuracy: 0.5963\\n\",\n+      \"13117/13117 [==============================] - 113s 9ms/step - loss: 0.8652 - accuracy: 0.6022 - val_loss: 0.8302 - val_accuracy: 0.6147\\n\",\n       \"Epoch 5/10\\n\",\n-      \"3359/6559 [==============>...............] - ETA: 30s - loss: 0.8953 - accuracy: 0.5861\"\n+      \" 5869/13117 [============>.................] - ETA: 1:03 - loss: 0.8539 - accuracy: 0.6081\"\n      ]\n     }\n    ],\n@@ -2229,7 +1907,7 @@\n     \"    \\\"validation_accuracies\\\": validation_accuracy,\\n\",\n     \"    'measurement_metadata': measurement_metadata, \\n\",\n     \"    'n_classes': num_classes,\\n\",\n-    \"    'data_augmentation_halflength': data_augmentation_halflength = 1,\\n\",\n+    \"    'data_augmentation_halflength': data_augmentation_halflength,\\n\",\n     \"     }, \\n\",\n     \"     target_file_path=result_file_path, \\n\",\n     \"     override=True, )\\n\",\n\n---", "paper/Visualize_Results_Vary_Train_Data.ipynb\n=======================================================\nlhs: 100644 | a385c1dc2f547584376ec5d5a73ddef362ad00ac\nrhs: 100644 | c4b02f98a64bd322e24c8132b0fa0d816f2edab9\n---@@ -2,7 +2,7 @@\n  \"cells\": [\n   {\n    \"cell_type\": \"code\",\n-   \"execution_count\": 2,\n+   \"execution_count\": 28,\n    \"id\": \"63bbe8e3-4d50-4240-b473-a7ad8dfad902\",\n    \"metadata\": {},\n    \"outputs\": [],\n@@ -21,7 +21,7 @@\n   },\n   {\n    \"cell_type\": \"code\",\n-   \"execution_count\": 89,\n+   \"execution_count\": 29,\n    \"id\": \"6d344711-3707-40af-9763-afd5e0f7bf17\",\n    \"metadata\": {},\n    \"outputs\": [],\n@@ -70,7 +70,7 @@\n     \"\\n\",\n     \"    ax.legend()\\n\",\n     \"    ax.set_ylabel(\\\"Accuracy (%)\\\")\\n\",\n-    \"    ax.set_xlabel(\\\"Distance (cm)\\\")\\n\",\n+    \"    ax.set_xlabel(\\\"Number of measurements\\\")\\n\",\n     \"    ax.set_title(title)\\n\",\n     \"    if target_png_path:\\n\",\n     \"        plt.savefig(target_png_path)\\n\",\n@@ -86,24 +86,36 @@\n   },\n   {\n    \"cell_type\": \"code\",\n-   \"execution_count\": 90,\n+   \"execution_count\": 34,\n    \"id\": \"ca1fe49b-f77b-4422-a172-7eb144577936\",\n    \"metadata\": {},\n    \"outputs\": [],\n    \"source\": [\n     \"def load_plotinfo_from_file(json_path):\\n\",\n-    \"    with open(os.path.join(path), 'r') as file:\\n\",\n+    \"    with open(json_path, 'r') as file:\\n\",\n     \"        json_contents = json.load(file)\\n\",\n-    \"        dict_test_accuracies = json_contents[\\\"test_accuracies\\\"]\\n\",\n-    \"        dict_val_accuracies = json_contents[\\\"validation_accuracies\\\"]\\n\",\n-    \"        try:\\n\",\n-    \"            n_classes = json_contents['n_classes']\\n\",\n-    \"        except:\\n\",\n-    \"            print(f\\\"Warning. Failed to interpret n_classes from json file! Set to default.\\\")\\n\",\n-    \"            n_classes = 0\\n\",\n-    \"        guessing_level_percent = 50 if n_classes == 2 else 25\\n\",\n+    \"          \\n\",\n+    \"    return json_contents\"\n+   ]\n+  },\n+  {\n+   \"cell_type\": \"code\",\n+   \"execution_count\": 35,\n+   \"id\": \"3ad46a0a-51fb-411f-a8da-cc6efed3ea36\",\n+   \"metadata\": {},\n+   \"outputs\": [],\n+   \"source\": [\n+    \"def plotinfo_from_dict(json_contents):\\n\",\n+    \"    dict_test_accuracies = json_contents[\\\"test_accuracies\\\"]\\n\",\n+    \"    dict_val_accuracies = json_contents[\\\"validation_accuracies\\\"]\\n\",\n+    \"    try:\\n\",\n+    \"        n_classes = json_contents['n_classes']\\n\",\n+    \"    except:\\n\",\n+    \"        print(f\\\"Warning. Failed to interpret n_classes from json file! Set to default.\\\")\\n\",\n+    \"        n_classes = 0\\n\",\n+    \"    guessing_level_percent = 50 if n_classes == 2 else 25\\n\",\n     \"\\n\",\n-    \"    title = f\\\"Information in the Distance ({n_classes} classes) from {path}\\\"\\n\",\n+    \"    title = f\\\"Advantage of more training data ({n_classes} classes) from {path}\\\"\\n\",\n     \"    return dict_test_accuracies, dict_val_accuracies, guessing_level_percent, title\"\n    ]\n   },\n@@ -117,7 +129,7 @@\n   },\n   {\n    \"cell_type\": \"code\",\n-   \"execution_count\": 93,\n+   \"execution_count\": 40,\n    \"id\": \"301626aa-b0b7-46a7-861c-6144a1d446e8\",\n    \"metadata\": {},\n    \"outputs\": [\n@@ -126,30 +138,19 @@\n      \"output_type\": \"stream\",\n      \"text\": [\n       \"Warning. Failed to interpret n_classes from json file! Set to default.\\n\",\n-      \"distance=array([ 2.,  3.,  4.,  5.,  6.,  7.,  8.,  9., 10., 11., 12., 13., 14.,\\n\",\n-      \"       15.]), accuracy=array([[54.37534397, 52.61156694, 53.84499925, 54.60049032, 54.68054235],\\n\",\n-      \"       [55.57612448, 55.65339204, 56.00140091, 56.41667084, 55.56611798],\\n\",\n-      \"       [55.96637815, 55.47328397, 56.67183669, 55.94136189, 56.10146595],\\n\",\n-      \"       [56.95201881, 56.91915149, 57.65247411, 57.59243508, 57.5073798 ],\\n\",\n-      \"       [57.58242858, 57.32939764, 57.94266273, 58.14779607, 58.12277981],\\n\",\n-      \"       [58.1127733 , 58.0648389 , 58.46300095, 58.87326762, 58.81823185],\\n\",\n-      \"       [58.91329364, 58.8903342 , 59.44363836, 59.08340421, 59.31355381],\\n\",\n-      \"       [58.76819933, 59.02541525, 59.82888878, 58.70315705, 59.53870016],\\n\",\n-      \"       [59.01335868, 58.69521713, 59.35357983, 58.99334567, 59.29854405],\\n\",\n-      \"       [58.63811477, 58.92035221, 59.773853  , 58.80322209, 59.4186221 ],\\n\",\n-      \"       [59.59873918, 59.38062838, 59.90393756, 59.78385951, 59.54370341],\\n\",\n-      \"       [59.35858308, 59.08545127, 59.56871967, 59.13843999, 59.25351478],\\n\",\n-      \"       [59.20848552, 58.6151691 , 60.17911643, 60.02901886, 60.05403512],\\n\",\n-      \"       [59.56371642, 59.4506704 , 60.25916846, 59.93395707, 60.14409366]])\\n\",\n-      \"distance=array([ 2.,  3.,  4.,  5.,  6.,  7.,  8.,  9., 10., 11., 12., 13., 14.,\\n\",\n-      \"       15.]), accuracy=array([55.3309679 , 56.76689744, 57.81758428, 59.02836919, 59.3685925 ,\\n\",\n-      \"       60.0990653 , 60.63941717, 60.98464131, 61.11472249, 61.35488153,\\n\",\n-      \"       62.05533743, 62.20043302, 61.92525029, 62.46560216])\\n\"\n+      \"distance=array([2., 3., 4., 5., 6., 7.]), accuracy=array([[54.12017812, 52.60656394, 53.57482364, 54.39535698, 54.13518787],\\n\",\n+      \"       [56.77190174, 56.33380028, 57.14714564, 56.66183019, 56.79191474],\\n\",\n+      \"       [57.14714564, 56.90914549, 58.00770501, 57.58242858, 57.69750338],\\n\",\n+      \"       [58.12778306, 58.14488693, 58.55305949, 58.16780908, 57.95767249],\\n\",\n+      \"       [58.13278631, 58.21492896, 58.93330665, 58.67313754, 58.79321559],\\n\",\n+      \"       [58.48301396, 58.03982389, 59.0533847 , 58.68314404, 58.65812778]])\\n\",\n+      \"distance=array([2., 3., 4., 5., 6., 7.]), accuracy=array([55.47605753, 58.12778473, 59.21849012, 59.89392996, 60.00400186,\\n\",\n+      \"       60.45429707])\\n\"\n      ]\n     },\n     {\n      \"data\": {\n-      \"image/png\": \"\\n\",\n+      \"image/png\": \"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59prrwXg6quv5hvf+EZtP9dffz3nnnsuAJdddhnbbbcd++23H8cddxxXXnnlKn/nH/7wB8aPH8/o0aP54he/SFVVFVVVVZxyyimMGDGCkSNHctVVV3HHHXcwefJkjj/+eEaPHs3SpUvrDefXv/41O+20E+Xl5Rx55JEsWbIEgNmzZ3P44YdTXl5OeXk5Tz31FAA33ngjo0aNory8nBNPPBGAU045hTvuuKN2mF27dgVg0qRJ7LPPPnz+859n5MiRTU4rgPvuu48xY8ZQXl7OxIkTqa6uZuutt2bOnDkAVFdXs9VWW/HRRx+t8rRScdgyUZIkSZIkrfeO/X9Pr9Tts6MGcOKuQ1m6vIpTfvfsSuVHjR3E0eMGM2/xcs7+w3P1ym774q4tfud1111H7969Wbp0KTvttBNHHnkkRx11FLvuuis/+tGP0nBuu43vfOc7TJ48mT/96U+88MILVFZWMmbMGMaOHbtK4/jKK69w22238eSTT9KuXTvOOeccbrrpJoYPH87777/PlClTAJg/fz49e/bkl7/8ZZMtGo844gjOOOMMAL773e/y29/+lnPPPZevfOUr7L333tx5551UVVWxaNEipk6dyuWXX86TTz5J3759mTdvXot1ffbZZ5kyZQrDhg1rclpVV1dzxhln8PjjjzNs2DDmzZtHSUkJJ5xwAjfddBPnnXceDz30EOXl5fTt23eVppWKx5aJkiRJkiRJjfj5z39OeXk5u+yyC9OnT+eNN96gX79+bLHFFjzzzDPMnTuX1157jd13351//OMfHHrooXTq1Ilu3bpx8MEHr/L3Pfzwwzz33HPstNNOjB49mocffpi3336bLbbYgrfffptzzz2X++67j+7du7c4rClTprDnnnsycuRIbrrpJqZOnQrAI488wtlnnw1AaWkpPXr04JFHHuGoo46qDfR69+7d4vDHjx9fGyQ2Na2eeeYZ9tprr9r+aoZ72mmnceONNwIphDz11FNXYSqp2GyZKEmSJEmS1nvNtSTs1L602fLeXdrnaolYaNKkSTz00EM8/fTTdO7cmQkTJlBRUQHAsccey+233852223H4YcfTgiBGOMqDb8xMUZOPvlkfvjDH65U9tJLL3H//ffzq1/9ittvv53rrruu2WGdcsop3HXXXZSXl3P99dczadKkZr83hLBS97KyMqqrq2v7Wb58eW1Zly5dav9valo1NdzBgwfTv39/HnnkEf75z39y0003NTsuWr/YMlGSJEmSJKmBBQsW0KtXLzp37syrr77KM888U1t2xBFHcNddd3HLLbdw7LHHArDHHntw7733UlFRwaJFi/jrX/+6yt85ceJE7rjjDj788EMA5s2bx7vvvstHH31EdXU1Rx55JJdddhnPP/88AN26dWPhwoWNDmvhwoUMGDCAFStW1AvrJk6cyNVXXw2kh6d88sknTJw4kdtvv525c+fWfi/A0KFDee65dHn43XffzYoVK1ZpWu2666489thjvPPOO/WGC3D66adzwgkncMwxx/gAlw2MYaIkSZIkSVIDBx54IJWVlYwaNYrvfe977LLLLrVlvXr1YocdduDdd99l/PjxAOy0004ccsghlJeXc8QRRzBu3Dh69OgBwDXXXMM111zT4nfusMMO/OAHP2D//fdn1KhR7LfffnzwwQe8//77TJgwgdGjR3PKKafUtlw85ZRTOOussxp9AMtll13GzjvvzH777cd2221X2/1nP/sZjz76KCNHjmTs2LFMnTqV4cOH853vfIe9996b8vJyvva1rwFwxhln8NhjjzF+/Hj++c9/1muNmGda9evXj2uvvZYjjjiC8vLy2uAV4JBDDmHRokVe4rwBCq3RDFf5jRs3Lk6ePLnY1ZAkSZIkab32yiuvsP322xe7Gqtk0aJFdO3alSVLlrDXXntx7bXXMmbMmGJXa700efJkzj//fJ544olV/mxjy0YI4bkY48pPolGrs2WiJEmSJElqM6568PWiffeZZ57J6NGjGTNmDEceeaRBYhOuuOIKjjzyyEbvDan1ny0T1zFbJkqSJEmS1LLVbZk49MK/Mu2Kz6yFGml9YcvE4rJloiRJkiRJkqRcDBMlSZIkSZIk5WKYKEmSJEmSJCkXw0RJkiRJkiRJuZQVuwKSJEmSJEnrm7lz5zJx4kQAZs2aRWlpKf369QPg2WefpX379s1+ftKkSbRv357ddtttrddVWpcMEyVJkiRJkhro06cPL774IgCXXHIJXbt25YILLsj9+UmTJtG1a9eih4lVVVWUlpYWtQ5qW7zMuUAI4boQwochhCkF3XqHEB4MIbyR/e1VUPatEMKbIYTXQggHFKfWkiRJkiRpXXjuuefYe++9GTt2LAcccAAffPABAD//+c/ZYYcdGDVqFJ/73OeYNm0a11xzDVdddRWjR4/miSeeqDecZ599lt12240dd9yR3Xbbjddeew1Iwd8FF1zAyJEjGTVqFL/4xS8A+Ne//sVuu+1GeXk548ePZ+HChVx//fV8+ctfrh3mZz/7WSZNmgRA165dueiii9h55515+umnufTSS9lpp50YMWIEZ555JjFGAN5880323XdfysvLGTNmDG+99RYnnngid999d+1wjz/+eO655561Nk214bFlYn3XA78EbizodiHwcIzxihDChdn7b4YQdgA+BwwHBgIPhRC2iTFWreM6S5IkSZKktSzGyLnnnsvdd99Nv379uO222/jOd77DddddxxVXXME777xDhw4dmD9/Pj179uSss85qsjXjdtttx+OPP05ZWRkPPfQQ3/72t/nTn/7EtddeyzvvvMMLL7xAWVkZ8+bNY/ny5Rx77LHcdttt7LTTTnzyySd06tSp2bouXryYESNGcOmllwKwww47cNFFFwFw4okn8pe//IWDDz6Y448/ngsvvJDDDz+ciooKqqurOf3007nqqqs49NBDWbBgAU899RQ33HBD609QbbAMEwvEGB8PIQxt0PlQYEL2/w3AJOCbWfdbY4zLgHdCCG8C44Gn10llJUmSJEnaiFz14Ov87OE3cvU79MK/ttjPVyduzfn7bZP7+5ctW8aUKVPYb7/9gNSKcMCAAQCMGjWK448/nsMOO4zDDjusxWEtWLCAk08+mTfeeIMQAitWrADgoYce4qyzzqKsLMU1vXv35uWXX2bAgAHstNNOAHTv3r3F4ZeWlnLkkUfWvn/00Uf50Y9+xJIlS5g3bx7Dhw9nwoQJvP/++xx++OEAdOzYEYC9996bL33pS3z44Yf8+c9/5sgjj6ytjwSGiXn0jzF+ABBj/CCEsEnWfTPgmYL+ZmTdVhJCOBM4E2DIkCFrsaqSJEmSJLVN5++3Ta7wb+iFf2XaFZ9p9e+PMTJ8+HCefnrlNkR//etfefzxx7nnnnu47LLLmDp1arPD+t73vsc+++zDnXfeybRp05gwYULtd4QQVvreht0AysrKqK6urn1fUVFR+3/Hjh1r75NYUVHBOeecw+TJkxk8eDCXXHIJFRUVtZc6N+bEE0/kpptu4tZbb+W6665rdly08fGeiatv5TUZGl0TY4zXxhjHxRjH1Tz5SZIkSZIkbTg6dOjAnDlzasPEFStWMHXqVKqrq5k+fTr77LMPP/rRj5g/fz6LFi2iW7duLFy4sNFhLViwgM02S+2Rrr/++tru+++/P9dccw2VlZUAzJs3j+22246ZM2fyr3/9C4CFCxdSWVnJ0KFDefHFF2u//9lnn230u2pCxr59+7Jo0SLuuOMOILVwHDRoEHfddReQWl4uWbIEgFNOOYWf/vSnAAwfPnw1p5jaKsPEls0OIQwAyP5+mHWfAQwu6G8QMHMd102SJEmSJK0DJSUl3HHHHXzzm9+kvLyc0aNH89RTT1FVVcUJJ5zAyJEj2XHHHTn//PPp2bMnBx98MHfeeWejD2D5xje+wbe+9S123313qqrqHr1w+umnM2TIEEaNGkV5eTk333wz7du357bbbuPcc8+lvLyc/fbbj4qKCnbffXeGDRvGyJEjueCCCxgzZkyj9e7ZsydnnHEGI0eO5LDDDqu9XBrg97//PT//+c8ZNWoUu+22G7NmzQKgf//+bL/99px66qlrYUpqQxeaa9a6McrumfiXGOOI7P2PgbkFD2DpHWP8RghhOHAz6T6JA4GHga1begDLuHHj4uTJk9fqOEiSJEmStKF75ZVX2H777Vf5c2vrMueNyZIlSxg5ciTPP/88PXr0KHZ1VtLYshFCeC7GOK5IVdqo2DKxQAjhFtIDVLYNIcwIIXwBuALYL4TwBrBf9p4Y41TgduA/wH3Al3ySsyRJkiRJxXVe2R3FrsIG7aGHHmK77bbj3HPPXS+DRBWfD2ApEGM8romiiU30fzlw+dqrkSRJkiRJWhXnlf0Z+F2xq7HB2nfffXnvvfeKXQ2tx2yZKEmSJEmSJCkXw0RJkiRJkiRJuRgmSpIkSZIkScrFMFGSJEmSJElSLoaJkiRJkiRJDUyYMIH777+/Xref/vSnnHPOOc1+ZvLkyQAcdNBBzJ8/f6V+LrnkEq688spmv/uuu+7iP//5T+37iy66iIceemgVat+8r371q2y22WZUV1e32jC18TBMlCRJkiRJauC4447j1ltvrdft1ltv5bjjjsv1+b/97W/07Nlztb67YZh46aWXsu+++67WsBqqrq7mzjvvZPDgwTz++OOtMszGVFVVrbVhq7gMEyVJkiRJkho46qij+Mtf/sKyZcsAmDZtGjNnzmSPPfbg7LPPZty4cQwfPpyLL7640c8PHTqUjz76CIDLL7+cbbfdln333ZfXXnuttp9f//rX7LTTTpSXl3PkkUeyZMkSnnrqKe655x6+/vWvM3r0aN566y1OOeUU7rjjDgAefvhhdtxxR0aOHMlpp51WW7+hQ4dy8cUXM2bMGEaOHMmrr77aaL0effRRRowYwdlnn80tt9xS23327NkcfvjhlJeXU15ezlNPPQXAjTfeyKhRoygvL+fEE08EqFcfgK5duwIwadIk9tlnHz7/+c8zcuRIAA477DDGjh3L8OHDufbaa2s/c9999zFmzBjKy8uZOHEi1dXVbL311syZMwdIoedWW21VOw21/igrdgUkSZIkSZJa9LvPrNxt+GEw/gxYvgRuOnrlfkd/HnY8HhbPhdtPqv/ZU//a7Nf16dOH8ePHc99993HooYdy6623cuyxxxJC4PLLL6d3795UVVUxceJE/v3vfzNq1KhGh/Pcc89x66238sILL1BZWcmYMWMYO3YsAEcccQRnnHEGAN/97nf57W9/y7nnnsshhxzCZz/7WY466qh6w6qoqOCUU07h4YcfZptttuGkk07i6quv5rzzzgOgb9++PP/88/zf//0fV155Jb/5zW9Wqs8tt9zCcccdx6GHHsq3v/1tVqxYQbt27fjKV77C3nvvzZ133klVVRWLFi1i6tSpXH755Tz55JP07duXefPmNTvNAJ599lmmTJnCsGHDALjuuuvo3bs3S5cuZaedduLII4+kurqaM844g8cff5xhw4Yxb948SkpKOOGEE7jppps477zzeOihhygvL6dv374tfqfWLVsmSpIkSZKk9d/8d+Hdf9R//e0CuKQH/PeAum5Q9//d56TyH2+x8mcf/WGLX1l4qXPhJc633347Y8aMYccdd2Tq1Kn1Lklu6IknnuDwww+nc+fOdO/enUMOOaS2bMqUKey5556MHDmSm266ialTpzZbn9dee41hw4axzTbbAHDyySfXu1T5iCOOAGDs2LFMmzZtpc8vX76cv/3tbxx22GF0796dnXfemQceeACARx55hLPPPhuA0tJSevTowSOPPMJRRx1VG+j17t272foBjB8/vjZIBPj5z39OeXk5u+yyC9OnT+eNN97gmWeeYa+99qrtr2a4p512GjfeeCOQQshTTz21xe/TumfLREmSJEmStP47f0q+/i7pAZcsaJWvPOyww/ja177G888/z9KlSxkzZgzvvPMOV155Jf/617/o1asXp5xyChUVFc0OJ4TQaPdTTjmFu+66i/Lycq6//nomTZrU7HBijM2Wd+jQAUhhYGVl5Url9913HwsWLKi9BHnJkiV07tyZz3ymkVaf2fc1VveysrLah7fEGFm+fHltWZcuXWr/nzRpEg899BBPP/00nTt3ZsKECVRUVDQ53MGDB9O/f38eeeQR/vnPf3LTTTc1O74qDlsmSpIkSZIkNaJr165MmDCB0047rbZV4ieffEKXLl3o0aMHs2fP5u9//3uzw9hrr7248847Wbp0KQsXLuTee++tLVu4cCEDBgxgxYoV9YKzbt26sXDhwpWGtd122zFt2jTefPNNAH7/+9+z99575x6fW265hd/85jdMmzaNadOm8c477/DAAw+wZMkSJk6cyNVXXw2kh6d88sknTJw4kdtvv525c+cC1F7mPHToUJ577jkA7r77blasWNHo9y1YsIBevXrRuXNnXn31VZ555hkAdt11Vx577DHeeeedesMFOP300znhhBM45phjKC0tzT1uWncMEyVJkiRJkppw3HHH8dJLL/G5z30OgPLycnbccUeGDx/Oaaedxu67797s58eMGcOxxx7L6NGjOfLII9lzzz1ryy677DJ23nln9ttvP7bbbrva7p/73Of48Y9/zI477shbb71V271jx4787ne/4+ijj2bkyJGUlJRw1lln5RqPJUuWcP/999drhdilSxf22GMP7r33Xn72s5/x6KOPMnLkSMaOHcvUqVMZPnw43/nOd9h7770pLy/na1/7GgBnnHEGjz32GOPHj+ef//xnvdaIhQ488EAqKysZNWoU3/ve99hll10A6NevH9deey1HHHEE5eXlHHvssbWfOeSQQ1i0aJGXOK/HQktNZNW6xo0bFydPnlzsakiSJEmStF575ZVX2H777Vf9g614mbPWvcmTJ3P++efzxBNPNNlPY8tGCOG5GOO4tV0/ec9ESZIkSZIkrQeuuOIKrr76au+VuJ7zMmdJkiRJkiQV3YUXXsi7777LHnvsUeyqqBmGiZIkSZIkab3krdnUkMtE8RkmSpIkSZKk9U7Hjh2ZO3eu4ZFqxRiZO3cuHTt2LHZVNmreM1GSJEmSJK13Bg0axIwZM5gzZ84qfW570gM61DZ17NiRQYMGFbsaGzXDREmSJEmStN5p164dw4YNW/UP7n3h6j0FWlIu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\\n\",\n       \"text/plain\": [\n        \"<Figure size 1440x1080 with 1 Axes>\"\n       ]\n@@ -162,8 +163,8 @@\n    ],\n    \"source\": [\n     \"#path = \\\"/project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/Distance_precise/test_accuracy_20220331-1436.json\\\"\\n\",\n-    \"path = './test_accuracy_20220704-1426.json'\\n\",\n-    \"dict_test_accuracies, dict_val_accuracies, guessing_level_percent1, title1 = load_plotinfo_from_file(path)\\n\",\n+    \"path = '/project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/result_vary_raining_data_20220704-2100.json'\\n\",\n+    \"dict_test_accuracies, dict_val_accuracies, guessing_level_percent1, title1 = plotinfo_from_dict(load_plotinfo_from_file(path))\\n\",\n     \"\\n\",\n     \"fig, ax = plt.subplots()\\n\",\n     \"show_result_distance(*convert_data(dict_test_accuracies), \\n\",\n@@ -183,7 +184,7 @@\n   },\n   {\n    \"cell_type\": \"code\",\n-   \"execution_count\": 92,\n+   \"execution_count\": 38,\n    \"id\": \"9b1c2ac3-dce9-449f-a4c5-cc3f4dab0e72\",\n    \"metadata\": {},\n    \"outputs\": [\n@@ -192,7 +193,8 @@\n      \"output_type\": \"stream\",\n      \"text\": [\n       \"Warning. Failed to interpret n_classes from json file! Set to default.\\n\",\n-      \"distance=array([ 2.,  3.,  4.,  5.,  6.,  7.,  8.,  9., 10., 11., 12., 13., 14.]), accuracy=array([[54.37534397, 52.61156694, 53.84499925, 54.60049032, 54.68054235],\\n\",\n+      \"distance=array([ 2.,  3.,  4.,  5.,  6.,  7.,  8.,  9., 10., 11., 12., 13., 14.,\\n\",\n+      \"       15.]), accuracy=array([[54.37534397, 52.61156694, 53.84499925, 54.60049032, 54.68054235],\\n\",\n       \"       [55.57612448, 55.65339204, 56.00140091, 56.41667084, 55.56611798],\\n\",\n       \"       [55.96637815, 55.47328397, 56.67183669, 55.94136189, 56.10146595],\\n\",\n       \"       [56.95201881, 56.91915149, 57.65247411, 57.59243508, 57.5073798 ],\\n\",\n@@ -204,32 +206,42 @@\n       \"       [58.63811477, 58.92035221, 59.773853  , 58.80322209, 59.4186221 ],\\n\",\n       \"       [59.59873918, 59.38062838, 59.90393756, 59.78385951, 59.54370341],\\n\",\n       \"       [59.35858308, 59.08545127, 59.56871967, 59.13843999, 59.25351478],\\n\",\n-      \"       [59.20848552, 58.6151691 , 60.17911643, 60.02901886, 60.05403512]])\\n\",\n-      \"distance=array([ 2.,  3.,  4.,  5.,  6.,  7.,  8.,  9., 10., 11., 12., 13., 14.]), accuracy=array([55.3309679 , 56.76689744, 57.81758428, 59.02836919, 59.3685925 ,\\n\",\n+      \"       [59.20848552, 58.6151691 , 60.17911643, 60.02901886, 60.05403512],\\n\",\n+      \"       [59.56371642, 59.4506704 , 60.25916846, 59.93395707, 60.14409366]])\\n\",\n+      \"distance=array([ 2.,  3.,  4.,  5.,  6.,  7.,  8.,  9., 10., 11., 12., 13., 14.,\\n\",\n+      \"       15.]), accuracy=array([55.3309679 , 56.76689744, 57.81758428, 59.02836919, 59.3685925 ,\\n\",\n       \"       60.0990653 , 60.63941717, 60.98464131, 61.11472249, 61.35488153,\\n\",\n-      \"       62.05533743, 62.20043302, 61.92525029])\\n\",\n-      \"Warning. Failed to interpret n_classes from json file! Set to default.\\n\",\n-      \"distance=array([ 2.,  3.,  4.,  5.,  6.,  7.,  8.,  9., 10., 11., 12., 13., 14.]), accuracy=array([[52.669235  , 51.49589754, 52.13388703, 52.59418622, 52.52914394],\\n\",\n-      \"       [53.93005454, 54.19251551, 54.94071146, 54.36033422, 54.41036674],\\n\",\n-      \"       [53.88502527, 53.8773264 , 54.51543503, 54.51043178, 54.66052934],\\n\",\n-      \"       [56.07644969, 56.1186712 , 56.2115375 , 56.25656677, 56.4416871 ],\\n\",\n-      \"       [56.71686596, 56.08865319, 56.73687897, 57.06709361, 57.20718467],\\n\",\n-      \"       [58.13278631, 57.38443066, 58.27788062, 58.30790014, 58.80322209],\\n\",\n-      \"       [57.28223345, 56.78407044, 57.35728223, 57.14714564, 57.10711963],\\n\",\n-      \"       [58.42297493, 58.63017811, 59.6387652 , 58.97333267, 58.89328063],\\n\",\n-      \"       [57.29724321, 57.09425655, 57.41732126, 57.1521489 , 56.91699605],\\n\",\n-      \"       [58.02771802, 58.38002802, 58.7081603 , 58.14279282, 58.77320258],\\n\",\n-      \"       [58.83324161, 58.39503702, 59.31355381, 58.94331315, 59.18346926],\\n\",\n-      \"       [58.04773103, 57.7646588 , 58.71816681, 58.42297493, 58.69315055],\\n\",\n-      \"       [59.11342373, 58.59015409, 59.81387902, 59.43363186, 59.82888878]])\\n\",\n-      \"distance=array([ 2.,  3.,  4.,  5.,  6.,  7.,  8.,  9., 10., 11., 12., 13., 14.]), accuracy=array([52.55416036, 54.59048152, 55.36598563, 57.59243369, 57.61744976,\\n\",\n-      \"       59.35858488, 58.23785663, 59.76384878, 58.60309005, 59.82888937,\\n\",\n-      \"       60.43928266, 59.83889699, 60.63941717])\\n\"\n+      \"       62.05533743, 62.20043302, 61.92525029, 62.46560216])\\n\",\n+      \"distance=array([ 2.,  3.,  4.,  5.,  6.,  7.,  8.,  9., 10., 11., 12., 13., 14.,\\n\",\n+      \"       15., 16., 17., 18., 19., 20.]), accuracy=array([[52.26897483, 50.94056434, 51.85370491, 52.15390004, 51.88372442],\\n\",\n+      \"       [51.63856507, 50.51030618, 51.36838945, 51.27833092, 51.46345124],\\n\",\n+      \"       [52.67924151, 51.96117671, 52.52914394, 52.74428378, 52.66423175],\\n\",\n+      \"       [52.75429029, 52.87172303, 53.29464152, 52.75929354, 52.57917646],\\n\",\n+      \"       [55.71121229, 54.94296578, 55.43103017, 55.85130335, 56.15650173],\\n\",\n+      \"       [56.07644969, 56.20872524, 56.73187572, 56.23155051, 56.27657978],\\n\",\n+      \"       [55.65617651, 55.13307985, 55.68619603, 55.53109521, 55.68619603],\\n\",\n+      \"       [56.62680742, 56.26876126, 56.98704158, 57.01706109, 57.18216841],\\n\",\n+      \"       [56.2115375 , 55.62337402, 56.44669035, 56.46170011, 56.52173913],\\n\",\n+      \"       [56.59678791, 56.29877927, 56.74688548, 56.63181068, 56.67683995],\\n\",\n+      \"       [56.52674238, 55.563338  , 56.32160905, 56.37664482, 56.46670336],\\n\",\n+      \"       [56.39665783, 56.58895337, 56.27157652, 56.38665132, 56.47170661],\\n\",\n+      \"       [57.48736679, 56.24374625, 57.34227248, 57.51238305, 57.51238305],\\n\",\n+      \"       [56.8069245 , 56.18371023, 56.72687247, 57.07710012, 56.76689848],\\n\",\n+      \"       [57.32225947, 57.70462277, 58.20783509, 57.71751639, 58.36293591],\\n\",\n+      \"       [58.19782859, 57.86471883, 58.60309201, 58.38795217, 58.75819283],\\n\",\n+      \"       [58.3529294 , 57.93476086, 58.37294241, 58.583079  , 58.78320909],\\n\",\n+      \"       [58.15780257, 57.79967981, 58.79821884, 58.65812778, 58.77820583],\\n\",\n+      \"       [58.78821234, 58.20992596, 59.20348226, 58.92330015, 58.96332616]])\\n\",\n+      \"distance=array([ 2.,  3.,  4.,  5.,  6.,  7.,  8.,  9., 10., 11., 12., 13., 14.,\\n\",\n+      \"       15., 16., 17., 18., 19., 20.]), accuracy=array([52.47410536, 51.6535759 , 53.55981588, 53.02446485, 56.6868484 ,\\n\",\n+      \"       57.35228062, 56.41166568, 58.03272128, 56.83193803, 57.94766545,\\n\",\n+      \"       57.54740834, 57.36228824, 58.67813826, 57.75253773, 59.2885375 ,\\n\",\n+      \"       60.15910506, 60.2391541 , 60.36423445, 60.74948907])\\n\"\n      ]\n     },\n     {\n      \"data\": {\n-      \"image/png\": \"\\n\",\n+      \"image/png\": \"\\n\",\n       \"text/plain\": [\n        \"<Figure size 1440x1080 with 1 Axes>\"\n       ]\n@@ -246,18 +258,22 @@\n     \"\\n\",\n     \"json_paths = [\\n\",\n     \"    './test_accuracy_20220704-1426.json', \\n\",\n-    \"    './test_accuracy_20220704-1335.json',\\n\",\n+    \"    '/project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/result_vary_raining_data_20220704-1657.json',\\n\",\n     \"]\\n\",\n     \"\\n\",\n-    \"for path in json_paths:\\n\",\n-    \"    dict_test_accuracies, dict_val_accuracies, guessing_level_percent, title = load_plotinfo_from_file(path)\\n\",\n+    \"info_dicts = [load_plotinfo_from_file(path) for path in json_paths]\\n\",\n+    \"info_dicts[1].update(load_plotinfo_from_file(\\n\",\n+    \"    \\\"/project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/result_vary_raining_data_20220704-1556.json\\\"))\\n\",\n+    \"\\n\",\n+    \"for info_dict in info_dicts:\\n\",\n+    \"    dict_test_accuracies, dict_val_accuracies, guessing_level_percent, title = plotinfo_from_dict(info_dict)\\n\",\n     \"    show_result_distance(*convert_data(dict_test_accuracies), \\n\",\n     \"                         target_png_path='./tmptmp2.png', title=\\\"Multiple\\\",\\n\",\n-    \"                         guessing_level_percent=guessing_level_percent, ax=ax, label=f\\\"Test acc. {path}\\\")\\n\",\n+    \"                         guessing_level_percent=guessing_level_percent, ax=ax, label=f\\\"Test acc.\\\")\\n\",\n     \"    \\n\",\n     \"    show_result_distance(*convert_data(dict_val_accuracies), \\n\",\n     \"                         target_png_path='./tmptmp2.png', title=\\\"Multiple\\\",\\n\",\n-    \"                         guessing_level_percent=guessing_level_percent, ax=ax, label=f\\\"Validation acc. {path}\\\")\"\n+    \"                         guessing_level_percent=guessing_level_percent, ax=ax, label=f\\\"Validation acc.\\\")\"\n    ]\n   },\n   {\n\n---", "paper/hyperparameter_optimization.ipynb\n=======================================================\nlhs: 100644 | 3b9ea856d14d5aa4939b74a7e86e89a9ae569756\nrhs: 100644 | 5d85ffbc1d2e1f4de8667bfdd4ca44c278125952\n---@@ -95,6 +95,21 @@\n   {\n    \"cell_type\": \"code\",\n    \"execution_count\": 3,\n+   \"id\": \"089eb97b-4ab7-4b98-9454-fc1233287b3d\",\n+   \"metadata\": {},\n+   \"outputs\": [],\n+   \"source\": [\n+    \"debug=False\\n\",\n+    \"use_new_data=False\\n\",\n+    \"num_test_data_sets = 10\\n\",\n+    \"offset_header_rev1 = -200\\n\",\n+    \"offset_header_rev2 = 200\\n\",\n+    \"offset_header = offset_header_rev2\"\n+   ]\n+  },\n+  {\n+   \"cell_type\": \"code\",\n+   \"execution_count\": 4,\n    \"id\": \"50bb7930-54d1-4e34-8d58-c03ace7beb35\",\n    \"metadata\": {},\n    \"outputs\": [\n@@ -102,7 +117,7 @@\n      \"name\": \"stdout\",\n      \"output_type\": \"stream\",\n      \"text\": [\n-      \"Evaluating datasets: ['7.0cm', '00cm', '1.0cm', '2.0cm', '3.0cm', '4.0cm']\\n\"\n+      \"Evaluating datasets: ['FPGA2.5cm']\\n\"\n      ]\n     }\n    ],\n@@ -118,7 +133,7 @@\n     \"    \\\"do_normalize_data\\\": True,  # Use if data should be normalized to have zero mean and std 1\\n\",\n     \"}\\n\",\n     \"\\n\",\n-    \"data_directory=\\\"/project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/Distance_precise\\\"\\n\",\n+    \"data_directory=\\\"/project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev230meas2.5cm/\\\"\\n\",\n     \"\\n\",\n     \"# Array of the different distances in cm (folder names) used for the measurement\\n\",\n     \"# position = [dirname for dirname in os.listdir(data_directory) \\n\",\n@@ -131,7 +146,7 @@\n   },\n   {\n    \"cell_type\": \"code\",\n-   \"execution_count\": 4,\n+   \"execution_count\": 5,\n    \"id\": \"ee7cba52-820e-4058-a241-93c19f3ae772\",\n    \"metadata\": {},\n    \"outputs\": [],\n@@ -144,57 +159,104 @@\n   },\n   {\n    \"cell_type\": \"code\",\n-   \"execution_count\": 5,\n+   \"execution_count\": 8,\n    \"id\": \"af969409-2b19-4c66-a5c6-55badf735280\",\n    \"metadata\": {},\n    \"outputs\": [\n+    {\n+     \"name\": \"stderr\",\n+     \"output_type\": \"stream\",\n+     \"text\": [\n+      \"/home/a/A.Baliuka/emissionsecurity/paper/preprocessing.py:184: RuntimeWarning: divide by zero encountered in double_scalars\\n\",\n+      \"  if np.max(correlation) / np.median(correlation) < 2.:\\n\"\n+     ]\n+    },\n     {\n      \"name\": \"stdout\",\n      \"output_type\": \"stream\",\n      \"text\": [\n-      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/Distance_precise/1.0cm\\n\",\n-      \"\\n\",\n-      \"Found the data synchronization at 799864\\n\",\n-      \"\\n\",\n-      \"Cut data in pieces with these shapes: after header:(11896, 500), before header:(7992, 500)\\n\",\n-      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/Distance_precise/1.0cm\\n\",\n-      \"\\n\",\n-      \"Found the data synchronization at 799864\\n\",\n-      \"\\n\",\n-      \"Cut data in pieces with these shapes: after header:(83272, 500), before header:(55944, 500)\\n\",\n-      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/Distance_precise/1.0cm\\n\",\n-      \"\\n\",\n-      \"Found the data synchronization at 799864\\n\",\n-      \"\\n\",\n-      \"Cut data in pieces with these shapes: after header:(83272, 500), before header:(55944, 500)\\n\",\n-      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/Distance_precise/1.0cm\\n\",\n-      \"\\n\",\n-      \"Found the data synchronization at 799864\\n\",\n-      \"\\n\",\n-      \"Cut data in pieces with these shapes: after header:(83272, 500), before header:(55944, 500)\\n\",\n-      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/Distance_precise/1.0cm\\n\",\n-      \"\\n\",\n-      \"Found the data synchronization at 799864\\n\",\n-      \"\\n\",\n-      \"Cut data in pieces with these shapes: after header:(83272, 500), before header:(55944, 500)\\n\",\n-      \"(556864, 500)\\n\",\n-      \"(556864,)\\n\"\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev230meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13994, 500), before header:(5894, 500)\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev230meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(41982, 500), before header:(17682, 500)\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev230meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(41982, 500), before header:(17682, 500)\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev230meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(41982, 500), before header:(17682, 500)\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev230meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(41982, 500), before header:(17682, 500)\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev230meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(41982, 500), before header:(17682, 500)\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev230meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(41982, 500), before header:(17682, 500)\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev230meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(41982, 500), before header:(17682, 500)\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev230meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(41982, 500), before header:(17682, 500)\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev230meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(41982, 500), before header:(17682, 500)\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev230meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(41982, 500), before header:(17682, 500)\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev230meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(41982, 500), before header:(17682, 500)\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev230meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(41982, 500), before header:(17682, 500)\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev230meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(41982, 500), before header:(17682, 500)\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev230meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(41982, 500), before header:(17682, 500)\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev230meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(41982, 500), before header:(17682, 500)\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev230meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(41982, 500), before header:(17682, 500)\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev230meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(41982, 500), before header:(17682, 500)\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev230meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(41982, 500), before header:(17682, 500)\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev230meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(41982, 500), before header:(17682, 500)\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev230meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(41982, 500), before header:(17682, 500)\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev230meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(41982, 500), before header:(17682, 500)\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev230meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(41982, 500), before header:(17682, 500)\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev230meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(41982, 500), before header:(17682, 500)\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev230meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(41982, 500), before header:(17682, 500)\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev230meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(41982, 500), before header:(17682, 500)\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev230meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(41982, 500), before header:(17682, 500)\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev230meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(41982, 500), before header:(17682, 500)\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev230meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(41982, 500), before header:(17682, 500)\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev230meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(41982, 500), before header:(17682, 500)\\n\",\n+      \"(1730256, 500)\\n\",\n+      \"(1730256,)\\n\"\n      ]\n     },\n     {\n      \"name\": \"stderr\",\n      \"output_type\": \"stream\",\n      \"text\": [\n-      \"2022-03-30 11:16:03.135639: I tensorflow/core/platform/cpu_feature_guard.cc:142] This TensorFlow binary is optimized with oneAPI Deep Neural Network Library (oneDNN) to use the following CPU instructions in performance-critical operations:  SSE4.1 SSE4.2 AVX AVX2 FMA\\n\",\n+      \"2022-07-01 12:21:29.702352: I tensorflow/core/platform/cpu_feature_guard.cc:142] This TensorFlow binary is optimized with oneAPI Deep Neural Network Library (oneDNN) to use the following CPU instructions in performance-critical operations:  SSE4.1 SSE4.2 AVX AVX2 FMA\\n\",\n       \"To enable them in other operations, rebuild TensorFlow with the appropriate compiler flags.\\n\",\n-      \"2022-03-30 11:16:03.681481: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1510] Created device /job:localhost/replica:0/task:0/device:GPU:0 with 43630 MB memory:  -> device: 0, name: NVIDIA A40, pci bus id: 0000:01:00.0, compute capability: 8.6\\n\"\n+      \"2022-07-01 12:21:30.270916: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1510] Created device /job:localhost/replica:0/task:0/device:GPU:0 with 43614 MB memory:  -> device: 0, name: NVIDIA A40, pci bus id: 0000:81:00.0, compute capability: 8.6\\n\"\n      ]\n     }\n    ],\n    \"source\": [\n     \"training_data, training_labels, validation_data, validation_labels = pp.get_datasets(\\n\",\n-    \"    os.path.join(data_directory, position[2]), \\n\",\n-    \"    technical_details, data_augmentation_halflength=3,\\n\",\n+    \"    os.path.join(data_directory, position[0]), \\n\",\n+    \"    technical_details=technical_details,\\n\",\n+    \"    offset_header=offset_header,\\n\",\n+    \"    data_augmentation_halflength=1, \\n\",\n+    \"    debug=debug, \\n\",\n+    \"    force_create_npy_files=use_new_data\\n\",\n     \")\\n\",\n     \"\\n\",\n     \"print(training_data.shape)\\n\",\n@@ -211,7 +273,7 @@\n   },\n   {\n    \"cell_type\": \"code\",\n-   \"execution_count\": 6,\n+   \"execution_count\": 9,\n    \"id\": \"db20a227-a4fc-4745-9df5-a5a5ab640d0d\",\n    \"metadata\": {},\n    \"outputs\": [\n@@ -279,7 +341,7 @@\n   },\n   {\n    \"cell_type\": \"code\",\n-   \"execution_count\": 7,\n+   \"execution_count\": 10,\n    \"id\": \"87d2e9ca-1749-4d12-bb39-573ae2157753\",\n    \"metadata\": {},\n    \"outputs\": [],\n@@ -302,7 +364,7 @@\n   },\n   {\n    \"cell_type\": \"code\",\n-   \"execution_count\": 8,\n+   \"execution_count\": 11,\n    \"id\": \"36ca9e2d-ef5a-45db-ad7a-83d676246a65\",\n    \"metadata\": {},\n    \"outputs\": [\n@@ -347,56 +409,18 @@\n       \"Total params: 1,688,038\\n\",\n       \"Trainable params: 1,687,540\\n\",\n       \"Non-trainable params: 498\\n\",\n-      \"_________________________________________________________________\\n\",\n-      \"Successfully loaded test data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/Distance_precise/1.0cm\\n\",\n-      \"\\n\",\n-      \"Found the test data synchronization at 64\\n\",\n-      \"\\n\",\n-      \"prepared test data with shape: (19994, 500)\\n\"\n+      \"_________________________________________________________________\\n\"\n      ]\n     },\n     {\n-     \"name\": \"stderr\",\n-     \"output_type\": \"stream\",\n-     \"text\": [\n-      \"2022-03-30 11:16:08.813432: I tensorflow/compiler/mlir/mlir_graph_optimization_pass.cc:185] None of the MLIR Optimization Passes are enabled (registered 2)\\n\",\n-      \"2022-03-30 11:16:09.600153: I tensorflow/stream_executor/cuda/cuda_dnn.cc:369] Loaded cuDNN version 8201\\n\",\n-      \"2022-03-30 11:16:10.578419: I tensorflow/core/platform/default/subprocess.cc:304] Start cannot spawn child process: No such file or directory\\n\",\n-      \"2022-03-30 11:16:10.579219: I tensorflow/core/platform/default/subprocess.cc:304] Start cannot spawn child process: No such file or directory\\n\",\n-      \"2022-03-30 11:16:10.579242: W tensorflow/stream_executor/gpu/asm_compiler.cc:77] Couldn't get ptxas version string: Internal: Couldn't invoke ptxas --version\\n\",\n-      \"2022-03-30 11:16:10.580133: I tensorflow/core/platform/default/subprocess.cc:304] Start cannot spawn child process: No such file or directory\\n\",\n-      \"2022-03-30 11:16:10.580183: W tensorflow/stream_executor/gpu/redzone_allocator.cc:314] Internal: Failed to launch ptxas\\n\",\n-      \"Relying on driver to perform ptx compilation. \\n\",\n-      \"Modify $PATH to customize ptxas location.\\n\",\n-      \"This message will be only logged once.\\n\",\n-      \"2022-03-30 11:16:11.621361: I tensorflow/stream_executor/cuda/cuda_blas.cc:1760] TensorFloat-32 will be used for the matrix multiplication. This will only be logged once.\\n\"\n-     ]\n-    },\n-    {\n-     \"name\": \"stdout\",\n-     \"output_type\": \"stream\",\n-     \"text\": [\n-      \"Confusion matrix:\\n\",\n-      \"H V P M \\n\",\n-      \"[[2458    0    5    2]\\n\",\n-      \" [   3 1906   33  581]\\n\",\n-      \" [   3   40 2404   48]\\n\",\n-      \" [   2  476   34 2004]]\\n\",\n-      \"Test accuracy: 0.8772877287728773\\n\",\n-      \"0.8772877287728773\\n\",\n-      \"Successfully loaded test data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/Distance_precise/1.0cm\\n\",\n-      \"\\n\",\n-      \"Found the test data synchronization at 65\\n\",\n-      \"\\n\",\n-      \"prepared test data with shape: (19994, 500)\\n\",\n-      \"Confusion matrix:\\n\",\n-      \"H V P M \\n\",\n-      \"[[2456    1    5    3]\\n\",\n-      \" [   0 1892   31  600]\\n\",\n-      \" [   4   31 2424   36]\\n\",\n-      \" [   1  454   42 2019]]\\n\",\n-      \"Test accuracy: 0.8791879187918792\\n\",\n-      \"0.8791879187918792\\n\"\n+     \"ename\": \"AttributeError\",\n+     \"evalue\": \"module 'preprocessing' has no attribute 'load_test_data_synchronized'\",\n+     \"output_type\": \"error\",\n+     \"traceback\": [\n+      \"\\u001b[0;31m---------------------------------------------------------------------------\\u001b[0m\",\n+      \"\\u001b[0;31mAttributeError\\u001b[0m                            Traceback (most recent call last)\",\n+      \"\\u001b[0;32m/tmp/ipykernel_682/1305286116.py\\u001b[0m in \\u001b[0;36m<module>\\u001b[0;34m\\u001b[0m\\n\\u001b[1;32m      2\\u001b[0m \\u001b[0;34m\\u001b[0m\\u001b[0m\\n\\u001b[1;32m      3\\u001b[0m \\u001b[0;32mfor\\u001b[0m \\u001b[0mj\\u001b[0m \\u001b[0;32min\\u001b[0m \\u001b[0mrange\\u001b[0m\\u001b[0;34m(\\u001b[0m\\u001b[0;36m0\\u001b[0m\\u001b[0;34m,\\u001b[0m\\u001b[0;36m2\\u001b[0m\\u001b[0;34m)\\u001b[0m\\u001b[0;34m:\\u001b[0m\\u001b[0;34m\\u001b[0m\\u001b[0;34m\\u001b[0m\\u001b[0m\\n\\u001b[0;32m----> 4\\u001b[0;31m     test_data, test_labels = pp.load_test_data_synchronized(\\n\\u001b[0m\\u001b[1;32m      5\\u001b[0m         \\u001b[0mos\\u001b[0m\\u001b[0;34m.\\u001b[0m\\u001b[0mpath\\u001b[0m\\u001b[0;34m.\\u001b[0m\\u001b[0mjoin\\u001b[0m\\u001b[0;34m(\\u001b[0m\\u001b[0mdata_directory\\u001b[0m\\u001b[0;34m,\\u001b[0m \\u001b[0mposition\\u001b[0m\\u001b[0;34m[\\u001b[0m\\u001b[0;36m2\\u001b[0m\\u001b[0;34m]\\u001b[0m\\u001b[0;34m)\\u001b[0m\\u001b[0;34m,\\u001b[0m\\u001b[0;34m\\u001b[0m\\u001b[0;34m\\u001b[0m\\u001b[0m\\n\\u001b[1;32m      6\\u001b[0m         \\u001b[0mclock_freq\\u001b[0m\\u001b[0;34m=\\u001b[0m\\u001b[0mtechnical_details\\u001b[0m\\u001b[0;34m[\\u001b[0m\\u001b[0;34m\\\"clock_freq\\\"\\u001b[0m\\u001b[0;34m]\\u001b[0m\\u001b[0;34m,\\u001b[0m\\u001b[0;34m\\u001b[0m\\u001b[0;34m\\u001b[0m\\u001b[0m\\n\",\n+      \"\\u001b[0;31mAttributeError\\u001b[0m: module 'preprocessing' has no attribute 'load_test_data_synchronized'\"\n      ]\n     }\n    ],\n@@ -423,7 +447,7 @@\n   },\n   {\n    \"cell_type\": \"code\",\n-   \"execution_count\": 9,\n+   \"execution_count\": null,\n    \"id\": \"417d23fc-dcf8-42b9-99ef-6fc7d775c4b3\",\n    \"metadata\": {},\n    \"outputs\": [\n@@ -431,138 +455,13 @@\n      \"name\": \"stdout\",\n      \"output_type\": \"stream\",\n      \"text\": [\n-      \"prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 0 samples, test_accuracy=0.8791879187918792. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 1 samples, test_accuracy=0.8807880788078808. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 2 samples, test_accuracy=0.8781878187818782. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 3 samples, test_accuracy=0.8778877887788779. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 4 samples, test_accuracy=0.8735873587358736. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 5 samples, test_accuracy=0.8692869286928693. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 6 samples, test_accuracy=0.8593859385938594. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 7 samples, test_accuracy=0.8510851085108511. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 8 samples, test_accuracy=0.8343834383438344. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 9 samples, test_accuracy=0.8227822782278228. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 10 samples, test_accuracy=0.8014801480148015. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 11 samples, test_accuracy=0.7728772877287728. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 12 samples, test_accuracy=0.7338733873387339. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 13 samples, test_accuracy=0.686068606860686. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 14 samples, test_accuracy=0.6310631063106311. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 15 samples, test_accuracy=0.572957295729573. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 16 samples, test_accuracy=0.5141514151415142. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 17 samples, test_accuracy=0.45854585458545855. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 18 samples, test_accuracy=0.39893989398939894. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 19 samples, test_accuracy=0.2946294629462946. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 20 samples, test_accuracy=0.3029302930293029. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 21 samples, test_accuracy=0.2552255225522552. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 22 samples, test_accuracy=0.26242624262426245. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 23 samples, test_accuracy=0.2585258525852585. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 24 samples, test_accuracy=0.2548254825482548. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 25 samples, test_accuracy=0.2538253825382538. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 26 samples, test_accuracy=0.25822582258225824. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 27 samples, test_accuracy=0.2557255725572557. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 28 samples, test_accuracy=0.31683168316831684. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 29 samples, test_accuracy=0.3161316131613161. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 30 samples, test_accuracy=0.3175317531753175. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 31 samples, test_accuracy=0.3181318131813181. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 32 samples, test_accuracy=0.32143214321432145. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 33 samples, test_accuracy=0.3215321532153215. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 34 samples, test_accuracy=0.32323232323232326. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 35 samples, test_accuracy=0.3209320932093209. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 36 samples, test_accuracy=0.26512651265126513. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 37 samples, test_accuracy=0.2672267226722672. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 38 samples, test_accuracy=0.27002700270027. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 39 samples, test_accuracy=0.27542754275427545. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 40 samples, test_accuracy=0.2556255625562556. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 41 samples, test_accuracy=0.2583258325832583. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 42 samples, test_accuracy=0.2621262126212621. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 43 samples, test_accuracy=0.2538253825382538. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 44 samples, test_accuracy=0.25682568256825683. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 45 samples, test_accuracy=0.2565256525652565. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 46 samples, test_accuracy=0.2532253225322532. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 47 samples, test_accuracy=0.25842584258425844. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 48 samples, test_accuracy=0.25742574257425743. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 49 samples, test_accuracy=0.25292529252925294. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 50 samples, test_accuracy=0.2625262526252625. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 51 samples, test_accuracy=0.2654265426542654. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 52 samples, test_accuracy=0.2648264826482648. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 53 samples, test_accuracy=0.2542254225422542. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 54 samples, test_accuracy=0.2544254425442544. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 55 samples, test_accuracy=0.25642564256425643. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 56 samples, test_accuracy=0.25882588258825884. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 57 samples, test_accuracy=0.2526252625262526. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 58 samples, test_accuracy=0.25662566256625663. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 59 samples, test_accuracy=0.25072507250725073. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 60 samples, test_accuracy=0.25412541254125415. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 61 samples, test_accuracy=0.25742574257425743. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 62 samples, test_accuracy=0.2518251825182518. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 63 samples, test_accuracy=0.2569256925692569. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 64 samples, test_accuracy=0.2571257125712571. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 65 samples, test_accuracy=0.2536253625362536. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 66 samples, test_accuracy=0.28172817281728174. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 67 samples, test_accuracy=0.2796279627962796. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 68 samples, test_accuracy=0.2554255425542554. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 69 samples, test_accuracy=0.2611261126112611. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 70 samples, test_accuracy=0.25272527252725274. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 71 samples, test_accuracy=0.2644264426442644. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 72 samples, test_accuracy=0.2538253825382538. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 73 samples, test_accuracy=0.2571257125712571. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 74 samples, test_accuracy=0.25512551255125515. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 75 samples, test_accuracy=0.2538253825382538. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 76 samples, test_accuracy=0.25252525252525254. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 77 samples, test_accuracy=0.2524252425242524. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 78 samples, test_accuracy=0.25862586258625864. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 79 samples, test_accuracy=0.26572657265726574. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 80 samples, test_accuracy=0.2723272327232723. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 81 samples, test_accuracy=0.28392839283928395. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 82 samples, test_accuracy=0.3013301330133013. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 83 samples, test_accuracy=0.3361336133613361. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 84 samples, test_accuracy=0.39403940394039405. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 85 samples, test_accuracy=0.47024702470247026. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 86 samples, test_accuracy=0.25332533253325334. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 87 samples, test_accuracy=0.2571257125712571. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 88 samples, test_accuracy=0.7174717471747175. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 89 samples, test_accuracy=0.7701770177017702. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 90 samples, test_accuracy=0.8061806180618062. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 91 samples, test_accuracy=0.8306830683068307. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 92 samples, test_accuracy=0.8438843884388438. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 93 samples, test_accuracy=0.8577857785778578. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 94 samples, test_accuracy=0.8647864786478647. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 95 samples, test_accuracy=0.866986698669867. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 96 samples, test_accuracy=0.8691869186918691. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 97 samples, test_accuracy=0.876987698769877. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 98 samples, test_accuracy=0.8755875587558756. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 99 samples, test_accuracy=0.8809880988098809. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 100 samples, test_accuracy=0.8791879187918792. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 101 samples, test_accuracy=0.8807880788078808. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 102 samples, test_accuracy=0.8781878187818782. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 103 samples, test_accuracy=0.8778877887788779. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 104 samples, test_accuracy=0.8735873587358736. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 105 samples, test_accuracy=0.8692869286928693. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 106 samples, test_accuracy=0.8593859385938594. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 107 samples, test_accuracy=0.8510851085108511. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 108 samples, test_accuracy=0.8343834383438344. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 109 samples, test_accuracy=0.8227822782278228. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 110 samples, test_accuracy=0.8014801480148015. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 111 samples, test_accuracy=0.7728772877287728. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 112 samples, test_accuracy=0.7338733873387339. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 113 samples, test_accuracy=0.686068606860686. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 114 samples, test_accuracy=0.6310631063106311. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 115 samples, test_accuracy=0.572957295729573. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 116 samples, test_accuracy=0.5141514151415142. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 117 samples, test_accuracy=0.45854585458545855. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 118 samples, test_accuracy=0.39893989398939894. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 119 samples, test_accuracy=0.2946294629462946. BEST Test accuracy after trying all displacements: 0.8810 at displacement 99 \\n\"\n+      \"WARNING:tensorflow:Unresolved object in checkpoint: (root).optimizer.iter\\n\",\n+      \"WARNING:tensorflow:Unresolved object in checkpoint: (root).optimizer.beta_1\\n\",\n+      \"WARNING:tensorflow:Unresolved object in checkpoint: (root).optimizer.beta_2\\n\",\n+      \"WARNING:tensorflow:Unresolved object in checkpoint: (root).optimizer.decay\\n\",\n+      \"WARNING:tensorflow:Unresolved object in checkpoint: (root).optimizer.learning_rate\\n\",\n+      \"WARNING:tensorflow:A checkpoint was restored (e.g. tf.train.Checkpoint.restore or tf.keras.Model.load_weights) but not all checkpointed values were used. See above for specific issues. Use expect_partial() on the load status object, e.g. tf.train.Checkpoint.restore(...).expect_partial(), to silence these warnings, or use assert_consumed() to make the check explicit. See https://www.tensorflow.org/guide/checkpoint#loading_mechanics for details.\\n\"\n      ]\n-    },\n-    {\n-     \"data\": {\n-      \"text/plain\": [\n-       \"0.8809880988098809\"\n-      ]\n-     },\n-     \"execution_count\": 9,\n-     \"metadata\": {},\n-     \"output_type\": \"execute_result\"\n     }\n    ],\n    \"source\": [\n\n---"]}