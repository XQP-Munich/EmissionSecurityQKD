{"test_accuracies": {"FPGA2.5cm_2": [0.5226897483364187, 0.5094056433860317, 0.5185370490819032, 0.5215390003502276, 0.5188372442087357], "FPGA2.5cm_3": [0.5163856506729374, 0.5051030618371023, 0.5136838945314455, 0.5127833091509482, 0.5146345124330814], "FPGA2.5cm_4": [0.5267924150697954, 0.5196117670602362, 0.5252914394356332, 0.527442837844599, 0.5266423175063791], "FPGA2.5cm_5": [0.5275429028868764, 0.528717230338203, 0.5329464151698604, 0.5275929354080152, 0.5257917646470206], "FPGA2.5cm_6": [0.5571121228798719, 0.5494296577946768, 0.5543103016961025, 0.5585130334717566, 0.5615650172612198], "FPGA2.5cm_7": [0.5607644969229999, 0.5620872523514109, 0.567318757192175, 0.5623155050783009, 0.5627657977685495], "FPGA2.5cm_8": [0.5565617651473458, 0.5513307984790875, 0.5568619602741782, 0.5553109521188773, 0.5568619602741782], "FPGA2.5cm_9": [0.5662680742482614, 0.5626876125675405, 0.5698704157702507, 0.5701706108970831, 0.5718216840946615], "FPGA2.5cm_10": [0.562115374993746, 0.5562337402441465, 0.5644669034872667, 0.5646170010506829, 0.5652173913043478], "FPGA2.5cm_11": [0.5659678791214289, 0.5629877926756054, 0.5674688547555912, 0.5663181067694001, 0.5667683994596487], "FPGA2.5cm_12": [0.5652674238254866, 0.5556333800280168, 0.5632160904587982, 0.5637664481913244, 0.5646670335718217], "FPGA2.5cm_13": [0.5639665782758794, 0.5658895337202321, 0.5627157652474108, 0.5638665132336018, 0.5647170660929605], "FPGA2.5cm_14": [0.5748736678841246, 0.5624374624774865, 0.5734227247711012, 0.5751238304898184, 0.5751238304898184], "FPGA2.5cm_15": [0.568069245009256, 0.5618371022613569, 0.5672687246710362, 0.570771001150748, 0.567668984840146], "FPGA2.5cm_16": [0.5732225946865462, 0.5770462277366419, 0.5820783509281032, 0.5771751638565067, 0.5836293590834042], "FPGA2.5cm_17": [0.5819782858858258, 0.5786471883129878, 0.5860309200980638, 0.583879521689098, 0.5875819282533646], "FPGA2.5cm_18": [0.5835292940411267, 0.5793476085651391, 0.5837294241256817, 0.5858307900135088, 0.5878320908590584], "FPGA2.5cm_19": [0.5815780257167159, 0.5779967980788473, 0.5879821884224746, 0.5865812778305899, 0.5877820583379196], "FPGA2.5cm_20": [0.5878821233801971, 0.5820992595557335, 0.5920348226347125, 0.5892330014509432, 0.589633261620053]}, "train_accuracies": {"FPGA2.5cm_2": 0.513383686542511, "FPGA2.5cm_3": 0.5087306499481201, "FPGA2.5cm_4": 0.5226396918296814, "FPGA2.5cm_5": 0.5239030122756958, "FPGA2.5cm_6": 0.5569720268249512, "FPGA2.5cm_7": 0.5623571872711182, "FPGA2.5cm_8": 0.5586559772491455, "FPGA2.5cm_9": 0.5685257911682129, "FPGA2.5cm_10": 0.5607033371925354, "FPGA2.5cm_11": 0.566115140914917, "FPGA2.5cm_12": 0.5601226091384888, "FPGA2.5cm_13": 0.5640369057655334, "FPGA2.5cm_14": 0.5720328092575073, "FPGA2.5cm_15": 0.5578085780143738, "FPGA2.5cm_16": 0.5833152532577515, "FPGA2.5cm_17": 0.58879154920578, "FPGA2.5cm_18": 0.5894443988800049, "FPGA2.5cm_19": 0.5879594683647156, "FPGA2.5cm_20": 0.5901831388473511}, "validation_accuracies": {"FPGA2.5cm_2": 0.5247410535812378, "FPGA2.5cm_3": 0.516535758972168, "FPGA2.5cm_4": 0.5355981588363647, "FPGA2.5cm_5": 0.5302446484565735, "FPGA2.5cm_6": 0.5668684840202332, "FPGA2.5cm_7": 0.5735228061676025, "FPGA2.5cm_8": 0.5641166567802429, "FPGA2.5cm_9": 0.5803272128105164, "FPGA2.5cm_10": 0.5683193802833557, "FPGA2.5cm_11": 0.5794766545295715, "FPGA2.5cm_12": 0.5754740834236145, "FPGA2.5cm_13": 0.5736228823661804, "FPGA2.5cm_14": 0.58678138256073, "FPGA2.5cm_15": 0.5775253772735596, "FPGA2.5cm_16": 0.5928853750228882, "FPGA2.5cm_17": 0.6015910506248474, "FPGA2.5cm_18": 0.6023915410041809, "FPGA2.5cm_19": 0.6036423444747925, "FPGA2.5cm_20": 0.6074948906898499}, "GIT_SHA1_ONSAVING": "872176a2d536541e229e621339d4edd887823a26", "GIT_DIFF_ONSAVING": ["paper/DataOverview.md\n=======================================================\nlhs: 100644 | 4d0aa9f693c2eb7ee166d91623849d50e2a226da\nrhs: 100644 | a4e51a4acdac35b89aac36d4d0b91657e2cf7811\n---@@ -3,86 +3,137 @@\n \n ## pictures  \n Folder with photos\n+TODO\n+- upload all photos\n+- select which to use in paper (Appendix?)\n \n ## Background\n \n-### BackgroundTuesday \n-### BackgroundSaturday    \n-\n-\n-\n-\n-## Rev1\n+### BackgroundTuesday & BackgroundSaturday\n+TODO\n+- plot together with raw probe spectrum\n \n \n+## ---------------------------------------------------- Rev1\n \n ### TEMPEST\n \n ### Rev130meas2.5cm\n+TODO\n+- How much training data do we need? DO 15 EPOCHS (Appendix!)\n+\n ### Rev1Rotation10deg\n+TODO\n+- Plot results (Appendix)\n \n ### Rev12D\n+TODO\n+- plot (PAPER!)\n ### Rev1Distance\n+TODO\n+- plot (PAPER!)\n+- Think about how to underlay schematic\n \n ### Rev1TEMPESTShieldingUSBHole\n-### Rev1TEMPESTShieldingFPGA\n+TODO\n+- Evaluate\n \n+### Rev1TEMPESTShieldingFPGA\n+TODO\n+- Evaluate\n \n \n ### AB\n \n ### Rev1AntennaAB4m\n+TODO\n+- Evaluate. Preliminary result: 50/50\n+\n ### Rev1ABShieldingUSBHole\n+TODO\n+- Evaluate\n \n ### Rev1ABShieldingFPGA   \n-\n-\n+TODO\n+- Evaluate\n \n ### Other\n \n ### AntennaSpectra\n+TODO\n+- Plot in paper??? Measure more to have more confidence in results?\n \n \n-\n-\n-\n-## Rev2\n-\n+## ---------------------------------------------------- Rev2\n \n \n ### TEMPEST\n \n-### TestRev2Pre2D  \n-DELETE???\n+### TestRev2Pre2D\n+TODO\n+- Move to parent folder? Do not need for paper!\n \n ### Rev230meas2.5cm\n-### Rev2Rotation10deg\n+TODO\n+- Hyperparem Optimization (Appendix?)\n+- How much training data do we need? DO 15 EPOCHS (Appendix!)\n \n-### Rev22D\n-### Rev22Dstart_7_0\n-### Rev2Distance\n \n+### Rev2Rotation10deg\n+TODO\n+- Plot results (Appendix)\n+\n+### Rev22D & Rev22Dstart_7_0\n+TODO\n+- plot (PAPER!)\n+- Think about how to underlay schematic\n \n+### Rev2Distance\n+TODO\n+- plot (PAPER!)\n+- Think about how to underlay schematic\n \n ### AB\n \n ### ABVeryFarAwayProbeRev2\n+TODO\n+- Verify expected 50/50 performance\n+- NO PLOT\n+\n ### Rev2ABShielding\n+TODO\n+- What is this data?\n \n ### Rev2AntennaAB\n+TODO\n+- Evaluate\n \n ### Rev2ProbeABShieldungBig\n+TODO\n+- Evaluate. If result, mention in paper.\n \n ### rev2NoShieldABAntennaFar\n+TODO\n+- Evaluate. Probably no result!\n \n ### Rev2AB7cm\n+TODO\n+- plot AB measurement (Appendix?)\n \n ### Rev2AntennaOnOff\n-\n+TODO\n+- What is this data?\n \n \n ### Other\n \n ### Rev2FarAway\n+TODO\n+- what is this data?\n \n ### Rev2ShieldingAntenna\n+TODO\n+- What is this data?\n+\n+\n+\n\n---", "paper/TEMPEST_ATTACK_VARY_TRAINING_DATA.ipynb\n=======================================================\nlhs: 100644 | d3f44e2516d5599a604a0c2e7cae955b8f759ddc\nrhs: 100644 | ad26923a5c4bef7294cb7b4415baea1fb34dc33d\n---@@ -106,7 +106,7 @@\n     \"    \\\"training_EPOCHS\\\": 10,\\n\",\n     \"}\\n\",\n     \"\\n\",\n-    \"data_augmentation_halflength = 1\\n\",\n+    \"data_augmentation_halflength = 0\\n\",\n     \"\\n\",\n     \"stop_at_val_acc = 0.99\\n\",\n     \"\\n\",\n@@ -191,16 +191,16 @@\n       \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n       \"Cut data in pieces with these shapes: after header:(13992, 500), before header:(5995, 500)\\n\",\n       \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n-      \"Cut data in pieces with these shapes: after header:(41976, 500), before header:(17986, 500)\\n\"\n+      \"Cut data in pieces with these shapes: after header:(13992, 500), before header:(5995, 500)\\n\"\n      ]\n     },\n     {\n      \"name\": \"stderr\",\n      \"output_type\": \"stream\",\n      \"text\": [\n-      \"2022-07-04 14:26:48.620113: I tensorflow/core/platform/cpu_feature_guard.cc:142] This TensorFlow binary is optimized with oneAPI Deep Neural Network Library (oneDNN) to use the following CPU instructions in performance-critical operations:  SSE4.1 SSE4.2 AVX AVX2 FMA\\n\",\n+      \"2022-07-04 15:56:17.645674: I tensorflow/core/platform/cpu_feature_guard.cc:142] This TensorFlow binary is optimized with oneAPI Deep Neural Network Library (oneDNN) to use the following CPU instructions in performance-critical operations:  SSE4.1 SSE4.2 AVX AVX2 FMA\\n\",\n       \"To enable them in other operations, rebuild TensorFlow with the appropriate compiler flags.\\n\",\n-      \"2022-07-04 14:26:49.210897: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1510] Created device /job:localhost/replica:0/task:0/device:GPU:0 with 43643 MB memory:  -> device: 0, name: NVIDIA A40, pci bus id: 0000:a1:00.0, compute capability: 8.6\\n\"\n+      \"2022-07-04 15:56:18.247696: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1510] Created device /job:localhost/replica:0/task:0/device:GPU:0 with 43643 MB memory:  -> device: 0, name: NVIDIA A40, pci bus id: 0000:a1:00.0, compute capability: 8.6\\n\"\n      ]\n     },\n     {\n@@ -256,109 +256,109 @@\n      \"name\": \"stderr\",\n      \"output_type\": \"stream\",\n      \"text\": [\n-      \"2022-07-04 14:26:51.909856: I tensorflow/compiler/mlir/mlir_graph_optimization_pass.cc:185] None of the MLIR Optimization Passes are enabled (registered 2)\\n\",\n-      \"2022-07-04 14:26:52.967175: I tensorflow/stream_executor/cuda/cuda_dnn.cc:369] Loaded cuDNN version 8201\\n\",\n-      \"2022-07-04 14:26:54.843728: I tensorflow/stream_executor/cuda/cuda_blas.cc:1760] TensorFloat-32 will be used for the matrix multiplication. This will only be logged once.\\n\"\n+      \"2022-07-04 15:56:20.891499: I tensorflow/compiler/mlir/mlir_graph_optimization_pass.cc:185] None of the MLIR Optimization Passes are enabled (registered 2)\\n\",\n+      \"2022-07-04 15:56:21.923463: I tensorflow/stream_executor/cuda/cuda_dnn.cc:369] Loaded cuDNN version 8201\\n\",\n+      \"2022-07-04 15:56:24.010426: I tensorflow/stream_executor/cuda/cuda_blas.cc:1760] TensorFloat-32 will be used for the matrix multiplication. This will only be logged once.\\n\"\n      ]\n     },\n     {\n      \"name\": \"stdout\",\n      \"output_type\": \"stream\",\n      \"text\": [\n-      \"469/469 [==============================] - 10s 11ms/step - loss: 1.2128 - accuracy: 0.4266 - val_loss: 1.1510 - val_accuracy: 0.4441\\n\",\n+      \"157/157 [==============================] - 7s 15ms/step - loss: 1.3651 - accuracy: 0.3814 - val_loss: 1.2377 - val_accuracy: 0.4109\\n\",\n       \"Epoch 2/10\\n\",\n-      \"469/469 [==============================] - 5s 11ms/step - loss: 1.0747 - accuracy: 0.4782 - val_loss: 1.0290 - val_accuracy: 0.4918\\n\",\n+      \"157/157 [==============================] - 2s 13ms/step - loss: 1.1660 - accuracy: 0.4352 - val_loss: 1.1549 - val_accuracy: 0.4457\\n\",\n       \"Epoch 3/10\\n\",\n-      \"469/469 [==============================] - 5s 11ms/step - loss: 1.0385 - accuracy: 0.4913 - val_loss: 1.0330 - val_accuracy: 0.4933\\n\",\n+      \"157/157 [==============================] - 2s 13ms/step - loss: 1.1223 - accuracy: 0.4579 - val_loss: 1.0975 - val_accuracy: 0.4658\\n\",\n       \"Epoch 4/10\\n\",\n-      \"469/469 [==============================] - 5s 11ms/step - loss: 1.0149 - accuracy: 0.5005 - val_loss: 1.0218 - val_accuracy: 0.5007\\n\",\n+      \"157/157 [==============================] - 2s 13ms/step - loss: 1.0909 - accuracy: 0.4722 - val_loss: 1.0646 - val_accuracy: 0.4851\\n\",\n       \"Epoch 5/10\\n\",\n-      \"469/469 [==============================] - 5s 11ms/step - loss: 0.9966 - accuracy: 0.5115 - val_loss: 0.9997 - val_accuracy: 0.5174\\n\",\n+      \"157/157 [==============================] - 2s 13ms/step - loss: 1.0688 - accuracy: 0.4856 - val_loss: 1.0400 - val_accuracy: 0.4980\\n\",\n       \"Epoch 6/10\\n\",\n-      \"469/469 [==============================] - 5s 11ms/step - loss: 0.9770 - accuracy: 0.5264 - val_loss: 0.9800 - val_accuracy: 0.5335\\n\",\n+      \"157/157 [==============================] - 2s 13ms/step - loss: 1.0504 - accuracy: 0.4920 - val_loss: 1.0135 - val_accuracy: 0.5061\\n\",\n       \"Epoch 7/10\\n\",\n-      \"469/469 [==============================] - 5s 11ms/step - loss: 0.9545 - accuracy: 0.5450 - val_loss: 0.9600 - val_accuracy: 0.5426\\n\",\n+      \"157/157 [==============================] - 2s 13ms/step - loss: 1.0392 - accuracy: 0.4977 - val_loss: 1.0338 - val_accuracy: 0.5002\\n\",\n       \"Epoch 8/10\\n\",\n-      \"469/469 [==============================] - 5s 11ms/step - loss: 0.9410 - accuracy: 0.5552 - val_loss: 0.9730 - val_accuracy: 0.5380\\n\",\n+      \"157/157 [==============================] - 2s 13ms/step - loss: 1.0283 - accuracy: 0.5052 - val_loss: 0.9949 - val_accuracy: 0.5175\\n\",\n       \"Epoch 9/10\\n\",\n-      \"469/469 [==============================] - 5s 11ms/step - loss: 0.9239 - accuracy: 0.5650 - val_loss: 0.9555 - val_accuracy: 0.5449\\n\",\n+      \"157/157 [==============================] - 2s 13ms/step - loss: 1.0142 - accuracy: 0.5110 - val_loss: 0.9947 - val_accuracy: 0.5197\\n\",\n       \"Epoch 10/10\\n\",\n-      \"469/469 [==============================] - 5s 11ms/step - loss: 0.9023 - accuracy: 0.5766 - val_loss: 0.9515 - val_accuracy: 0.5533\\n\",\n+      \"157/157 [==============================] - 2s 13ms/step - loss: 1.0046 - accuracy: 0.5134 - val_loss: 0.9862 - val_accuracy: 0.5247\\n\",\n       \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n       \"Cut data in pieces with these shapes: after header:(13992, 500), before header:(5995, 500)\\n\",\n       \"Confusion matrix:\\n\",\n       \"H V P M \\n\",\n-      \"[[4468   75  289  122]\\n\",\n-      \" [ 310 1171 2437 1182]\\n\",\n-      \" [ 440  691 3201  639]\\n\",\n-      \" [ 322  957 1655 2028]]\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0101: 0.6872467103617351\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0011: 0.6777905638665133\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0110: 0.7224696052434082\\n\",\n-      \"Test accuracy: 0.5437534397358282\\n\",\n+      \"[[4512   65  241  136]\\n\",\n+      \" [ 461  893 2478 1268]\\n\",\n+      \" [ 588  627 3062  694]\\n\",\n+      \" [ 512  767 1703 1980]]\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0101: 0.6659828888777706\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0011: 0.6689348076249563\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0110: 0.7104618001701106\\n\",\n+      \"Test accuracy: 0.5226897483364187\\n\",\n       \"\\n\",\n       \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n       \"Cut data in pieces with these shapes: after header:(13992, 500), before header:(5996, 500)\\n\",\n       \"Confusion matrix:\\n\",\n       \"H V P M \\n\",\n-      \"[[4352   65  436  101]\\n\",\n-      \" [ 342  890 2923  946]\\n\",\n-      \" [ 430  461 3610  470]\\n\",\n-      \" [ 354  766 2178 1664]]\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0101: 0.6550930558335001\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0011: 0.6789573744246548\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0110: 0.7181809085451271\\n\",\n-      \"Test accuracy: 0.526115669401641\\n\",\n+      \"[[4415   59  369  111]\\n\",\n+      \" [ 476  819 2780 1026]\\n\",\n+      \" [ 575  549 3309  538]\\n\",\n+      \" [ 516  790 2017 1639]]\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0101: 0.6474884930958575\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0011: 0.6639983990394237\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0110: 0.7073243946367821\\n\",\n+      \"Test accuracy: 0.5094056433860317\\n\",\n       \"\\n\",\n       \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n       \"Cut data in pieces with these shapes: after header:(13992, 500), before header:(5995, 500)\\n\",\n       \"Confusion matrix:\\n\",\n       \"H V P M \\n\",\n-      \"[[4443   58  369   84]\\n\",\n-      \" [ 318  936 2843 1003]\\n\",\n-      \" [ 435  449 3590  497]\\n\",\n-      \" [ 335  790 2044 1793]]\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0101: 0.6683844498924301\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0011: 0.684394856656827\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0110: 0.7241206784409866\\n\",\n-      \"Test accuracy: 0.5384499924951218\\n\",\n+      \"[[4510   64  264  116]\\n\",\n+      \" [ 485  887 2630 1098]\\n\",\n+      \" [ 562  612 3179  618]\\n\",\n+      \" [ 534  845 1795 1788]]\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0101: 0.6570771001150748\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0011: 0.6667333766948517\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0110: 0.71326362135388\\n\",\n+      \"Test accuracy: 0.5185370490819032\\n\",\n       \"\\n\",\n       \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n       \"Cut data in pieces with these shapes: after header:(13992, 500), before header:(5995, 500)\\n\",\n       \"Confusion matrix:\\n\",\n       \"H V P M \\n\",\n-      \"[[4460   72  307  115]\\n\",\n-      \" [ 255 1207 2457 1181]\\n\",\n-      \" [ 377  729 3203  662]\\n\",\n-      \" [ 288 1013 1618 2043]]\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0101: 0.6899984990243658\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0011: 0.6764396857957673\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0110: 0.7255716215540101\\n\",\n-      \"Test accuracy: 0.5460049031870716\\n\",\n+      \"[[4522   33  261  138]\\n\",\n+      \" [ 411  854 2558 1277]\\n\",\n+      \" [ 517  632 3117  705]\\n\",\n+      \" [ 500  778 1753 1931]]\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0101: 0.6632811327362785\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0011: 0.6667333766948517\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0110: 0.7130634912693251\\n\",\n+      \"Test accuracy: 0.5215390003502276\\n\",\n       \"\\n\",\n       \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n       \"Cut data in pieces with these shapes: after header:(13992, 500), before header:(5995, 500)\\n\",\n       \"Confusion matrix:\\n\",\n       \"H V P M \\n\",\n-      \"[[4463   62  294  135]\\n\",\n-      \" [ 321 1159 2464 1156]\\n\",\n-      \" [ 452  640 3216  663]\\n\",\n-      \" [ 341  887 1643 2091]]\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0101: 0.6863461249812378\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0011: 0.6813428728673638\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0110: 0.7259218492019813\\n\",\n-      \"Test accuracy: 0.5468054235252915\\n\",\n+      \"[[4548   57  222  127]\\n\",\n+      \" [ 494  842 2507 1257]\\n\",\n+      \" [ 583  672 3032  684]\\n\",\n+      \" [ 545  848 1621 1948]]\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0101: 0.6644318807224696\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0011: 0.6617301245809777\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0110: 0.7115124831140242\\n\",\n+      \"Test accuracy: 0.5188372442087357\\n\",\n       \"\\n\",\n       \"\\n\",\n       \"\\n\",\n-      \"created a json file of the test accuracies at ./test_accuracy_20220704-1426.json\\n\",\n+      \"created a json file of the test accuracies at /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/result_vary_raining_data_20220704-1556.json\\n\",\n       \"------------- dataset 0: FPGA2.5cm with max_train_files=3 ----------------------------------\\n\",\n       \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n       \"Cut data in pieces with these shapes: after header:(13992, 500), before header:(5995, 500)\\n\",\n       \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n-      \"Cut data in pieces with these shapes: after header:(41976, 500), before header:(17986, 500)\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13992, 500), before header:(5995, 500)\\n\",\n       \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n-      \"Cut data in pieces with these shapes: after header:(41976, 500), before header:(17986, 500)\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13992, 500), before header:(5995, 500)\\n\",\n       \"Model: \\\"sequential_1\\\"\\n\",\n       \"_________________________________________________________________\\n\",\n       \"Layer (type)                 Output Shape              Param #   \\n\",\n@@ -402,102 +402,102 @@\n       \"Non-trainable params: 462\\n\",\n       \"_________________________________________________________________\\n\",\n       \"Epoch 1/10\\n\",\n-      \"937/937 [==============================] - 11s 10ms/step - loss: 1.1585 - accuracy: 0.4458 - val_loss: 1.0138 - val_accuracy: 0.5070\\n\",\n+      \"313/313 [==============================] - 5s 12ms/step - loss: 1.2824 - accuracy: 0.3996 - val_loss: 1.1925 - val_accuracy: 0.4266\\n\",\n       \"Epoch 2/10\\n\",\n-      \"937/937 [==============================] - 9s 10ms/step - loss: 1.0267 - accuracy: 0.5083 - val_loss: 0.9911 - val_accuracy: 0.5283\\n\",\n+      \"313/313 [==============================] - 3s 11ms/step - loss: 1.1442 - accuracy: 0.4502 - val_loss: 1.1302 - val_accuracy: 0.4621\\n\",\n       \"Epoch 3/10\\n\",\n-      \"937/937 [==============================] - 9s 10ms/step - loss: 0.9958 - accuracy: 0.5268 - val_loss: 0.9587 - val_accuracy: 0.5393\\n\",\n+      \"313/313 [==============================] - 3s 11ms/step - loss: 1.1146 - accuracy: 0.4645 - val_loss: 1.1087 - val_accuracy: 0.4721\\n\",\n       \"Epoch 4/10\\n\",\n-      \"937/937 [==============================] - 9s 10ms/step - loss: 0.9756 - accuracy: 0.5374 - val_loss: 0.9464 - val_accuracy: 0.5474\\n\",\n+      \"313/313 [==============================] - 3s 11ms/step - loss: 1.0835 - accuracy: 0.4747 - val_loss: 1.0495 - val_accuracy: 0.4897\\n\",\n       \"Epoch 5/10\\n\",\n-      \"937/937 [==============================] - 9s 10ms/step - loss: 0.9586 - accuracy: 0.5474 - val_loss: 0.9407 - val_accuracy: 0.5510\\n\",\n+      \"313/313 [==============================] - 3s 11ms/step - loss: 1.0555 - accuracy: 0.4802 - val_loss: 1.0534 - val_accuracy: 0.4889\\n\",\n       \"Epoch 6/10\\n\",\n-      \"937/937 [==============================] - 10s 10ms/step - loss: 0.9450 - accuracy: 0.5565 - val_loss: 0.9339 - val_accuracy: 0.5553\\n\",\n+      \"313/313 [==============================] - 3s 11ms/step - loss: 1.0426 - accuracy: 0.4858 - val_loss: 1.0299 - val_accuracy: 0.4999\\n\",\n       \"Epoch 7/10\\n\",\n-      \"937/937 [==============================] - 9s 10ms/step - loss: 0.9305 - accuracy: 0.5679 - val_loss: 0.9268 - val_accuracy: 0.5614\\n\",\n+      \"313/313 [==============================] - 3s 11ms/step - loss: 1.0318 - accuracy: 0.4931 - val_loss: 1.0123 - val_accuracy: 0.5004\\n\",\n       \"Epoch 8/10\\n\",\n-      \"937/937 [==============================] - 9s 10ms/step - loss: 0.9122 - accuracy: 0.5776 - val_loss: 0.9161 - val_accuracy: 0.5695\\n\",\n+      \"313/313 [==============================] - 3s 11ms/step - loss: 1.0230 - accuracy: 0.4959 - val_loss: 1.0077 - val_accuracy: 0.5071\\n\",\n       \"Epoch 9/10\\n\",\n-      \"937/937 [==============================] - 9s 10ms/step - loss: 0.8976 - accuracy: 0.5868 - val_loss: 0.9278 - val_accuracy: 0.5697\\n\",\n+      \"313/313 [==============================] - 3s 11ms/step - loss: 1.0124 - accuracy: 0.5047 - val_loss: 0.9895 - val_accuracy: 0.5164\\n\",\n       \"Epoch 10/10\\n\",\n-      \"937/937 [==============================] - 9s 9ms/step - loss: 0.8862 - accuracy: 0.5920 - val_loss: 0.9285 - val_accuracy: 0.5677\\n\",\n+      \"313/313 [==============================] - 3s 11ms/step - loss: 1.0047 - accuracy: 0.5087 - val_loss: 0.9902 - val_accuracy: 0.5165\\n\",\n       \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n       \"Cut data in pieces with these shapes: after header:(13992, 500), before header:(5995, 500)\\n\",\n       \"Confusion matrix:\\n\",\n       \"H V P M \\n\",\n-      \"[[4338   79  303  234]\\n\",\n-      \" [ 208 1248 1504 2140]\\n\",\n-      \" [ 306  855 2352 1458]\\n\",\n-      \" [ 203  748  841 3170]]\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0101: 0.7307249712313003\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0011: 0.6851453444739081\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0110: 0.6956521739130435\\n\",\n-      \"Test accuracy: 0.5557612448091259\\n\",\n+      \"[[4183  160  401  210]\\n\",\n+      \" [ 220 1523 2096 1261]\\n\",\n+      \" [ 297 1217 2668  789]\\n\",\n+      \" [ 283 1424 1308 1947]]\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0101: 0.6856456696852954\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0011: 0.6403162055335968\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0110: 0.7068094261269825\\n\",\n+      \"Test accuracy: 0.5163856506729374\\n\",\n       \"\\n\",\n       \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n       \"Cut data in pieces with these shapes: after header:(13992, 500), before header:(5996, 500)\\n\",\n       \"Confusion matrix:\\n\",\n       \"H V P M \\n\",\n-      \"[[4270   74  359  251]\\n\",\n-      \" [ 184 1205 1515 2197]\\n\",\n-      \" [ 281  791 2474 1425]\\n\",\n-      \" [ 178  704  905 3175]]\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0101: 0.7336902141284771\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0011: 0.6860116069641785\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0110: 0.693366019611767\\n\",\n-      \"Test accuracy: 0.5565339203522113\\n\",\n+      \"[[4035  129  589  201]\\n\",\n+      \" [ 206 1390 2473 1032]\\n\",\n+      \" [ 269 1049 3061  592]\\n\",\n+      \" [ 229 1427 1696 1610]]\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0101: 0.6710526315789473\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0011: 0.6363317990794477\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0110: 0.7028216930158094\\n\",\n+      \"Test accuracy: 0.5051030618371023\\n\",\n       \"\\n\",\n       \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n       \"Cut data in pieces with these shapes: after header:(13992, 500), before header:(5995, 500)\\n\",\n       \"Confusion matrix:\\n\",\n       \"H V P M \\n\",\n-      \"[[4355   74  307  218]\\n\",\n-      \" [ 219 1163 1590 2128]\\n\",\n-      \" [ 308  810 2447 1406]\\n\",\n-      \" [ 226  695  813 3228]]\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0101: 0.7320258167809076\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0011: 0.6856957022064342\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0110: 0.702306499224496\\n\",\n-      \"Test accuracy: 0.5600140091059188\\n\",\n+      \"[[4175  135  467  177]\\n\",\n+      \" [ 243 1383 2387 1087]\\n\",\n+      \" [ 294 1057 2978  642]\\n\",\n+      \" [ 308 1351 1572 1731]]\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0101: 0.6737379296542753\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0011: 0.64336818932306\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0110: 0.7102616700855556\\n\",\n+      \"Test accuracy: 0.5136838945314455\\n\",\n       \"\\n\",\n       \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n       \"Cut data in pieces with these shapes: after header:(13992, 500), before header:(5995, 500)\\n\",\n       \"Confusion matrix:\\n\",\n       \"H V P M \\n\",\n-      \"[[4342   77  300  235]\\n\",\n-      \" [ 187 1270 1468 2175]\\n\",\n-      \" [ 262  819 2452 1438]\\n\",\n-      \" [ 185  705  860 3212]]\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0101: 0.7363786461199779\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0011: 0.6923500275178867\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0110: 0.6996047430830039\\n\",\n-      \"Test accuracy: 0.5641667083604343\\n\",\n+      \"[[4099  123  502  230]\\n\",\n+      \" [ 195 1542 2084 1279]\\n\",\n+      \" [ 245 1254 2709  763]\\n\",\n+      \" [ 257 1492 1314 1899]]\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0101: 0.6887977185170361\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0011: 0.6326111972782309\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0110: 0.7041577025066293\\n\",\n+      \"Test accuracy: 0.5127833091509482\\n\",\n       \"\\n\",\n       \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n       \"Cut data in pieces with these shapes: after header:(13992, 500), before header:(5995, 500)\\n\",\n       \"Confusion matrix:\\n\",\n       \"H V P M \\n\",\n-      \"[[4323   74  309  248]\\n\",\n-      \" [ 248 1230 1489 2133]\\n\",\n-      \" [ 311  892 2345 1423]\\n\",\n-      \" [ 209  692  853 3208]]\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0101: 0.7280232150898084\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0011: 0.6856456696852954\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0110: 0.6976534747585931\\n\",\n-      \"Test accuracy: 0.5556611797668485\\n\",\n+      \"[[4203  149  401  201]\\n\",\n+      \" [ 236 1492 2141 1231]\\n\",\n+      \" [ 312 1222 2658  779]\\n\",\n+      \" [ 297 1405 1327 1933]]\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0101: 0.6821934257267224\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0011: 0.6392655225896833\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0110: 0.7078100765497574\\n\",\n+      \"Test accuracy: 0.5146345124330814\\n\",\n       \"\\n\",\n       \"\\n\",\n       \"\\n\",\n-      \"created a json file of the test accuracies at ./test_accuracy_20220704-1426.json\\n\",\n+      \"created a json file of the test accuracies at /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/result_vary_raining_data_20220704-1556.json\\n\",\n       \"------------- dataset 0: FPGA2.5cm with max_train_files=4 ----------------------------------\\n\",\n       \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n       \"Cut data in pieces with these shapes: after header:(13992, 500), before header:(5995, 500)\\n\",\n       \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n-      \"Cut data in pieces with these shapes: after header:(41976, 500), before header:(17986, 500)\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13992, 500), before header:(5995, 500)\\n\",\n       \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n-      \"Cut data in pieces with these shapes: after header:(41976, 500), before header:(17986, 500)\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13992, 500), before header:(5995, 500)\\n\",\n       \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n-      \"Cut data in pieces with these shapes: after header:(41976, 500), before header:(17986, 500)\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13992, 500), before header:(5995, 500)\\n\",\n       \"Model: \\\"sequential_2\\\"\\n\",\n       \"_________________________________________________________________\\n\",\n       \"Layer (type)                 Output Shape              Param #   \\n\",\n@@ -541,104 +541,104 @@\n       \"Non-trainable params: 462\\n\",\n       \"_________________________________________________________________\\n\",\n       \"Epoch 1/10\\n\",\n-      \"1406/1406 [==============================] - 15s 10ms/step - loss: 1.1154 - accuracy: 0.4636 - val_loss: 1.0034 - val_accuracy: 0.5137\\n\",\n+      \"469/469 [==============================] - 6s 11ms/step - loss: 1.2255 - accuracy: 0.4123 - val_loss: 1.1173 - val_accuracy: 0.4626\\n\",\n       \"Epoch 2/10\\n\",\n-      \"1406/1406 [==============================] - 13s 10ms/step - loss: 1.0071 - accuracy: 0.5197 - val_loss: 0.9757 - val_accuracy: 0.5349\\n\",\n+      \"469/469 [==============================] - 5s 10ms/step - loss: 1.0880 - accuracy: 0.4740 - val_loss: 1.0385 - val_accuracy: 0.4918\\n\",\n       \"Epoch 3/10\\n\",\n-      \"1406/1406 [==============================] - 14s 10ms/step - loss: 0.9740 - accuracy: 0.5393 - val_loss: 0.9604 - val_accuracy: 0.5418\\n\",\n+      \"469/469 [==============================] - 5s 10ms/step - loss: 1.0509 - accuracy: 0.4886 - val_loss: 1.0158 - val_accuracy: 0.5031\\n\",\n       \"Epoch 4/10\\n\",\n-      \"1406/1406 [==============================] - 13s 9ms/step - loss: 0.9480 - accuracy: 0.5538 - val_loss: 0.9493 - val_accuracy: 0.5522\\n\",\n+      \"469/469 [==============================] - 5s 10ms/step - loss: 1.0339 - accuracy: 0.4972 - val_loss: 0.9884 - val_accuracy: 0.5123\\n\",\n       \"Epoch 5/10\\n\",\n-      \"1406/1406 [==============================] - 13s 9ms/step - loss: 0.9291 - accuracy: 0.5648 - val_loss: 0.9311 - val_accuracy: 0.5630\\n\",\n+      \"469/469 [==============================] - 5s 10ms/step - loss: 1.0201 - accuracy: 0.5025 - val_loss: 0.9797 - val_accuracy: 0.5151\\n\",\n       \"Epoch 6/10\\n\",\n-      \"1406/1406 [==============================] - 13s 9ms/step - loss: 0.9151 - accuracy: 0.5727 - val_loss: 0.9146 - val_accuracy: 0.5732\\n\",\n+      \"469/469 [==============================] - 5s 11ms/step - loss: 1.0072 - accuracy: 0.5086 - val_loss: 0.9803 - val_accuracy: 0.5163\\n\",\n       \"Epoch 7/10\\n\",\n-      \"1406/1406 [==============================] - 13s 9ms/step - loss: 0.9002 - accuracy: 0.5835 - val_loss: 0.9215 - val_accuracy: 0.5734\\n\",\n+      \"469/469 [==============================] - 5s 10ms/step - loss: 1.0004 - accuracy: 0.5117 - val_loss: 0.9663 - val_accuracy: 0.5213\\n\",\n       \"Epoch 8/10\\n\",\n-      \"1406/1406 [==============================] - 13s 9ms/step - loss: 0.8865 - accuracy: 0.5910 - val_loss: 0.9133 - val_accuracy: 0.5776\\n\",\n+      \"469/469 [==============================] - 5s 10ms/step - loss: 0.9911 - accuracy: 0.5161 - val_loss: 0.9609 - val_accuracy: 0.5307\\n\",\n       \"Epoch 9/10\\n\",\n-      \"1406/1406 [==============================] - 13s 9ms/step - loss: 0.8751 - accuracy: 0.5984 - val_loss: 0.9132 - val_accuracy: 0.5800\\n\",\n+      \"469/469 [==============================] - 5s 10ms/step - loss: 0.9877 - accuracy: 0.5184 - val_loss: 0.9589 - val_accuracy: 0.5305\\n\",\n       \"Epoch 10/10\\n\",\n-      \"1406/1406 [==============================] - 13s 9ms/step - loss: 0.8623 - accuracy: 0.6049 - val_loss: 0.9144 - val_accuracy: 0.5782\\n\",\n+      \"469/469 [==============================] - 5s 10ms/step - loss: 0.9800 - accuracy: 0.5226 - val_loss: 0.9533 - val_accuracy: 0.5356\\n\",\n       \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n       \"Cut data in pieces with these shapes: after header:(13992, 500), before header:(5995, 500)\\n\",\n       \"Confusion matrix:\\n\",\n       \"H V P M \\n\",\n-      \"[[4257  210  219  268]\\n\",\n-      \" [ 143 1847 1133 1977]\\n\",\n-      \" [ 249 1356 2042 1324]\\n\",\n-      \" [ 166 1150  606 3040]]\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0101: 0.7395306949517186\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0011: 0.6738880272176915\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0110: 0.7059088407464852\\n\",\n-      \"Test accuracy: 0.5596637814579477\\n\",\n+      \"[[4417   95  193  249]\\n\",\n+      \" [ 297 1080 2155 1568]\\n\",\n+      \" [ 392  977 2717  885]\\n\",\n+      \" [ 316 1033 1298 2315]]\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0101: 0.6861960274178216\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0011: 0.6556261570020513\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0110: 0.7117626457197178\\n\",\n+      \"Test accuracy: 0.5267924150697954\\n\",\n       \"\\n\",\n       \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n       \"Cut data in pieces with these shapes: after header:(13992, 500), before header:(5996, 500)\\n\",\n       \"Confusion matrix:\\n\",\n       \"H V P M \\n\",\n-      \"[[4132  237  310  275]\\n\",\n-      \" [ 148 1715 1374 1864]\\n\",\n-      \" [ 243 1228 2356 1144]\\n\",\n-      \" [ 139 1116  822 2885]]\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0101: 0.7314888933360016\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0011: 0.6723534120472283\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0110: 0.7056233740244147\\n\",\n-      \"Test accuracy: 0.5547328397038223\\n\",\n+      \"[[4363  133  222  236]\\n\",\n+      \" [ 292 1166 2131 1512]\\n\",\n+      \" [ 419 1081 2664  807]\\n\",\n+      \" [ 326 1115 1328 2193]]\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0101: 0.6831098659195517\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0011: 0.6476886131679007\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0110: 0.7084250550330198\\n\",\n+      \"Test accuracy: 0.5196117670602362\\n\",\n       \"\\n\",\n       \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n       \"Cut data in pieces with these shapes: after header:(13992, 500), before header:(5995, 500)\\n\",\n       \"Confusion matrix:\\n\",\n       \"H V P M \\n\",\n-      \"[[4283  190  245  236]\\n\",\n-      \" [ 153 1764 1298 1885]\\n\",\n-      \" [ 279 1263 2257 1172]\\n\",\n-      \" [ 164 1081  694 3023]]\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0101: 0.7413318657127133\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0011: 0.677240206133987\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0110: 0.7148646620303197\\n\",\n-      \"Test accuracy: 0.5667183669385101\\n\",\n+      \"[[4433   91  223  207]\\n\",\n+      \" [ 318 1073 2248 1461]\\n\",\n+      \" [ 398 1019 2746  808]\\n\",\n+      \" [ 350 1071 1294 2247]]\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0101: 0.6830439785860809\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0011: 0.6509231000150097\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0110: 0.7166158002701756\\n\",\n+      \"Test accuracy: 0.5252914394356332\\n\",\n       \"\\n\",\n       \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n       \"Cut data in pieces with these shapes: after header:(13992, 500), before header:(5995, 500)\\n\",\n       \"Confusion matrix:\\n\",\n       \"H V P M \\n\",\n-      \"[[4203  255  225  271]\\n\",\n-      \" [ 129 1862 1142 1967]\\n\",\n-      \" [ 238 1367 2056 1310]\\n\",\n-      \" [ 142 1130  630 3060]]\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0101: 0.737529394106169\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0011: 0.6756891979786861\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0110: 0.7056086456196528\\n\",\n-      \"Test accuracy: 0.5594136188522539\\n\",\n+      \"[[4380  104  218  252]\\n\",\n+      \" [ 263 1134 2170 1533]\\n\",\n+      \" [ 366 1009 2749  847]\\n\",\n+      \" [ 292 1052 1339 2279]]\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0101: 0.6859958973332666\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0011: 0.6551758643118026\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0110: 0.7137139140441287\\n\",\n+      \"Test accuracy: 0.527442837844599\\n\",\n       \"\\n\",\n       \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n       \"Cut data in pieces with these shapes: after header:(13992, 500), before header:(5995, 500)\\n\",\n       \"Confusion matrix:\\n\",\n       \"H V P M \\n\",\n-      \"[[4243  201  226  284]\\n\",\n-      \" [ 168 1808 1160 1964]\\n\",\n-      \" [ 281 1312 2075 1303]\\n\",\n-      \" [ 145 1097  633 3087]]\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0101: 0.7395306949517186\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0011: 0.6763396207534897\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0110: 0.706159003352179\\n\",\n-      \"Test accuracy: 0.5610146595286937\\n\",\n+      \"[[4437   93  204  220]\\n\",\n+      \" [ 298 1077 2176 1549]\\n\",\n+      \" [ 395  994 2714  868]\\n\",\n+      \" [ 338 1019 1307 2298]]\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0101: 0.6850953119527693\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0011: 0.6550257667483864\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0110: 0.7131635563116026\\n\",\n+      \"Test accuracy: 0.5266423175063791\\n\",\n       \"\\n\",\n       \"\\n\",\n       \"\\n\",\n-      \"created a json file of the test accuracies at ./test_accuracy_20220704-1426.json\\n\",\n+      \"created a json file of the test accuracies at /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/result_vary_raining_data_20220704-1556.json\\n\",\n       \"------------- dataset 0: FPGA2.5cm with max_train_files=5 ----------------------------------\\n\",\n       \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n       \"Cut data in pieces with these shapes: after header:(13992, 500), before header:(5995, 500)\\n\",\n       \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n-      \"Cut data in pieces with these shapes: after header:(41976, 500), before header:(17986, 500)\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13992, 500), before header:(5995, 500)\\n\",\n       \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n-      \"Cut data in pieces with these shapes: after header:(41976, 500), before header:(17986, 500)\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13992, 500), before header:(5995, 500)\\n\",\n       \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n-      \"Cut data in pieces with these shapes: after header:(41976, 500), before header:(17986, 500)\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13992, 500), before header:(5995, 500)\\n\",\n       \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n-      \"Cut data in pieces with these shapes: after header:(41976, 500), before header:(17986, 500)\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13992, 500), before header:(5995, 500)\\n\",\n       \"Model: \\\"sequential_3\\\"\\n\",\n       \"_________________________________________________________________\\n\",\n       \"Layer (type)                 Output Shape              Param #   \\n\",\n@@ -682,106 +682,106 @@\n       \"Non-trainable params: 462\\n\",\n       \"_________________________________________________________________\\n\",\n       \"Epoch 1/10\\n\",\n-      \"1874/1874 [==============================] - 19s 9ms/step - loss: 1.1046 - accuracy: 0.4671 - val_loss: 0.9937 - val_accuracy: 0.5109\\n\",\n+      \"625/625 [==============================] - 8s 11ms/step - loss: 1.1997 - accuracy: 0.4207 - val_loss: 1.0653 - val_accuracy: 0.4768\\n\",\n       \"Epoch 2/10\\n\",\n-      \"1874/1874 [==============================] - 17s 9ms/step - loss: 1.0119 - accuracy: 0.5070 - val_loss: 0.9675 - val_accuracy: 0.5222\\n\",\n+      \"625/625 [==============================] - 6s 10ms/step - loss: 1.0807 - accuracy: 0.4737 - val_loss: 1.0359 - val_accuracy: 0.4913\\n\",\n       \"Epoch 3/10\\n\",\n-      \"1874/1874 [==============================] - 17s 9ms/step - loss: 0.9857 - accuracy: 0.5205 - val_loss: 0.9525 - val_accuracy: 0.5360\\n\",\n+      \"625/625 [==============================] - 6s 10ms/step - loss: 1.0417 - accuracy: 0.4908 - val_loss: 1.0090 - val_accuracy: 0.5026\\n\",\n       \"Epoch 4/10\\n\",\n-      \"1874/1874 [==============================] - 17s 9ms/step - loss: 0.9682 - accuracy: 0.5307 - val_loss: 0.9382 - val_accuracy: 0.5411\\n\",\n+      \"625/625 [==============================] - 6s 10ms/step - loss: 1.0200 - accuracy: 0.5026 - val_loss: 0.9961 - val_accuracy: 0.5081\\n\",\n       \"Epoch 5/10\\n\",\n-      \"1874/1874 [==============================] - 17s 9ms/step - loss: 0.9503 - accuracy: 0.5463 - val_loss: 0.9179 - val_accuracy: 0.5589\\n\",\n+      \"625/625 [==============================] - 6s 10ms/step - loss: 1.0087 - accuracy: 0.5073 - val_loss: 0.9851 - val_accuracy: 0.5178\\n\",\n       \"Epoch 6/10\\n\",\n-      \"1874/1874 [==============================] - 17s 9ms/step - loss: 0.9286 - accuracy: 0.5614 - val_loss: 0.9126 - val_accuracy: 0.5654\\n\",\n+      \"625/625 [==============================] - 6s 10ms/step - loss: 1.0001 - accuracy: 0.5113 - val_loss: 0.9711 - val_accuracy: 0.5207\\n\",\n       \"Epoch 7/10\\n\",\n-      \"1874/1874 [==============================] - 17s 9ms/step - loss: 0.9130 - accuracy: 0.5709 - val_loss: 0.8931 - val_accuracy: 0.5787\\n\",\n+      \"625/625 [==============================] - 6s 10ms/step - loss: 0.9927 - accuracy: 0.5150 - val_loss: 0.9684 - val_accuracy: 0.5212\\n\",\n       \"Epoch 8/10\\n\",\n-      \"1874/1874 [==============================] - 17s 9ms/step - loss: 0.8992 - accuracy: 0.5808 - val_loss: 0.8883 - val_accuracy: 0.5850\\n\",\n+      \"625/625 [==============================] - 6s 10ms/step - loss: 0.9854 - accuracy: 0.5180 - val_loss: 0.9610 - val_accuracy: 0.5310\\n\",\n       \"Epoch 9/10\\n\",\n-      \"1874/1874 [==============================] - 17s 9ms/step - loss: 0.8867 - accuracy: 0.5887 - val_loss: 0.8891 - val_accuracy: 0.5898\\n\",\n+      \"625/625 [==============================] - 6s 10ms/step - loss: 0.9813 - accuracy: 0.5219 - val_loss: 0.9601 - val_accuracy: 0.5273\\n\",\n       \"Epoch 10/10\\n\",\n-      \"1874/1874 [==============================] - 17s 9ms/step - loss: 0.8750 - accuracy: 0.5971 - val_loss: 0.8797 - val_accuracy: 0.5903\\n\",\n+      \"625/625 [==============================] - 6s 10ms/step - loss: 0.9776 - accuracy: 0.5239 - val_loss: 0.9565 - val_accuracy: 0.5302\\n\",\n       \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n       \"Cut data in pieces with these shapes: after header:(13992, 500), before header:(5995, 500)\\n\",\n       \"Confusion matrix:\\n\",\n       \"H V P M \\n\",\n-      \"[[4518   56  204  176]\\n\",\n-      \" [ 250 2051 1317 1482]\\n\",\n-      \" [ 344 1349 2297  981]\\n\",\n-      \" [ 213 1499  733 2517]]\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0101: 0.7460849552208936\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0011: 0.6705858808225347\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0110: 0.7223695402011308\\n\",\n-      \"Test accuracy: 0.5695201881222794\\n\",\n+      \"[[4530   48  135  241]\\n\",\n+      \" [ 350  407 2196 2147]\\n\",\n+      \" [ 459  411 2733 1368]\\n\",\n+      \" [ 368  356 1364 2874]]\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0101: 0.6824936208535548\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0011: 0.6841446940511332\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0110: 0.6884474908690649\\n\",\n+      \"Test accuracy: 0.5275429028868764\\n\",\n       \"\\n\",\n       \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n       \"Cut data in pieces with these shapes: after header:(13992, 500), before header:(5996, 500)\\n\",\n       \"Confusion matrix:\\n\",\n       \"H V P M \\n\",\n-      \"[[4449   85  246  174]\\n\",\n-      \" [ 223 2101 1312 1465]\\n\",\n-      \" [ 339 1385 2351  896]\\n\",\n-      \" [ 240 1470  776 2476]]\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0101: 0.7452971783069842\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0011: 0.6682509505703422\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0110: 0.7248349009405644\\n\",\n-      \"Test accuracy: 0.5691915149089454\\n\",\n+      \"[[4499   48  198  209]\\n\",\n+      \" [ 327  409 2484 1881]\\n\",\n+      \" [ 448  346 3039 1138]\\n\",\n+      \" [ 354  357 1630 2621]]\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0101: 0.6730038022813688\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0011: 0.6859615769461677\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0110: 0.6984690814488693\\n\",\n+      \"Test accuracy: 0.528717230338203\\n\",\n       \"\\n\",\n       \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n       \"Cut data in pieces with these shapes: after header:(13992, 500), before header:(5995, 500)\\n\",\n       \"Confusion matrix:\\n\",\n       \"H V P M \\n\",\n-      \"[[4526   74  221  133]\\n\",\n-      \" [ 229 2100 1327 1444]\\n\",\n-      \" [ 347 1319 2381  924]\\n\",\n-      \" [ 243 1497  706 2516]]\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0101: 0.7520888577575424\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0011: 0.6732376044428878\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0110: 0.727723019962976\\n\",\n-      \"Test accuracy: 0.5765247410817032\\n\",\n+      \"[[4553   32  179  190]\\n\",\n+      \" [ 358  406 2369 1967]\\n\",\n+      \" [ 474  379 2928 1190]\\n\",\n+      \" [ 389  363 1445 2765]]\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0101: 0.6821934257267224\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0011: 0.6842947916145494\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0110: 0.699404612998449\\n\",\n+      \"Test accuracy: 0.5329464151698604\\n\",\n       \"\\n\",\n       \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n       \"Cut data in pieces with these shapes: after header:(13992, 500), before header:(5995, 500)\\n\",\n       \"Confusion matrix:\\n\",\n       \"H V P M \\n\",\n-      \"[[4501   86  206  161]\\n\",\n-      \" [ 234 2133 1256 1477]\\n\",\n-      \" [ 340 1367 2316  948]\\n\",\n-      \" [ 214 1461  726 2561]]\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0101: 0.750237654475409\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0011: 0.6756891979786861\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0110: 0.7259218492019813\\n\",\n-      \"Test accuracy: 0.5759243508280383\\n\",\n+      \"[[4511   38  165  240]\\n\",\n+      \" [ 312  400 2254 2134]\\n\",\n+      \" [ 417  432 2784 1338]\\n\",\n+      \" [ 354  358 1400 2850]]\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0101: 0.6813929053885025\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0011: 0.6820933606844449\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0110: 0.691699604743083\\n\",\n+      \"Test accuracy: 0.5275929354080152\\n\",\n       \"\\n\",\n       \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n       \"Cut data in pieces with these shapes: after header:(13992, 500), before header:(5995, 500)\\n\",\n       \"Confusion matrix:\\n\",\n       \"H V P M \\n\",\n-      \"[[4491   67  208  188]\\n\",\n-      \" [ 252 2065 1305 1478]\\n\",\n-      \" [ 370 1315 2338  948]\\n\",\n-      \" [ 252 1408  702 2600]]\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0101: 0.7483864511932756\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0011: 0.673587832090859\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0110: 0.7281733126532246\\n\",\n-      \"Test accuracy: 0.5750737979686796\\n\",\n+      \"[[4526   31  158  239]\\n\",\n+      \" [ 366  413 2200 2121]\\n\",\n+      \" [ 471  408 2725 1367]\\n\",\n+      \" [ 413  370 1334 2845]]\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0101: 0.6818932305998899\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0011: 0.6807925151348376\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0110: 0.6888977835593135\\n\",\n+      \"Test accuracy: 0.5257917646470206\\n\",\n       \"\\n\",\n       \"\\n\",\n       \"\\n\",\n-      \"created a json file of the test accuracies at ./test_accuracy_20220704-1426.json\\n\",\n+      \"created a json file of the test accuracies at /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/result_vary_raining_data_20220704-1556.json\\n\",\n       \"------------- dataset 0: FPGA2.5cm with max_train_files=6 ----------------------------------\\n\",\n       \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n       \"Cut data in pieces with these shapes: after header:(13992, 500), before header:(5995, 500)\\n\",\n       \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n-      \"Cut data in pieces with these shapes: after header:(41976, 500), before header:(17986, 500)\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13992, 500), before header:(5995, 500)\\n\",\n       \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n-      \"Cut data in pieces with these shapes: after header:(41976, 500), before header:(17986, 500)\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13992, 500), before header:(5995, 500)\\n\",\n       \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n-      \"Cut data in pieces with these shapes: after header:(41976, 500), before header:(17986, 500)\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13992, 500), before header:(5995, 500)\\n\",\n       \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n-      \"Cut data in pieces with these shapes: after header:(41976, 500), before header:(17986, 500)\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13992, 500), before header:(5995, 500)\\n\",\n       \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n-      \"Cut data in pieces with these shapes: after header:(41976, 500), before header:(17986, 500)\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13992, 500), before header:(5995, 500)\\n\",\n       \"Model: \\\"sequential_4\\\"\\n\",\n       \"_________________________________________________________________\\n\",\n       \"Layer (type)                 Output Shape              Param #   \\n\",\n@@ -825,108 +825,108 @@\n       \"Non-trainable params: 462\\n\",\n       \"_________________________________________________________________\\n\",\n       \"Epoch 1/10\\n\",\n-      \"2343/2343 [==============================] - 22s 9ms/step - loss: 1.1081 - accuracy: 0.4648 - val_loss: 1.0075 - val_accuracy: 0.5017\\n\",\n+      \"781/781 [==============================] - 9s 10ms/step - loss: 1.1841 - accuracy: 0.4349 - val_loss: 1.0527 - val_accuracy: 0.4856\\n\",\n       \"Epoch 2/10\\n\",\n-      \"2343/2343 [==============================] - 21s 9ms/step - loss: 1.0009 - accuracy: 0.5130 - val_loss: 0.9493 - val_accuracy: 0.5340\\n\",\n+      \"781/781 [==============================] - 8s 10ms/step - loss: 1.0655 - accuracy: 0.4842 - val_loss: 1.0145 - val_accuracy: 0.5062\\n\",\n       \"Epoch 3/10\\n\",\n-      \"2343/2343 [==============================] - 22s 9ms/step - loss: 0.9688 - accuracy: 0.5326 - val_loss: 0.9335 - val_accuracy: 0.5456\\n\",\n+      \"781/781 [==============================] - 8s 10ms/step - loss: 1.0346 - accuracy: 0.4988 - val_loss: 0.9982 - val_accuracy: 0.5202\\n\",\n       \"Epoch 4/10\\n\",\n-      \"2343/2343 [==============================] - 22s 9ms/step - loss: 0.9523 - accuracy: 0.5457 - val_loss: 0.9243 - val_accuracy: 0.5550\\n\",\n+      \"781/781 [==============================] - 8s 10ms/step - loss: 1.0145 - accuracy: 0.5131 - val_loss: 0.9843 - val_accuracy: 0.5283\\n\",\n       \"Epoch 5/10\\n\",\n-      \"2343/2343 [==============================] - 21s 9ms/step - loss: 0.9334 - accuracy: 0.5616 - val_loss: 0.9025 - val_accuracy: 0.5726\\n\",\n+      \"781/781 [==============================] - 8s 10ms/step - loss: 0.9990 - accuracy: 0.5222 - val_loss: 0.9661 - val_accuracy: 0.5377\\n\",\n       \"Epoch 6/10\\n\",\n-      \"2343/2343 [==============================] - 22s 9ms/step - loss: 0.9201 - accuracy: 0.5718 - val_loss: 0.8884 - val_accuracy: 0.5827\\n\",\n+      \"781/781 [==============================] - 8s 10ms/step - loss: 0.9838 - accuracy: 0.5329 - val_loss: 0.9577 - val_accuracy: 0.5429\\n\",\n       \"Epoch 7/10\\n\",\n-      \"2343/2343 [==============================] - 22s 9ms/step - loss: 0.9056 - accuracy: 0.5781 - val_loss: 0.8832 - val_accuracy: 0.5838\\n\",\n+      \"781/781 [==============================] - 8s 10ms/step - loss: 0.9702 - accuracy: 0.5413 - val_loss: 0.9310 - val_accuracy: 0.5556\\n\",\n       \"Epoch 8/10\\n\",\n-      \"2343/2343 [==============================] - 22s 9ms/step - loss: 0.8955 - accuracy: 0.5850 - val_loss: 0.8791 - val_accuracy: 0.5847\\n\",\n+      \"781/781 [==============================] - 8s 10ms/step - loss: 0.9606 - accuracy: 0.5484 - val_loss: 0.9344 - val_accuracy: 0.5574\\n\",\n       \"Epoch 9/10\\n\",\n-      \"2343/2343 [==============================] - 22s 9ms/step - loss: 0.8858 - accuracy: 0.5901 - val_loss: 0.8725 - val_accuracy: 0.5935\\n\",\n+      \"781/781 [==============================] - 8s 10ms/step - loss: 0.9536 - accuracy: 0.5530 - val_loss: 0.9305 - val_accuracy: 0.5602\\n\",\n       \"Epoch 10/10\\n\",\n-      \"2343/2343 [==============================] - 22s 9ms/step - loss: 0.8760 - accuracy: 0.5958 - val_loss: 0.8670 - val_accuracy: 0.5937\\n\",\n+      \"781/781 [==============================] - 8s 10ms/step - loss: 0.9474 - accuracy: 0.5570 - val_loss: 0.9161 - val_accuracy: 0.5669\\n\",\n       \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n       \"Cut data in pieces with these shapes: after header:(13992, 500), before header:(5995, 500)\\n\",\n       \"Confusion matrix:\\n\",\n       \"H V P M \\n\",\n-      \"[[4566   61  176  151]\\n\",\n-      \" [ 242 1736 1650 1472]\\n\",\n-      \" [ 380 1088 2660  843]\\n\",\n-      \" [ 205 1209 1001 2547]]\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0101: 0.7377795567118627\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0011: 0.6832441086706359\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0110: 0.7306249061890229\\n\",\n-      \"Test accuracy: 0.5758242857857607\\n\",\n+      \"[[4429   82  297  146]\\n\",\n+      \" [ 257 1200 2467 1176]\\n\",\n+      \" [ 362  688 3372  549]\\n\",\n+      \" [ 271  890 1667 2134]]\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0101: 0.693450742982939\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0011: 0.6849452143893531\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0110: 0.7358282883874518\\n\",\n+      \"Test accuracy: 0.5571121228798719\\n\",\n       \"\\n\",\n       \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n       \"Cut data in pieces with these shapes: after header:(13992, 500), before header:(5996, 500)\\n\",\n       \"Confusion matrix:\\n\",\n       \"H V P M \\n\",\n-      \"[[4462   85  269  138]\\n\",\n-      \" [ 189 1714 1795 1403]\\n\",\n-      \" [ 311 1025 2882  753]\\n\",\n-      \" [ 190 1203 1168 2401]]\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0101: 0.7326896137682609\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0011: 0.6831098659195517\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0110: 0.7307884730838503\\n\",\n-      \"Test accuracy: 0.5732939763858315\\n\",\n+      \"[[4263  106  426  159]\\n\",\n+      \" [ 231 1158 2569 1143]\\n\",\n+      \" [ 340  606 3547  478]\\n\",\n+      \" [ 242  887 1819 2014]]\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0101: 0.6893135881528918\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0011: 0.6812087252351411\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0110: 0.7283370022013208\\n\",\n+      \"Test accuracy: 0.5494296577946768\\n\",\n       \"\\n\",\n       \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n       \"Cut data in pieces with these shapes: after header:(13992, 500), before header:(5995, 500)\\n\",\n       \"Confusion matrix:\\n\",\n       \"H V P M \\n\",\n-      \"[[4544   79  207  124]\\n\",\n-      \" [ 213 1693 1750 1444]\\n\",\n-      \" [ 331 1060 2820  760]\\n\",\n-      \" [ 203 1172 1063 2524]]\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0101: 0.7372291989793366\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0011: 0.6852454095161855\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0110: 0.7363786461199779\\n\",\n-      \"Test accuracy: 0.5794266273077501\\n\",\n+      \"[[4409   76  325  144]\\n\",\n+      \" [ 252 1180 2564 1104]\\n\",\n+      \" [ 352  682 3457  480]\\n\",\n+      \" [ 262  954 1713 2033]]\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0101: 0.6911492470105569\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0011: 0.6804422874868664\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0110: 0.7370290688947816\\n\",\n+      \"Test accuracy: 0.5543103016961025\\n\",\n       \"\\n\",\n       \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n       \"Cut data in pieces with these shapes: after header:(13992, 500), before header:(5995, 500)\\n\",\n       \"Confusion matrix:\\n\",\n       \"H V P M \\n\",\n-      \"[[4564   71  184  135]\\n\",\n-      \" [ 205 1755 1637 1503]\\n\",\n-      \" [ 337 1071 2700  863]\\n\",\n-      \" [ 196 1203  960 2603]]\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0101: 0.742932906389153\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0011: 0.686496222544654\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0110: 0.7335267924150698\\n\",\n-      \"Test accuracy: 0.5814779606744384\\n\",\n+      \"[[4433   82  283  156]\\n\",\n+      \" [ 228 1162 2539 1171]\\n\",\n+      \" [ 340  673 3405  553]\\n\",\n+      \" [ 246  894 1659 2163]]\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0101: 0.6930004502926902\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0011: 0.6846950517836594\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0110: 0.7393305648671636\\n\",\n+      \"Test accuracy: 0.5585130334717566\\n\",\n       \"\\n\",\n       \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n       \"Cut data in pieces with these shapes: after header:(13992, 500), before header:(5995, 500)\\n\",\n       \"Confusion matrix:\\n\",\n       \"H V P M \\n\",\n-      \"[[4547   69  202  136]\\n\",\n-      \" [ 258 1743 1616 1483]\\n\",\n-      \" [ 368 1049 2704  850]\\n\",\n-      \" [ 213 1177  949 2623]]\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0101: 0.7428328413468754\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0011: 0.6875969380097063\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0110: 0.7320258167809076\\n\",\n-      \"Test accuracy: 0.5812277980687447\\n\",\n+      \"[[4434   78  313  129]\\n\",\n+      \" [ 270 1241 2452 1137]\\n\",\n+      \" [ 376  678 3383  534]\\n\",\n+      \" [ 285  906 1605 2166]]\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0101: 0.698253865012258\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0011: 0.6859958973332666\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0110: 0.738880272176915\\n\",\n+      \"Test accuracy: 0.5615650172612198\\n\",\n       \"\\n\",\n       \"\\n\",\n       \"\\n\",\n-      \"created a json file of the test accuracies at ./test_accuracy_20220704-1426.json\\n\",\n+      \"created a json file of the test accuracies at /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/result_vary_raining_data_20220704-1556.json\\n\",\n       \"------------- dataset 0: FPGA2.5cm with max_train_files=7 ----------------------------------\\n\",\n       \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n       \"Cut data in pieces with these shapes: after header:(13992, 500), before header:(5995, 500)\\n\",\n       \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n-      \"Cut data in pieces with these shapes: after header:(41976, 500), before header:(17986, 500)\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13992, 500), before header:(5995, 500)\\n\",\n       \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n-      \"Cut data in pieces with these shapes: after header:(41976, 500), before header:(17986, 500)\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13992, 500), before header:(5995, 500)\\n\",\n       \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n-      \"Cut data in pieces with these shapes: after header:(41976, 500), before header:(17986, 500)\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13992, 500), before header:(5995, 500)\\n\",\n       \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n-      \"Cut data in pieces with these shapes: after header:(41976, 500), before header:(17986, 500)\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13992, 500), before header:(5995, 500)\\n\",\n       \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n-      \"Cut data in pieces with these shapes: after header:(41976, 500), before header:(17986, 500)\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13992, 500), before header:(5995, 500)\\n\",\n       \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n-      \"Cut data in pieces with these shapes: after header:(41976, 500), before header:(17986, 500)\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13992, 500), before header:(5995, 500)\\n\",\n       \"Model: \\\"sequential_5\\\"\\n\",\n       \"_________________________________________________________________\\n\",\n       \"Layer (type)                 Output Shape              Param #   \\n\",\n@@ -970,110 +970,110 @@\n       \"Non-trainable params: 462\\n\",\n       \"_________________________________________________________________\\n\",\n       \"Epoch 1/10\\n\",\n-      \"2811/2811 [==============================] - 28s 9ms/step - loss: 1.0945 - accuracy: 0.4714 - val_loss: 0.9787 - val_accuracy: 0.5262\\n\",\n+      \"937/937 [==============================] - 11s 10ms/step - loss: 1.1695 - accuracy: 0.4400 - val_loss: 1.0425 - val_accuracy: 0.4849\\n\",\n       \"Epoch 2/10\\n\",\n-      \"2811/2811 [==============================] - 26s 9ms/step - loss: 0.9890 - accuracy: 0.5280 - val_loss: 0.9281 - val_accuracy: 0.5615\\n\",\n+      \"937/937 [==============================] - 9s 10ms/step - loss: 1.0507 - accuracy: 0.4915 - val_loss: 1.0200 - val_accuracy: 0.5078\\n\",\n       \"Epoch 3/10\\n\",\n-      \"2811/2811 [==============================] - 26s 9ms/step - loss: 0.9559 - accuracy: 0.5470 - val_loss: 0.9006 - val_accuracy: 0.5749\\n\",\n+      \"937/937 [==============================] - 10s 10ms/step - loss: 1.0126 - accuracy: 0.5133 - val_loss: 0.9683 - val_accuracy: 0.5309\\n\",\n       \"Epoch 4/10\\n\",\n-      \"2811/2811 [==============================] - 27s 9ms/step - loss: 0.9332 - accuracy: 0.5622 - val_loss: 0.8844 - val_accuracy: 0.5816\\n\",\n+      \"937/937 [==============================] - 10s 10ms/step - loss: 0.9924 - accuracy: 0.5249 - val_loss: 0.9534 - val_accuracy: 0.5391\\n\",\n       \"Epoch 5/10\\n\",\n-      \"2811/2811 [==============================] - 27s 10ms/step - loss: 0.9143 - accuracy: 0.5727 - val_loss: 0.8718 - val_accuracy: 0.5884\\n\",\n+      \"937/937 [==============================] - 10s 10ms/step - loss: 0.9789 - accuracy: 0.5345 - val_loss: 0.9476 - val_accuracy: 0.5454\\n\",\n       \"Epoch 6/10\\n\",\n-      \"2811/2811 [==============================] - 27s 10ms/step - loss: 0.9021 - accuracy: 0.5819 - val_loss: 0.8706 - val_accuracy: 0.5912\\n\",\n+      \"937/937 [==============================] - 10s 10ms/step - loss: 0.9701 - accuracy: 0.5392 - val_loss: 0.9271 - val_accuracy: 0.5543\\n\",\n       \"Epoch 7/10\\n\",\n-      \"2811/2811 [==============================] - 27s 10ms/step - loss: 0.8905 - accuracy: 0.5893 - val_loss: 0.8657 - val_accuracy: 0.5962\\n\",\n+      \"937/937 [==============================] - 10s 10ms/step - loss: 0.9621 - accuracy: 0.5433 - val_loss: 0.9290 - val_accuracy: 0.5591\\n\",\n       \"Epoch 8/10\\n\",\n-      \"2811/2811 [==============================] - 27s 10ms/step - loss: 0.8810 - accuracy: 0.5950 - val_loss: 0.8650 - val_accuracy: 0.5957\\n\",\n+      \"937/937 [==============================] - 9s 10ms/step - loss: 0.9522 - accuracy: 0.5521 - val_loss: 0.9157 - val_accuracy: 0.5653\\n\",\n       \"Epoch 9/10\\n\",\n-      \"2811/2811 [==============================] - 27s 10ms/step - loss: 0.8726 - accuracy: 0.5985 - val_loss: 0.8619 - val_accuracy: 0.5972\\n\",\n+      \"937/937 [==============================] - 9s 10ms/step - loss: 0.9460 - accuracy: 0.5566 - val_loss: 0.9122 - val_accuracy: 0.5681\\n\",\n       \"Epoch 10/10\\n\",\n-      \"2811/2811 [==============================] - 27s 10ms/step - loss: 0.8631 - accuracy: 0.6050 - val_loss: 0.8598 - val_accuracy: 0.6010\\n\",\n+      \"937/937 [==============================] - 9s 10ms/step - loss: 0.9376 - accuracy: 0.5624 - val_loss: 0.9060 - val_accuracy: 0.5735\\n\",\n       \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n       \"Cut data in pieces with these shapes: after header:(13992, 500), before header:(5995, 500)\\n\",\n       \"Confusion matrix:\\n\",\n       \"H V P M \\n\",\n-      \"[[4494   67  223  170]\\n\",\n-      \" [ 216 1479 1647 1758]\\n\",\n-      \" [ 319  892 2746 1014]\\n\",\n-      \" [ 187  917  962 2896]]\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0101: 0.7420823535297943\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0011: 0.6941511982788813\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0110: 0.7260219142442588\\n\",\n-      \"Test accuracy: 0.5811277330264673\\n\",\n+      \"[[4616   58  164  116]\\n\",\n+      \" [ 351 1545 1362 1842]\\n\",\n+      \" [ 485 1083 2306 1097]\\n\",\n+      \" [ 356 1052  813 2741]]\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0101: 0.7380297193175565\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0011: 0.6767899134437384\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0110: 0.7067093610847051\\n\",\n+      \"Test accuracy: 0.5607644969229999\\n\",\n       \"\\n\",\n       \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n       \"Cut data in pieces with these shapes: after header:(13992, 500), before header:(5996, 500)\\n\",\n       \"Confusion matrix:\\n\",\n       \"H V P M \\n\",\n-      \"[[4430   80  293  151]\\n\",\n-      \" [ 181 1499 1738 1683]\\n\",\n-      \" [ 292  841 2920  918]\\n\",\n-      \" [ 192  973 1040 2757]]\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0101: 0.7427956774064439\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0011: 0.6916649989993996\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0110: 0.7268361016609965\\n\",\n-      \"Test accuracy: 0.5806483890334201\\n\",\n+      \"[[4556   59  225  114]\\n\",\n+      \" [ 283 1509 1516 1793]\\n\",\n+      \" [ 419  990 2448 1114]\\n\",\n+      \" [ 322 1014  904 2722]]\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0101: 0.7347408445067041\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0011: 0.6801580948569141\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0110: 0.7092755653392036\\n\",\n+      \"Test accuracy: 0.5620872523514109\\n\",\n       \"\\n\",\n       \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n       \"Cut data in pieces with these shapes: after header:(13992, 500), before header:(5995, 500)\\n\",\n       \"Confusion matrix:\\n\",\n       \"H V P M \\n\",\n-      \"[[4495   72  241  146]\\n\",\n-      \" [ 207 1479 1764 1650]\\n\",\n-      \" [ 308  837 2872  954]\\n\",\n-      \" [ 203  912 1008 2839]]\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0101: 0.7402811827687997\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0011: 0.6967528893780958\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0110: 0.7322259468654625\\n\",\n-      \"Test accuracy: 0.584630009506179\\n\",\n+      \"[[4613   52  174  115]\\n\",\n+      \" [ 318 1563 1454 1765]\\n\",\n+      \" [ 417 1102 2374 1078]\\n\",\n+      \" [ 338 1006  829 2789]]\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0101: 0.7355280932606194\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0011: 0.6812428078250863\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0110: 0.7178666132986441\\n\",\n+      \"Test accuracy: 0.567318757192175\\n\",\n       \"\\n\",\n       \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n       \"Cut data in pieces with these shapes: after header:(13992, 500), before header:(5995, 500)\\n\",\n       \"Confusion matrix:\\n\",\n       \"H V P M \\n\",\n-      \"[[4496   84  226  148]\\n\",\n-      \" [ 184 1564 1601 1751]\\n\",\n-      \" [ 279  848 2757 1087]\\n\",\n-      \" [ 177  929  906 2950]]\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0101: 0.7480862560664432\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0011: 0.7018562065342473\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0110: 0.727522889878421\\n\",\n-      \"Test accuracy: 0.5887326762395557\\n\",\n+      \"[[4618   56  166  114]\\n\",\n+      \" [ 322 1546 1410 1822]\\n\",\n+      \" [ 453 1120 2280 1118]\\n\",\n+      \" [ 331 1031  805 2795]]\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0101: 0.7360284184720068\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0011: 0.677440336218542\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0110: 0.7111622554660529\\n\",\n+      \"Test accuracy: 0.5623155050783009\\n\",\n       \"\\n\",\n       \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n       \"Cut data in pieces with these shapes: after header:(13992, 500), before header:(5995, 500)\\n\",\n       \"Confusion matrix:\\n\",\n       \"H V P M \\n\",\n-      \"[[4523   76  221  134]\\n\",\n-      \" [ 220 1528 1631 1721]\\n\",\n-      \" [ 333  859 2756 1023]\\n\",\n-      \" [ 194  863  956 2949]]\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0101: 0.7451843698403963\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0011: 0.7020063040976635\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0110: 0.7291739630759994\\n\",\n-      \"Test accuracy: 0.5881823185070296\\n\",\n+      \"[[4612   59  162  121]\\n\",\n+      \" [ 391 1542 1347 1820]\\n\",\n+      \" [ 497 1051 2282 1141]\\n\",\n+      \" [ 352 1010  788 2812]]\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0101: 0.737329264021614\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0011: 0.6817931655576125\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0110: 0.7064091659578726\\n\",\n+      \"Test accuracy: 0.5627657977685495\\n\",\n       \"\\n\",\n       \"\\n\",\n       \"\\n\",\n-      \"created a json file of the test accuracies at ./test_accuracy_20220704-1426.json\\n\",\n+      \"created a json file of the test accuracies at /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/result_vary_raining_data_20220704-1556.json\\n\",\n       \"------------- dataset 0: FPGA2.5cm with max_train_files=8 ----------------------------------\\n\",\n       \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n       \"Cut data in pieces with these shapes: after header:(13992, 500), before header:(5995, 500)\\n\",\n       \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n-      \"Cut data in pieces with these shapes: after header:(41976, 500), before header:(17986, 500)\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13992, 500), before header:(5995, 500)\\n\",\n       \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n-      \"Cut data in pieces with these shapes: after header:(41976, 500), before header:(17986, 500)\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13992, 500), before header:(5995, 500)\\n\",\n       \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n-      \"Cut data in pieces with these shapes: after header:(41976, 500), before header:(17986, 500)\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13992, 500), before header:(5995, 500)\\n\",\n       \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n-      \"Cut data in pieces with these shapes: after header:(41976, 500), before header:(17986, 500)\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13992, 500), before header:(5995, 500)\\n\",\n       \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n-      \"Cut data in pieces with these shapes: after header:(41976, 500), before header:(17986, 500)\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13992, 500), before header:(5995, 500)\\n\",\n       \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n-      \"Cut data in pieces with these shapes: after header:(41976, 500), before header:(17986, 500)\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13992, 500), before header:(5995, 500)\\n\",\n       \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n-      \"Cut data in pieces with these shapes: after header:(41976, 500), before header:(17986, 500)\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13992, 500), before header:(5995, 500)\\n\",\n       \"Model: \\\"sequential_6\\\"\\n\",\n       \"_________________________________________________________________\\n\",\n       \"Layer (type)                 Output Shape              Param #   \\n\",\n@@ -1117,112 +1117,112 @@\n       \"Non-trainable params: 462\\n\",\n       \"_________________________________________________________________\\n\",\n       \"Epoch 1/10\\n\",\n-      \"3280/3280 [==============================] - 33s 10ms/step - loss: 1.0764 - accuracy: 0.4783 - val_loss: 1.0213 - val_accuracy: 0.5137\\n\",\n+      \"1094/1094 [==============================] - 13s 10ms/step - loss: 1.1677 - accuracy: 0.4367 - val_loss: 1.0827 - val_accuracy: 0.4708\\n\",\n       \"Epoch 2/10\\n\",\n-      \"3280/3280 [==============================] - 32s 10ms/step - loss: 0.9798 - accuracy: 0.5318 - val_loss: 0.9208 - val_accuracy: 0.5706\\n\",\n+      \"1094/1094 [==============================] - 11s 10ms/step - loss: 1.0731 - accuracy: 0.4732 - val_loss: 1.0439 - val_accuracy: 0.4799\\n\",\n       \"Epoch 3/10\\n\",\n-      \"3280/3280 [==============================] - 32s 10ms/step - loss: 0.9477 - accuracy: 0.5541 - val_loss: 0.9006 - val_accuracy: 0.5786\\n\",\n+      \"1094/1094 [==============================] - 11s 10ms/step - loss: 1.0447 - accuracy: 0.4874 - val_loss: 1.0012 - val_accuracy: 0.4977\\n\",\n       \"Epoch 4/10\\n\",\n-      \"3280/3280 [==============================] - 32s 10ms/step - loss: 0.9260 - accuracy: 0.5687 - val_loss: 0.8842 - val_accuracy: 0.5880\\n\",\n+      \"1094/1094 [==============================] - 11s 10ms/step - loss: 1.0151 - accuracy: 0.5059 - val_loss: 0.9625 - val_accuracy: 0.5282\\n\",\n       \"Epoch 5/10\\n\",\n-      \"3280/3280 [==============================] - 32s 10ms/step - loss: 0.9030 - accuracy: 0.5834 - val_loss: 0.8668 - val_accuracy: 0.5926\\n\",\n+      \"1094/1094 [==============================] - 11s 10ms/step - loss: 0.9930 - accuracy: 0.5243 - val_loss: 0.9417 - val_accuracy: 0.5458\\n\",\n       \"Epoch 6/10\\n\",\n-      \"3280/3280 [==============================] - 32s 10ms/step - loss: 0.8866 - accuracy: 0.5922 - val_loss: 0.8646 - val_accuracy: 0.5977\\n\",\n+      \"1094/1094 [==============================] - 11s 10ms/step - loss: 0.9734 - accuracy: 0.5411 - val_loss: 0.9342 - val_accuracy: 0.5481\\n\",\n       \"Epoch 7/10\\n\",\n-      \"3280/3280 [==============================] - 32s 10ms/step - loss: 0.8737 - accuracy: 0.5998 - val_loss: 0.8537 - val_accuracy: 0.6062\\n\",\n+      \"1094/1094 [==============================] - 11s 10ms/step - loss: 0.9628 - accuracy: 0.5457 - val_loss: 0.9264 - val_accuracy: 0.5567\\n\",\n       \"Epoch 8/10\\n\",\n-      \"3280/3280 [==============================] - 32s 10ms/step - loss: 0.8617 - accuracy: 0.6068 - val_loss: 0.8536 - val_accuracy: 0.6064\\n\",\n+      \"1094/1094 [==============================] - 11s 10ms/step - loss: 0.9540 - accuracy: 0.5498 - val_loss: 0.9105 - val_accuracy: 0.5643\\n\",\n       \"Epoch 9/10\\n\",\n-      \"3280/3280 [==============================] - 32s 10ms/step - loss: 0.8524 - accuracy: 0.6118 - val_loss: 0.8470 - val_accuracy: 0.6078\\n\",\n+      \"1094/1094 [==============================] - 11s 10ms/step - loss: 0.9458 - accuracy: 0.5552 - val_loss: 0.9083 - val_accuracy: 0.5630\\n\",\n       \"Epoch 10/10\\n\",\n-      \"3280/3280 [==============================] - 32s 10ms/step - loss: 0.8424 - accuracy: 0.6178 - val_loss: 0.8494 - val_accuracy: 0.6064\\n\",\n+      \"1094/1094 [==============================] - 11s 10ms/step - loss: 0.9400 - accuracy: 0.5587 - val_loss: 0.9096 - val_accuracy: 0.5641\\n\",\n       \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n       \"Cut data in pieces with these shapes: after header:(13992, 500), before header:(5995, 500)\\n\",\n       \"Confusion matrix:\\n\",\n       \"H V P M \\n\",\n-      \"[[4523   59  199  173]\\n\",\n-      \" [ 198 1731 1455 1716]\\n\",\n-      \" [ 308 1052 2562 1049]\\n\",\n-      \" [ 175 1011  817 2959]]\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0101: 0.7509381097713513\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0011: 0.695351978786211\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0110: 0.7319757842597688\\n\",\n-      \"Test accuracy: 0.5891329364086656\\n\",\n+      \"[[4545   93  204  112]\\n\",\n+      \" [ 261 1796 1972 1071]\\n\",\n+      \" [ 388 1170 2860  553]\\n\",\n+      \" [ 280 1530 1229 1923]]\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0101: 0.7163156051433431\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0011: 0.6634312302996948\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0110: 0.7333766948516536\\n\",\n+      \"Test accuracy: 0.5565617651473458\\n\",\n       \"\\n\",\n       \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n       \"Cut data in pieces with these shapes: after header:(13992, 500), before header:(5996, 500)\\n\",\n       \"Confusion matrix:\\n\",\n       \"H V P M \\n\",\n-      \"[[4426   83  269  176]\\n\",\n-      \" [ 147 1796 1608 1550]\\n\",\n-      \" [ 282 1070 2763  856]\\n\",\n-      \" [ 159 1071  946 2786]]\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0101: 0.7475985591354813\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0011: 0.6905643386031619\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0110: 0.7396437862717631\\n\",\n-      \"Test accuracy: 0.5889033420052031\\n\",\n+      \"[[4427  123  267  137]\\n\",\n+      \" [ 222 1818 2016 1045]\\n\",\n+      \" [ 357 1163 2948  503]\\n\",\n+      \" [ 261 1651 1223 1827]]\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0101: 0.717430458274965\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0011: 0.6549429657794676\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0110: 0.7302881729037423\\n\",\n+      \"Test accuracy: 0.5513307984790875\\n\",\n       \"\\n\",\n       \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n       \"Cut data in pieces with these shapes: after header:(13992, 500), before header:(5995, 500)\\n\",\n       \"Confusion matrix:\\n\",\n       \"H V P M \\n\",\n-      \"[[4490   63  242  159]\\n\",\n-      \" [ 179 1755 1552 1614]\\n\",\n-      \" [ 288 1021 2740  922]\\n\",\n-      \" [ 174 1038  854 2896]]\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0101: 0.7536398659128434\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0011: 0.6954020113073498\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0110: 0.7398308900785511\\n\",\n-      \"Test accuracy: 0.5944363836493721\\n\",\n+      \"[[4521   97  209  127]\\n\",\n+      \" [ 257 1784 1981 1078]\\n\",\n+      \" [ 352 1160 2947  512]\\n\",\n+      \" [ 275 1590 1219 1878]]\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0101: 0.7184169710311703\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0011: 0.6611797668484515\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0110: 0.7341271826687347\\n\",\n+      \"Test accuracy: 0.5568619602741782\\n\",\n       \"\\n\",\n       \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n       \"Cut data in pieces with these shapes: after header:(13992, 500), before header:(5995, 500)\\n\",\n       \"Confusion matrix:\\n\",\n       \"H V P M \\n\",\n-      \"[[4474   64  217  199]\\n\",\n-      \" [ 169 1796 1438 1697]\\n\",\n-      \" [ 260 1064 2575 1072]\\n\",\n-      \" [ 142 1045  811 2964]]\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0101: 0.7518887276729874\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0011: 0.696702856856957\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0110: 0.7330764997248211\\n\",\n-      \"Test accuracy: 0.5908340421273828\\n\",\n+      \"[[4512  101  203  138]\\n\",\n+      \" [ 239 1750 1994 1117]\\n\",\n+      \" [ 330 1183 2869  589]\\n\",\n+      \" [ 256 1554 1184 1968]]\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0101: 0.7156151498474008\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0011: 0.6610296692850353\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0110: 0.7339770851053184\\n\",\n+      \"Test accuracy: 0.5553109521188773\\n\",\n       \"\\n\",\n       \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n       \"Cut data in pieces with these shapes: after header:(13992, 500), before header:(5995, 500)\\n\",\n       \"Confusion matrix:\\n\",\n       \"H V P M \\n\",\n-      \"[[4484   56  224  190]\\n\",\n-      \" [ 223 1731 1449 1697]\\n\",\n-      \" [ 318 1067 2603  983]\\n\",\n-      \" [ 180  974  771 3037]]\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0101: 0.753890028518537\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0011: 0.6948516535748236\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0110: 0.737529394106169\\n\",\n-      \"Test accuracy: 0.5931355380997648\\n\",\n+      \"[[4534   83  221  116]\\n\",\n+      \" [ 311 1747 1943 1099]\\n\",\n+      \" [ 399 1144 2888  540]\\n\",\n+      \" [ 298 1528 1175 1961]]\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0101: 0.7193175564116676\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0011: 0.6623805473557812\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0110: 0.7320258167809076\\n\",\n+      \"Test accuracy: 0.5568619602741782\\n\",\n       \"\\n\",\n       \"\\n\",\n       \"\\n\",\n-      \"created a json file of the test accuracies at ./test_accuracy_20220704-1426.json\\n\",\n+      \"created a json file of the test accuracies at /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/result_vary_raining_data_20220704-1556.json\\n\",\n       \"------------- dataset 0: FPGA2.5cm with max_train_files=9 ----------------------------------\\n\",\n       \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n       \"Cut data in pieces with these shapes: after header:(13992, 500), before header:(5995, 500)\\n\",\n       \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n-      \"Cut data in pieces with these shapes: after header:(41976, 500), before header:(17986, 500)\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13992, 500), before header:(5995, 500)\\n\",\n       \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n-      \"Cut data in pieces with these shapes: after header:(41976, 500), before header:(17986, 500)\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13992, 500), before header:(5995, 500)\\n\",\n       \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n-      \"Cut data in pieces with these shapes: after header:(41976, 500), before header:(17986, 500)\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13992, 500), before header:(5995, 500)\\n\",\n       \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n-      \"Cut data in pieces with these shapes: after header:(41976, 500), before header:(17986, 500)\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13992, 500), before header:(5995, 500)\\n\",\n       \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n-      \"Cut data in pieces with these shapes: after header:(41976, 500), before header:(17986, 500)\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13992, 500), before header:(5995, 500)\\n\",\n       \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n-      \"Cut data in pieces with these shapes: after header:(41976, 500), before header:(17986, 500)\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13992, 500), before header:(5995, 500)\\n\",\n       \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n-      \"Cut data in pieces with these shapes: after header:(41976, 500), before header:(17986, 500)\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13992, 500), before header:(5995, 500)\\n\",\n       \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n-      \"Cut data in pieces with these shapes: after header:(41976, 500), before header:(17986, 500)\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13992, 500), before header:(5995, 500)\\n\",\n       \"Model: \\\"sequential_7\\\"\\n\",\n       \"_________________________________________________________________\\n\",\n       \"Layer (type)                 Output Shape              Param #   \\n\",\n@@ -1266,114 +1266,114 @@\n       \"Non-trainable params: 462\\n\",\n       \"_________________________________________________________________\\n\",\n       \"Epoch 1/10\\n\",\n-      \"3748/3748 [==============================] - 39s 10ms/step - loss: 1.0490 - accuracy: 0.4976 - val_loss: 0.9595 - val_accuracy: 0.5373\\n\",\n+      \"1250/1250 [==============================] - 14s 10ms/step - loss: 1.1383 - accuracy: 0.4519 - val_loss: 1.0150 - val_accuracy: 0.5054\\n\",\n       \"Epoch 2/10\\n\",\n-      \"3748/3748 [==============================] - 36s 10ms/step - loss: 0.9635 - accuracy: 0.5451 - val_loss: 0.9196 - val_accuracy: 0.5643\\n\",\n+      \"1250/1250 [==============================] - 12s 10ms/step - loss: 1.0338 - accuracy: 0.4997 - val_loss: 0.9683 - val_accuracy: 0.5324\\n\",\n       \"Epoch 3/10\\n\",\n-      \"3748/3748 [==============================] - 36s 10ms/step - loss: 0.9311 - accuracy: 0.5653 - val_loss: 0.8903 - val_accuracy: 0.5806\\n\",\n+      \"1250/1250 [==============================] - 12s 10ms/step - loss: 1.0045 - accuracy: 0.5167 - val_loss: 0.9456 - val_accuracy: 0.5447\\n\",\n       \"Epoch 4/10\\n\",\n-      \"3748/3748 [==============================] - 36s 10ms/step - loss: 0.9080 - accuracy: 0.5800 - val_loss: 0.8785 - val_accuracy: 0.5909\\n\",\n+      \"1250/1250 [==============================] - 12s 10ms/step - loss: 0.9888 - accuracy: 0.5278 - val_loss: 0.9366 - val_accuracy: 0.5508\\n\",\n       \"Epoch 5/10\\n\",\n-      \"3748/3748 [==============================] - 36s 10ms/step - loss: 0.8934 - accuracy: 0.5880 - val_loss: 0.8632 - val_accuracy: 0.5973\\n\",\n+      \"1250/1250 [==============================] - 12s 10ms/step - loss: 0.9750 - accuracy: 0.5370 - val_loss: 0.9362 - val_accuracy: 0.5566\\n\",\n       \"Epoch 6/10\\n\",\n-      \"3748/3748 [==============================] - 36s 10ms/step - loss: 0.8827 - accuracy: 0.5932 - val_loss: 0.8529 - val_accuracy: 0.6031\\n\",\n+      \"1250/1250 [==============================] - 12s 10ms/step - loss: 0.9634 - accuracy: 0.5452 - val_loss: 0.9317 - val_accuracy: 0.5615\\n\",\n       \"Epoch 7/10\\n\",\n-      \"3748/3748 [==============================] - 36s 10ms/step - loss: 0.8736 - accuracy: 0.5990 - val_loss: 0.8553 - val_accuracy: 0.6024\\n\",\n+      \"1250/1250 [==============================] - 12s 10ms/step - loss: 0.9553 - accuracy: 0.5512 - val_loss: 0.9164 - val_accuracy: 0.5691\\n\",\n       \"Epoch 8/10\\n\",\n-      \"3748/3748 [==============================] - 36s 10ms/step - loss: 0.8643 - accuracy: 0.6047 - val_loss: 0.8443 - val_accuracy: 0.6103\\n\",\n+      \"1250/1250 [==============================] - 13s 10ms/step - loss: 0.9445 - accuracy: 0.5571 - val_loss: 0.9143 - val_accuracy: 0.5707\\n\",\n       \"Epoch 9/10\\n\",\n-      \"3748/3748 [==============================] - 36s 10ms/step - loss: 0.8554 - accuracy: 0.6086 - val_loss: 0.8444 - val_accuracy: 0.6090\\n\",\n+      \"1250/1250 [==============================] - 13s 10ms/step - loss: 0.9353 - accuracy: 0.5645 - val_loss: 0.9055 - val_accuracy: 0.5777\\n\",\n       \"Epoch 10/10\\n\",\n-      \"3748/3748 [==============================] - 37s 10ms/step - loss: 0.8466 - accuracy: 0.6138 - val_loss: 0.8466 - val_accuracy: 0.6098\\n\",\n+      \"1250/1250 [==============================] - 12s 10ms/step - loss: 0.9279 - accuracy: 0.5685 - val_loss: 0.8948 - val_accuracy: 0.5803\\n\",\n       \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n       \"Cut data in pieces with these shapes: after header:(13992, 500), before header:(5995, 500)\\n\",\n       \"Confusion matrix:\\n\",\n       \"H V P M \\n\",\n-      \"[[4610   64  163  117]\\n\",\n-      \" [ 267 1615 1606 1612]\\n\",\n-      \" [ 381  838 2744 1008]\\n\",\n-      \" [ 226 1044  915 2777]]\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0101: 0.7477860609396108\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0011: 0.7004552959423626\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0110: 0.7271226297093111\\n\",\n-      \"Test accuracy: 0.5876819932956422\\n\",\n+      \"[[4679   57  136   82]\\n\",\n+      \" [ 405 1809 1719 1167]\\n\",\n+      \" [ 575 1144 2622  630]\\n\",\n+      \" [ 393 1399  962 2208]]\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0101: 0.730224646019913\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0011: 0.6690348726672337\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0110: 0.7332766298093761\\n\",\n+      \"Test accuracy: 0.5662680742482614\\n\",\n       \"\\n\",\n       \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n       \"Cut data in pieces with these shapes: after header:(13992, 500), before header:(5996, 500)\\n\",\n       \"Confusion matrix:\\n\",\n       \"H V P M \\n\",\n-      \"[[4538   77  217  122]\\n\",\n-      \" [ 208 1621 1628 1644]\\n\",\n-      \" [ 360  813 2882  916]\\n\",\n-      \" [ 211 1045  949 2757]]\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0101: 0.7536521913147889\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0011: 0.6978186912147288\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0110: 0.729037422453472\\n\",\n-      \"Test accuracy: 0.5902541524914949\\n\",\n+      \"[[4581   59  218   96]\\n\",\n+      \" [ 362 1812 1888 1039]\\n\",\n+      \" [ 541 1066 2846  518]\\n\",\n+      \" [ 400 1435 1119 2008]]\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0101: 0.7244346607964779\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0011: 0.6656493896337803\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0110: 0.7352911747048229\\n\",\n+      \"Test accuracy: 0.5626876125675405\\n\",\n       \"\\n\",\n       \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n       \"Cut data in pieces with these shapes: after header:(13992, 500), before header:(5995, 500)\\n\",\n       \"Confusion matrix:\\n\",\n       \"H V P M \\n\",\n-      \"[[4609   65  165  115]\\n\",\n-      \" [ 243 1628 1607 1622]\\n\",\n-      \" [ 343  818 2872  938]\\n\",\n-      \" [ 224  983  906 2849]]\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0101: 0.7540401260819533\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0011: 0.705958873267624\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0110: 0.7365787762045329\\n\",\n-      \"Test accuracy: 0.5982888877770551\\n\",\n+      \"[[4688   48  138   80]\\n\",\n+      \" [ 392 1767 1852 1089]\\n\",\n+      \" [ 547 1065 2834  525]\\n\",\n+      \" [ 438 1371 1052 2101]]\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0101: 0.7272226947515885\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0011: 0.6707860109070896\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0110: 0.7417321258818231\\n\",\n+      \"Test accuracy: 0.5698704157702507\\n\",\n       \"\\n\",\n       \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n       \"Cut data in pieces with these shapes: after header:(13992, 500), before header:(5995, 500)\\n\",\n       \"Confusion matrix:\\n\",\n       \"H V P M \\n\",\n-      \"[[4632   57  157  108]\\n\",\n-      \" [ 235 1609 1555 1701]\\n\",\n-      \" [ 365  869 2706 1031]\\n\",\n-      \" [ 233 1030  913 2786]]\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0101: 0.7497873617851604\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0011: 0.6989042877870616\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0110: 0.7253714914694551\\n\",\n-      \"Test accuracy: 0.5870315705208385\\n\",\n+      \"[[4665   55  141   93]\\n\",\n+      \" [ 342 1867 1703 1188]\\n\",\n+      \" [ 530 1156 2622  663]\\n\",\n+      \" [ 382 1402  936 2242]]\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0101: 0.7333266623305148\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0011: 0.6700355230900085\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0110: 0.7369790363736428\\n\",\n+      \"Test accuracy: 0.5701706108970831\\n\",\n       \"\\n\",\n       \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n       \"Cut data in pieces with these shapes: after header:(13992, 500), before header:(5995, 500)\\n\",\n       \"Confusion matrix:\\n\",\n       \"H V P M \\n\",\n-      \"[[4613   53  161  127]\\n\",\n-      \" [ 285 1590 1574 1651]\\n\",\n-      \" [ 394  830 2791  956]\\n\",\n-      \" [ 251  930  875 2906]]\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0101: 0.7522889878420974\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0011: 0.7039075399009356\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0110: 0.7345774753589833\\n\",\n-      \"Test accuracy: 0.5953870015510082\\n\",\n+      \"[[4682   52  139   81]\\n\",\n+      \" [ 450 1817 1690 1143]\\n\",\n+      \" [ 578 1114 2673  606]\\n\",\n+      \" [ 434 1313  958 2257]]\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0101: 0.7305748736678841\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0011: 0.6751888727672988\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0110: 0.7378796217541402\\n\",\n+      \"Test accuracy: 0.5718216840946615\\n\",\n       \"\\n\",\n       \"\\n\",\n       \"\\n\",\n-      \"created a json file of the test accuracies at ./test_accuracy_20220704-1426.json\\n\",\n+      \"created a json file of the test accuracies at /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/result_vary_raining_data_20220704-1556.json\\n\",\n       \"------------- dataset 0: FPGA2.5cm with max_train_files=10 ----------------------------------\\n\",\n       \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n       \"Cut data in pieces with these shapes: after header:(13992, 500), before header:(5995, 500)\\n\",\n       \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n-      \"Cut data in pieces with these shapes: after header:(41976, 500), before header:(17986, 500)\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13992, 500), before header:(5995, 500)\\n\",\n       \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n-      \"Cut data in pieces with these shapes: after header:(41976, 500), before header:(17986, 500)\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13992, 500), before header:(5995, 500)\\n\",\n       \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n-      \"Cut data in pieces with these shapes: after header:(41976, 500), before header:(17986, 500)\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13992, 500), before header:(5995, 500)\\n\",\n       \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n-      \"Cut data in pieces with these shapes: after header:(41976, 500), before header:(17986, 500)\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13992, 500), before header:(5995, 500)\\n\",\n       \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n-      \"Cut data in pieces with these shapes: after header:(41976, 500), before header:(17986, 500)\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13992, 500), before header:(5995, 500)\\n\",\n       \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n-      \"Cut data in pieces with these shapes: after header:(41976, 500), before header:(17986, 500)\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13992, 500), before header:(5995, 500)\\n\",\n       \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n-      \"Cut data in pieces with these shapes: after header:(41976, 500), before header:(17986, 500)\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13992, 500), before header:(5995, 500)\\n\",\n       \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n-      \"Cut data in pieces with these shapes: after header:(41976, 500), before header:(17986, 500)\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13992, 500), before header:(5995, 500)\\n\",\n       \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n-      \"Cut data in pieces with these shapes: after header:(41976, 500), before header:(17986, 500)\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13992, 500), before header:(5995, 500)\\n\",\n       \"Model: \\\"sequential_8\\\"\\n\",\n       \"_________________________________________________________________\\n\",\n       \"Layer (type)                 Output Shape              Param #   \\n\",\n@@ -1417,116 +1417,116 @@\n       \"Non-trainable params: 462\\n\",\n       \"_________________________________________________________________\\n\",\n       \"Epoch 1/10\\n\",\n-      \"4217/4217 [==============================] - 44s 10ms/step - loss: 1.0698 - accuracy: 0.4825 - val_loss: 0.9650 - val_accuracy: 0.5320\\n\",\n+      \"1406/1406 [==============================] - 16s 10ms/step - loss: 1.1296 - accuracy: 0.4592 - val_loss: 1.0243 - val_accuracy: 0.4990\\n\",\n       \"Epoch 2/10\\n\",\n-      \"4217/4217 [==============================] - 41s 10ms/step - loss: 0.9794 - accuracy: 0.5296 - val_loss: 0.9179 - val_accuracy: 0.5542\\n\",\n+      \"1406/1406 [==============================] - 14s 10ms/step - loss: 1.0293 - accuracy: 0.5013 - val_loss: 0.9941 - val_accuracy: 0.5133\\n\",\n       \"Epoch 3/10\\n\",\n-      \"4217/4217 [==============================] - 40s 10ms/step - loss: 0.9459 - accuracy: 0.5506 - val_loss: 0.8990 - val_accuracy: 0.5673\\n\",\n+      \"1406/1406 [==============================] - 14s 10ms/step - loss: 1.0044 - accuracy: 0.5128 - val_loss: 0.9682 - val_accuracy: 0.5275\\n\",\n       \"Epoch 4/10\\n\",\n-      \"4217/4217 [==============================] - 40s 9ms/step - loss: 0.9305 - accuracy: 0.5581 - val_loss: 0.8880 - val_accuracy: 0.5745\\n\",\n+      \"1406/1406 [==============================] - 14s 10ms/step - loss: 0.9881 - accuracy: 0.5228 - val_loss: 0.9572 - val_accuracy: 0.5331\\n\",\n       \"Epoch 5/10\\n\",\n-      \"4217/4217 [==============================] - 40s 10ms/step - loss: 0.9138 - accuracy: 0.5707 - val_loss: 0.8786 - val_accuracy: 0.5825\\n\",\n+      \"1406/1406 [==============================] - 14s 10ms/step - loss: 0.9713 - accuracy: 0.5357 - val_loss: 0.9348 - val_accuracy: 0.5477\\n\",\n       \"Epoch 6/10\\n\",\n-      \"4217/4217 [==============================] - 41s 10ms/step - loss: 0.8961 - accuracy: 0.5839 - val_loss: 0.8615 - val_accuracy: 0.5967\\n\",\n+      \"1406/1406 [==============================] - 13s 10ms/step - loss: 0.9598 - accuracy: 0.5425 - val_loss: 0.9200 - val_accuracy: 0.5573\\n\",\n       \"Epoch 7/10\\n\",\n-      \"4217/4217 [==============================] - 41s 10ms/step - loss: 0.8818 - accuracy: 0.5929 - val_loss: 0.8539 - val_accuracy: 0.6015\\n\",\n+      \"1406/1406 [==============================] - 14s 10ms/step - loss: 0.9484 - accuracy: 0.5508 - val_loss: 0.9120 - val_accuracy: 0.5642\\n\",\n       \"Epoch 8/10\\n\",\n-      \"4217/4217 [==============================] - 41s 10ms/step - loss: 0.8714 - accuracy: 0.5983 - val_loss: 0.8437 - val_accuracy: 0.6061\\n\",\n+      \"1406/1406 [==============================] - 14s 10ms/step - loss: 0.9412 - accuracy: 0.5551 - val_loss: 0.9077 - val_accuracy: 0.5686\\n\",\n       \"Epoch 9/10\\n\",\n-      \"4217/4217 [==============================] - 41s 10ms/step - loss: 0.8612 - accuracy: 0.6046 - val_loss: 0.8487 - val_accuracy: 0.6052\\n\",\n+      \"1406/1406 [==============================] - 14s 10ms/step - loss: 0.9357 - accuracy: 0.5579 - val_loss: 0.9026 - val_accuracy: 0.5728\\n\",\n       \"Epoch 10/10\\n\",\n-      \"4217/4217 [==============================] - 41s 10ms/step - loss: 0.8520 - accuracy: 0.6094 - val_loss: 0.8403 - val_accuracy: 0.6111\\n\",\n+      \"1406/1406 [==============================] - 14s 10ms/step - loss: 0.9312 - accuracy: 0.5607 - val_loss: 0.8970 - val_accuracy: 0.5683\\n\",\n       \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n       \"Cut data in pieces with these shapes: after header:(13992, 500), before header:(5995, 500)\\n\",\n       \"Confusion matrix:\\n\",\n       \"H V P M \\n\",\n-      \"[[4557   84  161  152]\\n\",\n-      \" [ 228 1826 1167 1879]\\n\",\n-      \" [ 316 1216 2245 1194]\\n\",\n-      \" [ 175 1030  590 3167]]\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0101: 0.7595437034072147\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0011: 0.6950017511382398\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0110: 0.7257217191174263\\n\",\n-      \"Test accuracy: 0.5901335868314405\\n\",\n+      \"[[4515   56  206  177]\\n\",\n+      \" [ 259 1346 1394 2101]\\n\",\n+      \" [ 364 1188 2327 1092]\\n\",\n+      \" [ 246  987  682 3047]]\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0101: 0.7451343373192575\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0011: 0.6666333116525742\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0110: 0.7124631010156601\\n\",\n+      \"Test accuracy: 0.562115374993746\\n\",\n       \"\\n\",\n       \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n       \"Cut data in pieces with these shapes: after header:(13992, 500), before header:(5996, 500)\\n\",\n       \"Confusion matrix:\\n\",\n       \"H V P M \\n\",\n-      \"[[4471   91  218  174]\\n\",\n-      \" [ 162 1893 1258 1788]\\n\",\n-      \" [ 309 1222 2350 1090]\\n\",\n-      \" [ 182 1117  645 3018]]\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0101: 0.7586551931158695\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0011: 0.686411847108265\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0110: 0.7288373023814289\\n\",\n-      \"Test accuracy: 0.5869521713027817\\n\",\n+      \"[[4413   90  271  180]\\n\",\n+      \" [ 231 1504 1534 1832]\\n\",\n+      \" [ 352 1347 2406  866]\\n\",\n+      \" [ 226 1176  765 2795]]\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0101: 0.7378927356413848\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0011: 0.6538923354012407\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0110: 0.7206824094456674\\n\",\n+      \"Test accuracy: 0.5562337402441465\\n\",\n       \"\\n\",\n       \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n       \"Cut data in pieces with these shapes: after header:(13992, 500), before header:(5995, 500)\\n\",\n       \"Confusion matrix:\\n\",\n       \"H V P M \\n\",\n-      \"[[4550   83  175  146]\\n\",\n-      \" [ 202 1888 1202 1808]\\n\",\n-      \" [ 292 1250 2322 1107]\\n\",\n-      \" [ 207 1089  563 3103]]\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0101: 0.7618451993795967\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0011: 0.6913493770951118\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0110: 0.733877020063041\\n\",\n-      \"Test accuracy: 0.5935357982688748\\n\",\n+      \"[[4513   45  239  157]\\n\",\n+      \" [ 236 1426 1485 1953]\\n\",\n+      \" [ 359 1320 2384  908]\\n\",\n+      \" [ 248 1062  693 2959]]\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0101: 0.745234402361535\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0011: 0.6586281082703758\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0110: 0.7250712963426227\\n\",\n+      \"Test accuracy: 0.5644669034872667\\n\",\n       \"\\n\",\n       \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n       \"Cut data in pieces with these shapes: after header:(13992, 500), before header:(5995, 500)\\n\",\n       \"Confusion matrix:\\n\",\n       \"H V P M \\n\",\n-      \"[[4538   96  163  157]\\n\",\n-      \" [ 177 1869 1146 1908]\\n\",\n-      \" [ 300 1193 2210 1268]\\n\",\n-      \" [ 177 1057  554 3174]]\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0101: 0.7614449392104868\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0011: 0.6947515885325461\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0110: 0.7236703857507379\\n\",\n-      \"Test accuracy: 0.5899334567468855\\n\",\n+      \"[[4515   55  203  181]\\n\",\n+      \" [ 233 1417 1419 2031]\\n\",\n+      \" [ 348 1276 2299 1048]\\n\",\n+      \" [ 233 1004  671 3054]]\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0101: 0.7440336218542052\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0011: 0.6650322709761345\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0110: 0.7201681092710261\\n\",\n+      \"Test accuracy: 0.5646170010506829\\n\",\n       \"\\n\",\n       \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n       \"Cut data in pieces with these shapes: after header:(13992, 500), before header:(5995, 500)\\n\",\n       \"Confusion matrix:\\n\",\n       \"H V P M \\n\",\n-      \"[[4550   84  167  153]\\n\",\n-      \" [ 246 1811 1161 1882]\\n\",\n-      \" [ 343 1200 2265 1163]\\n\",\n-      \" [ 198  968  570 3226]]\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0101: 0.7610947115625156\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0011: 0.6962025316455697\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0110: 0.728673637864612\\n\",\n-      \"Test accuracy: 0.5929854405363486\\n\",\n+      \"[[4517   51  197  189]\\n\",\n+      \" [ 272 1412 1358 2058]\\n\",\n+      \" [ 384 1245 2276 1066]\\n\",\n+      \" [ 244  944  682 3092]]\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0101: 0.7444839145444538\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0011: 0.6688347425826787\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0110: 0.717116125481563\\n\",\n+      \"Test accuracy: 0.5652173913043478\\n\",\n       \"\\n\",\n       \"\\n\",\n       \"\\n\",\n-      \"created a json file of the test accuracies at ./test_accuracy_20220704-1426.json\\n\",\n+      \"created a json file of the test accuracies at /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/result_vary_raining_data_20220704-1556.json\\n\",\n       \"------------- dataset 0: FPGA2.5cm with max_train_files=11 ----------------------------------\\n\",\n       \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n       \"Cut data in pieces with these shapes: after header:(13992, 500), before header:(5995, 500)\\n\",\n       \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n-      \"Cut data in pieces with these shapes: after header:(41976, 500), before header:(17986, 500)\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13992, 500), before header:(5995, 500)\\n\",\n       \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n-      \"Cut data in pieces with these shapes: after header:(41976, 500), before header:(17986, 500)\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13992, 500), before header:(5995, 500)\\n\",\n       \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n-      \"Cut data in pieces with these shapes: after header:(41976, 500), before header:(17986, 500)\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13992, 500), before header:(5995, 500)\\n\",\n       \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n-      \"Cut data in pieces with these shapes: after header:(41976, 500), before header:(17986, 500)\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13992, 500), before header:(5995, 500)\\n\",\n       \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n-      \"Cut data in pieces with these shapes: after header:(41976, 500), before header:(17986, 500)\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13992, 500), before header:(5995, 500)\\n\",\n       \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n-      \"Cut data in pieces with these shapes: after header:(41976, 500), before header:(17986, 500)\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13992, 500), before header:(5995, 500)\\n\",\n       \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n-      \"Cut data in pieces with these shapes: after header:(41976, 500), before header:(17986, 500)\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13992, 500), before header:(5995, 500)\\n\",\n       \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n-      \"Cut data in pieces with these shapes: after header:(41976, 500), before header:(17986, 500)\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13992, 500), before header:(5995, 500)\\n\",\n       \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n-      \"Cut data in pieces with these shapes: after header:(41976, 500), before header:(17986, 500)\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13992, 500), before header:(5995, 500)\\n\",\n       \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n-      \"Cut data in pieces with these shapes: after header:(41976, 500), before header:(17987, 500)\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13992, 500), before header:(5996, 500)\\n\",\n       \"Model: \\\"sequential_9\\\"\\n\",\n       \"_________________________________________________________________\\n\",\n       \"Layer (type)                 Output Shape              Param #   \\n\",\n@@ -1570,118 +1570,118 @@\n       \"Non-trainable params: 462\\n\",\n       \"_________________________________________________________________\\n\",\n       \"Epoch 1/10\\n\",\n-      \"4685/4685 [==============================] - 47s 10ms/step - loss: 1.0519 - accuracy: 0.4924 - val_loss: 0.9517 - val_accuracy: 0.5434\\n\",\n+      \"1562/1562 [==============================] - 17s 10ms/step - loss: 1.1241 - accuracy: 0.4572 - val_loss: 1.0025 - val_accuracy: 0.5054\\n\",\n       \"Epoch 2/10\\n\",\n-      \"4685/4685 [==============================] - 45s 10ms/step - loss: 0.9601 - accuracy: 0.5409 - val_loss: 0.9160 - val_accuracy: 0.5628\\n\",\n+      \"1562/1562 [==============================] - 15s 10ms/step - loss: 1.0156 - accuracy: 0.5131 - val_loss: 0.9570 - val_accuracy: 0.5473\\n\",\n       \"Epoch 3/10\\n\",\n-      \"4685/4685 [==============================] - 45s 10ms/step - loss: 0.9335 - accuracy: 0.5583 - val_loss: 0.8905 - val_accuracy: 0.5783\\n\",\n+      \"1562/1562 [==============================] - 15s 10ms/step - loss: 0.9865 - accuracy: 0.5294 - val_loss: 0.9355 - val_accuracy: 0.5533\\n\",\n       \"Epoch 4/10\\n\",\n-      \"4685/4685 [==============================] - 43s 9ms/step - loss: 0.9142 - accuracy: 0.5697 - val_loss: 0.8742 - val_accuracy: 0.5901\\n\",\n+      \"1562/1562 [==============================] - 16s 10ms/step - loss: 0.9682 - accuracy: 0.5411 - val_loss: 0.9177 - val_accuracy: 0.5653\\n\",\n       \"Epoch 5/10\\n\",\n-      \"4685/4685 [==============================] - 43s 9ms/step - loss: 0.8936 - accuracy: 0.5855 - val_loss: 0.8617 - val_accuracy: 0.5965\\n\",\n+      \"1562/1562 [==============================] - 16s 10ms/step - loss: 0.9541 - accuracy: 0.5479 - val_loss: 0.9148 - val_accuracy: 0.5653\\n\",\n       \"Epoch 6/10\\n\",\n-      \"4685/4685 [==============================] - 44s 9ms/step - loss: 0.8817 - accuracy: 0.5929 - val_loss: 0.8580 - val_accuracy: 0.6007\\n\",\n+      \"1562/1562 [==============================] - 16s 10ms/step - loss: 0.9459 - accuracy: 0.5523 - val_loss: 0.9091 - val_accuracy: 0.5704\\n\",\n       \"Epoch 7/10\\n\",\n-      \"4685/4685 [==============================] - 44s 9ms/step - loss: 0.8716 - accuracy: 0.5991 - val_loss: 0.8472 - val_accuracy: 0.6060\\n\",\n+      \"1562/1562 [==============================] - 16s 10ms/step - loss: 0.9413 - accuracy: 0.5536 - val_loss: 0.9000 - val_accuracy: 0.5737\\n\",\n       \"Epoch 8/10\\n\",\n-      \"4685/4685 [==============================] - 42s 9ms/step - loss: 0.8619 - accuracy: 0.6047 - val_loss: 0.8431 - val_accuracy: 0.6103\\n\",\n+      \"1562/1562 [==============================] - 16s 10ms/step - loss: 0.9359 - accuracy: 0.5579 - val_loss: 0.8963 - val_accuracy: 0.5751\\n\",\n       \"Epoch 9/10\\n\",\n-      \"4685/4685 [==============================] - 41s 9ms/step - loss: 0.8539 - accuracy: 0.6098 - val_loss: 0.8408 - val_accuracy: 0.6113\\n\",\n+      \"1562/1562 [==============================] - 15s 10ms/step - loss: 0.9288 - accuracy: 0.5620 - val_loss: 0.8852 - val_accuracy: 0.5810\\n\",\n       \"Epoch 10/10\\n\",\n-      \"4685/4685 [==============================] - 42s 9ms/step - loss: 0.8450 - accuracy: 0.6142 - val_loss: 0.8378 - val_accuracy: 0.6135\\n\",\n+      \"1562/1562 [==============================] - 16s 10ms/step - loss: 0.9221 - accuracy: 0.5661 - val_loss: 0.8893 - val_accuracy: 0.5795\\n\",\n       \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n       \"Cut data in pieces with these shapes: after header:(13992, 500), before header:(5995, 500)\\n\",\n       \"Confusion matrix:\\n\",\n       \"H V P M \\n\",\n-      \"[[4523   89  181  161]\\n\",\n-      \" [ 202 1654 1481 1763]\\n\",\n-      \" [ 309 1038 2535 1089]\\n\",\n-      \" [ 170 1020  764 3008]]\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0101: 0.7501375894331316\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0011: 0.6936508730674938\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0110: 0.7289738329914445\\n\",\n-      \"Test accuracy: 0.5863811477460349\\n\",\n+      \"[[4635   20  171  128]\\n\",\n+      \" [ 336 1060 1630 2074]\\n\",\n+      \" [ 487  839 2550 1095]\\n\",\n+      \" [ 317  722  856 3067]]\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0101: 0.7387802071346375\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0011: 0.6813929053885025\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0110: 0.7117626457197178\\n\",\n+      \"Test accuracy: 0.5659678791214289\\n\",\n       \"\\n\",\n       \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n       \"Cut data in pieces with these shapes: after header:(13992, 500), before header:(5996, 500)\\n\",\n       \"Confusion matrix:\\n\",\n       \"H V P M \\n\",\n-      \"[[4409   98  258  189]\\n\",\n-      \" [ 147 1697 1528 1729]\\n\",\n-      \" [ 281  998 2679 1013]\\n\",\n-      \" [ 154  991  825 2992]]\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0101: 0.7522513508104863\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0011: 0.6934160496297779\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0110: 0.7327396437862718\\n\",\n-      \"Test accuracy: 0.589203522113268\\n\",\n+      \"[[4560   18  233  143]\\n\",\n+      \" [ 289 1116 1694 2002]\\n\",\n+      \" [ 450  898 2623 1000]\\n\",\n+      \" [ 279  783  946 2954]]\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0101: 0.7364918951370822\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0011: 0.6757054232539523\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0110: 0.7137782669601761\\n\",\n+      \"Test accuracy: 0.5629877926756054\\n\",\n       \"\\n\",\n       \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n       \"Cut data in pieces with these shapes: after header:(13992, 500), before header:(5995, 500)\\n\",\n       \"Confusion matrix:\\n\",\n       \"H V P M \\n\",\n-      \"[[4488  101  195  170]\\n\",\n-      \" [ 173 1690 1490 1747]\\n\",\n-      \" [ 271 1011 2689 1000]\\n\",\n-      \" [ 171  953  758 3080]]\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0101: 0.7561414919697803\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0011: 0.699404612998449\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0110: 0.7399309551208285\\n\",\n-      \"Test accuracy: 0.5977385300445289\\n\",\n+      \"[[4627   22  183  122]\\n\",\n+      \" [ 305 1056 1692 2047]\\n\",\n+      \" [ 468  882 2624  997]\\n\",\n+      \" [ 326  705  896 3035]]\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0101: 0.737729524190724\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0011: 0.6785410516835944\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0110: 0.718667133636864\\n\",\n+      \"Test accuracy: 0.5674688547555912\\n\",\n       \"\\n\",\n       \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n       \"Cut data in pieces with these shapes: after header:(13992, 500), before header:(5995, 500)\\n\",\n       \"Confusion matrix:\\n\",\n       \"H V P M \\n\",\n-      \"[[4502   87  209  156]\\n\",\n-      \" [ 183 1709 1435 1773]\\n\",\n-      \" [ 272 1046 2543 1110]\\n\",\n-      \" [ 173 1047  743 2999]]\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0101: 0.7531895732225947\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0011: 0.6942512633211587\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0110: 0.7286236053434733\\n\",\n-      \"Test accuracy: 0.5880322209436134\\n\",\n+      \"[[4647   19  154  134]\\n\",\n+      \" [ 298 1053 1635 2114]\\n\",\n+      \" [ 441  878 2525 1127]\\n\",\n+      \" [ 282  773  813 3094]]\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0101: 0.7405313453744934\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0011: 0.6792415069795367\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0110: 0.7128633611847701\\n\",\n+      \"Test accuracy: 0.5663181067694001\\n\",\n       \"\\n\",\n       \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n       \"Cut data in pieces with these shapes: after header:(13992, 500), before header:(5995, 500)\\n\",\n       \"Confusion matrix:\\n\",\n       \"H V P M \\n\",\n-      \"[[4520   94  180  160]\\n\",\n-      \" [ 215 1707 1428 1750]\\n\",\n-      \" [ 323 1011 2569 1068]\\n\",\n-      \" [ 164  935  783 3080]]\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0101: 0.753689898433982\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0011: 0.7022564667033572\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0110: 0.7324260769500175\\n\",\n-      \"Test accuracy: 0.5941862210436784\\n\",\n+      \"[[4643   15  165  131]\\n\",\n+      \" [ 370 1043 1611 2076]\\n\",\n+      \" [ 504  831 2553 1083]\\n\",\n+      \" [ 332  690  851 3089]]\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0101: 0.7386301095712213\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0011: 0.6827938159803872\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0110: 0.712112873367689\\n\",\n+      \"Test accuracy: 0.5667683994596487\\n\",\n       \"\\n\",\n       \"\\n\",\n       \"\\n\",\n-      \"created a json file of the test accuracies at ./test_accuracy_20220704-1426.json\\n\",\n+      \"created a json file of the test accuracies at /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/result_vary_raining_data_20220704-1556.json\\n\",\n       \"------------- dataset 0: FPGA2.5cm with max_train_files=12 ----------------------------------\\n\",\n       \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n       \"Cut data in pieces with these shapes: after header:(13992, 500), before header:(5995, 500)\\n\",\n       \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n-      \"Cut data in pieces with these shapes: after header:(41976, 500), before header:(17986, 500)\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13992, 500), before header:(5995, 500)\\n\",\n       \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n-      \"Cut data in pieces with these shapes: after header:(41976, 500), before header:(17986, 500)\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13992, 500), before header:(5995, 500)\\n\",\n       \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n-      \"Cut data in pieces with these shapes: after header:(41976, 500), before header:(17986, 500)\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13992, 500), before header:(5995, 500)\\n\",\n       \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n-      \"Cut data in pieces with these shapes: after header:(41976, 500), before header:(17986, 500)\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13992, 500), before header:(5995, 500)\\n\",\n       \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n-      \"Cut data in pieces with these shapes: after header:(41976, 500), before header:(17986, 500)\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13992, 500), before header:(5995, 500)\\n\",\n       \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n-      \"Cut data in pieces with these shapes: after header:(41976, 500), before header:(17986, 500)\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13992, 500), before header:(5995, 500)\\n\",\n       \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n-      \"Cut data in pieces with these shapes: after header:(41976, 500), before header:(17986, 500)\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13992, 500), before header:(5995, 500)\\n\",\n       \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n-      \"Cut data in pieces with these shapes: after header:(41976, 500), before header:(17986, 500)\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13992, 500), before header:(5995, 500)\\n\",\n       \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n-      \"Cut data in pieces with these shapes: after header:(41976, 500), before header:(17986, 500)\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13992, 500), before header:(5995, 500)\\n\",\n       \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n-      \"Cut data in pieces with these shapes: after header:(41976, 500), before header:(17987, 500)\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13992, 500), before header:(5996, 500)\\n\",\n       \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n-      \"Cut data in pieces with these shapes: after header:(41976, 500), before header:(17987, 500)\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13992, 500), before header:(5996, 500)\\n\",\n       \"Model: \\\"sequential_10\\\"\\n\",\n       \"_________________________________________________________________\\n\",\n       \"Layer (type)                 Output Shape              Param #   \\n\",\n@@ -1725,120 +1725,120 @@\n       \"Non-trainable params: 462\\n\",\n       \"_________________________________________________________________\\n\",\n       \"Epoch 1/10\\n\",\n-      \"5153/5153 [==============================] - 47s 9ms/step - loss: 1.0346 - accuracy: 0.5090 - val_loss: 0.9205 - val_accuracy: 0.5656\\n\",\n+      \"1718/1718 [==============================] - 19s 10ms/step - loss: 1.1595 - accuracy: 0.4368 - val_loss: 1.0369 - val_accuracy: 0.4898\\n\",\n       \"Epoch 2/10\\n\",\n-      \"5153/5153 [==============================] - 45s 9ms/step - loss: 0.9432 - accuracy: 0.5607 - val_loss: 0.8846 - val_accuracy: 0.5845\\n\",\n+      \"1718/1718 [==============================] - 17s 10ms/step - loss: 1.0418 - accuracy: 0.4954 - val_loss: 1.0046 - val_accuracy: 0.5048\\n\",\n       \"Epoch 3/10\\n\",\n-      \"5153/5153 [==============================] - 45s 9ms/step - loss: 0.9172 - accuracy: 0.5748 - val_loss: 0.8712 - val_accuracy: 0.5974\\n\",\n+      \"1718/1718 [==============================] - 17s 10ms/step - loss: 1.0138 - accuracy: 0.5078 - val_loss: 0.9808 - val_accuracy: 0.5190\\n\",\n       \"Epoch 4/10\\n\",\n-      \"5153/5153 [==============================] - 45s 9ms/step - loss: 0.9032 - accuracy: 0.5826 - val_loss: 0.8648 - val_accuracy: 0.5978\\n\",\n+      \"1718/1718 [==============================] - 17s 10ms/step - loss: 0.9868 - accuracy: 0.5293 - val_loss: 0.9493 - val_accuracy: 0.5517\\n\",\n       \"Epoch 5/10\\n\",\n-      \"5153/5153 [==============================] - 46s 9ms/step - loss: 0.8917 - accuracy: 0.5895 - val_loss: 0.8529 - val_accuracy: 0.6076\\n\",\n+      \"1718/1718 [==============================] - 17s 10ms/step - loss: 0.9662 - accuracy: 0.5440 - val_loss: 0.9242 - val_accuracy: 0.5589\\n\",\n       \"Epoch 6/10\\n\",\n-      \"5153/5153 [==============================] - 47s 9ms/step - loss: 0.8797 - accuracy: 0.5974 - val_loss: 0.8504 - val_accuracy: 0.6073\\n\",\n+      \"1718/1718 [==============================] - 17s 10ms/step - loss: 0.9571 - accuracy: 0.5487 - val_loss: 0.9130 - val_accuracy: 0.5634\\n\",\n       \"Epoch 7/10\\n\",\n-      \"5153/5153 [==============================] - 47s 9ms/step - loss: 0.8690 - accuracy: 0.6039 - val_loss: 0.8428 - val_accuracy: 0.6140\\n\",\n+      \"1718/1718 [==============================] - 17s 10ms/step - loss: 0.9504 - accuracy: 0.5526 - val_loss: 0.9054 - val_accuracy: 0.5664\\n\",\n       \"Epoch 8/10\\n\",\n-      \"5153/5153 [==============================] - 47s 9ms/step - loss: 0.8586 - accuracy: 0.6089 - val_loss: 0.8381 - val_accuracy: 0.6162\\n\",\n+      \"1718/1718 [==============================] - 17s 10ms/step - loss: 0.9439 - accuracy: 0.5554 - val_loss: 0.9029 - val_accuracy: 0.5712\\n\",\n       \"Epoch 9/10\\n\",\n-      \"5153/5153 [==============================] - 47s 9ms/step - loss: 0.8501 - accuracy: 0.6138 - val_loss: 0.8353 - val_accuracy: 0.6185\\n\",\n+      \"1718/1718 [==============================] - 17s 10ms/step - loss: 0.9383 - accuracy: 0.5572 - val_loss: 0.8945 - val_accuracy: 0.5757\\n\",\n       \"Epoch 10/10\\n\",\n-      \"5153/5153 [==============================] - 47s 9ms/step - loss: 0.8414 - accuracy: 0.6182 - val_loss: 0.8311 - val_accuracy: 0.6206\\n\",\n+      \"1718/1718 [==============================] - 17s 10ms/step - loss: 0.9355 - accuracy: 0.5601 - val_loss: 0.8941 - val_accuracy: 0.5755\\n\",\n       \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n       \"Cut data in pieces with these shapes: after header:(13992, 500), before header:(5995, 500)\\n\",\n       \"Confusion matrix:\\n\",\n       \"H V P M \\n\",\n-      \"[[4578   62  175  139]\\n\",\n-      \" [ 254 1824 1409 1613]\\n\",\n-      \" [ 350 1037 2638  946]\\n\",\n-      \" [ 205 1032  853 2872]]\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0101: 0.7545904838144795\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0011: 0.7018061740131085\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0110: 0.7355781257817582\\n\",\n-      \"Test accuracy: 0.5959873918046731\\n\",\n+      \"[[4583   51  225   95]\\n\",\n+      \" [ 315 1448 2148 1189]\\n\",\n+      \" [ 419  921 3183  448]\\n\",\n+      \" [ 313 1252 1313 2084]]\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0101: 0.7196177515385\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0011: 0.671686596287587\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0110: 0.7392304998248862\\n\",\n+      \"Test accuracy: 0.5652674238254866\\n\",\n       \"\\n\",\n       \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n       \"Cut data in pieces with these shapes: after header:(13992, 500), before header:(5996, 500)\\n\",\n       \"Confusion matrix:\\n\",\n       \"H V P M \\n\",\n-      \"[[4507   85  223  139]\\n\",\n-      \" [ 184 1767 1618 1532]\\n\",\n-      \" [ 303  988 2858  822]\\n\",\n-      \" [ 203 1068  954 2737]]\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0101: 0.7502001200720432\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0011: 0.6961176706023614\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0110: 0.7412947768661197\\n\",\n-      \"Test accuracy: 0.5938062837702621\\n\",\n+      \"[[4462   55  316  121]\\n\",\n+      \" [ 265 1437 2316 1083]\\n\",\n+      \" [ 370  894 3337  370]\\n\",\n+      \" [ 292 1354 1446 1870]]\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0101: 0.7118771262757655\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0011: 0.6624974984990994\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0110: 0.7368921352811687\\n\",\n+      \"Test accuracy: 0.5556333800280168\\n\",\n       \"\\n\",\n       \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n       \"Cut data in pieces with these shapes: after header:(13992, 500), before header:(5995, 500)\\n\",\n       \"Confusion matrix:\\n\",\n       \"H V P M \\n\",\n-      \"[[4567   63  188  136]\\n\",\n-      \" [ 207 1791 1561 1541]\\n\",\n-      \" [ 300 1031 2784  856]\\n\",\n-      \" [ 209 1052  870 2831]]\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0101: 0.7531895732225947\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0011: 0.6989042877870616\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0110: 0.7459848901786161\\n\",\n-      \"Test accuracy: 0.5990393755941362\\n\",\n+      \"[[4548   39  263  104]\\n\",\n+      \" [ 302 1430 2239 1129]\\n\",\n+      \" [ 389  853 3324  405]\\n\",\n+      \" [ 331 1299 1377 1955]]\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0101: 0.717316255566118\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0011: 0.6694351328363436\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0110: 0.7396807925151349\\n\",\n+      \"Test accuracy: 0.5632160904587982\\n\",\n       \"\\n\",\n       \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n       \"Cut data in pieces with these shapes: after header:(13992, 500), before header:(5995, 500)\\n\",\n       \"Confusion matrix:\\n\",\n       \"H V P M \\n\",\n-      \"[[4592   63  181  118]\\n\",\n-      \" [ 215 1837 1388 1660]\\n\",\n-      \" [ 304 1023 2624 1020]\\n\",\n-      \" [ 187 1056  823 2896]]\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0101: 0.7579926952519137\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0011: 0.7039575724220744\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0110: 0.7337269224996248\\n\",\n-      \"Test accuracy: 0.5978385950868065\\n\",\n+      \"[[4579   40  234  101]\\n\",\n+      \" [ 287 1437 2188 1188]\\n\",\n+      \" [ 379  930 3192  470]\\n\",\n+      \" [ 300 1305 1297 2060]]\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0101: 0.7191674588482514\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0011: 0.6685345474558463\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0110: 0.7398308900785511\\n\",\n+      \"Test accuracy: 0.5637664481913244\\n\",\n       \"\\n\",\n       \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n       \"Cut data in pieces with these shapes: after header:(13992, 500), before header:(5995, 500)\\n\",\n       \"Confusion matrix:\\n\",\n       \"H V P M \\n\",\n-      \"[[4568   64  193  129]\\n\",\n-      \" [ 274 1769 1449 1608]\\n\",\n-      \" [ 363 1052 2621  935]\\n\",\n-      \" [ 228 1009  782 2943]]\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0101: 0.7541902236453695\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0011: 0.698253865012258\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0110: 0.7384299794866663\\n\",\n-      \"Test accuracy: 0.5954370340721469\\n\",\n+      \"[[4595   37  223   99]\\n\",\n+      \" [ 341 1419 2176 1164]\\n\",\n+      \" [ 417  897 3213  444]\\n\",\n+      \" [ 356 1262 1285 2059]]\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0101: 0.7180667433831991\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0011: 0.6700855556111472\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0110: 0.741181768149297\\n\",\n+      \"Test accuracy: 0.5646670335718217\\n\",\n       \"\\n\",\n       \"\\n\",\n       \"\\n\",\n-      \"created a json file of the test accuracies at ./test_accuracy_20220704-1426.json\\n\",\n+      \"created a json file of the test accuracies at /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/result_vary_raining_data_20220704-1556.json\\n\",\n       \"------------- dataset 0: FPGA2.5cm with max_train_files=13 ----------------------------------\\n\",\n       \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n       \"Cut data in pieces with these shapes: after header:(13992, 500), before header:(5995, 500)\\n\",\n       \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n-      \"Cut data in pieces with these shapes: after header:(41976, 500), before header:(17986, 500)\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13992, 500), before header:(5995, 500)\\n\",\n       \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n-      \"Cut data in pieces with these shapes: after header:(41976, 500), before header:(17986, 500)\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13992, 500), before header:(5995, 500)\\n\",\n       \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n-      \"Cut data in pieces with these shapes: after header:(41976, 500), before header:(17986, 500)\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13992, 500), before header:(5995, 500)\\n\",\n       \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n-      \"Cut data in pieces with these shapes: after header:(41976, 500), before header:(17986, 500)\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13992, 500), before header:(5995, 500)\\n\",\n       \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n-      \"Cut data in pieces with these shapes: after header:(41976, 500), before header:(17986, 500)\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13992, 500), before header:(5995, 500)\\n\",\n       \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n-      \"Cut data in pieces with these shapes: after header:(41976, 500), before header:(17986, 500)\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13992, 500), before header:(5995, 500)\\n\",\n       \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n-      \"Cut data in pieces with these shapes: after header:(41976, 500), before header:(17986, 500)\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13992, 500), before header:(5995, 500)\\n\",\n       \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n-      \"Cut data in pieces with these shapes: after header:(41976, 500), before header:(17986, 500)\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13992, 500), before header:(5995, 500)\\n\",\n       \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n-      \"Cut data in pieces with these shapes: after header:(41976, 500), before header:(17986, 500)\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13992, 500), before header:(5995, 500)\\n\",\n       \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n-      \"Cut data in pieces with these shapes: after header:(41976, 500), before header:(17987, 500)\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13992, 500), before header:(5996, 500)\\n\",\n       \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n-      \"Cut data in pieces with these shapes: after header:(41976, 500), before header:(17987, 500)\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13992, 500), before header:(5996, 500)\\n\",\n       \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n-      \"Cut data in pieces with these shapes: after header:(41976, 500), before header:(17986, 500)\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13992, 500), before header:(5995, 500)\\n\",\n       \"Model: \\\"sequential_11\\\"\\n\",\n       \"_________________________________________________________________\\n\",\n       \"Layer (type)                 Output Shape              Param #   \\n\",\n@@ -1882,122 +1882,122 @@\n       \"Non-trainable params: 462\\n\",\n       \"_________________________________________________________________\\n\",\n       \"Epoch 1/10\\n\",\n-      \"5622/5622 [==============================] - 56s 10ms/step - loss: 1.0354 - accuracy: 0.5051 - val_loss: 0.9284 - val_accuracy: 0.5547\\n\",\n+      \"1874/1874 [==============================] - 20s 10ms/step - loss: 1.1071 - accuracy: 0.4691 - val_loss: 0.9993 - val_accuracy: 0.5090\\n\",\n       \"Epoch 2/10\\n\",\n-      \"5622/5622 [==============================] - 54s 10ms/step - loss: 0.9532 - accuracy: 0.5489 - val_loss: 0.9008 - val_accuracy: 0.5691\\n\",\n+      \"1874/1874 [==============================] - 18s 10ms/step - loss: 1.0221 - accuracy: 0.5091 - val_loss: 0.9615 - val_accuracy: 0.5334\\n\",\n       \"Epoch 3/10\\n\",\n-      \"5622/5622 [==============================] - 53s 10ms/step - loss: 0.9353 - accuracy: 0.5581 - val_loss: 0.8803 - val_accuracy: 0.5840\\n\",\n+      \"1874/1874 [==============================] - 18s 10ms/step - loss: 0.9945 - accuracy: 0.5240 - val_loss: 0.9463 - val_accuracy: 0.5375\\n\",\n       \"Epoch 4/10\\n\",\n-      \"5622/5622 [==============================] - 53s 9ms/step - loss: 0.9146 - accuracy: 0.5705 - val_loss: 0.8696 - val_accuracy: 0.5897\\n\",\n+      \"1874/1874 [==============================] - 18s 10ms/step - loss: 0.9775 - accuracy: 0.5343 - val_loss: 0.9431 - val_accuracy: 0.5452\\n\",\n       \"Epoch 5/10\\n\",\n-      \"5622/5622 [==============================] - 54s 10ms/step - loss: 0.8934 - accuracy: 0.5867 - val_loss: 0.8518 - val_accuracy: 0.6020\\n\",\n+      \"1874/1874 [==============================] - 18s 10ms/step - loss: 0.9643 - accuracy: 0.5419 - val_loss: 0.9219 - val_accuracy: 0.5533\\n\",\n       \"Epoch 6/10\\n\",\n-      \"5622/5622 [==============================] - 54s 10ms/step - loss: 0.8773 - accuracy: 0.5968 - val_loss: 0.8444 - val_accuracy: 0.6090\\n\",\n+      \"1874/1874 [==============================] - 18s 10ms/step - loss: 0.9516 - accuracy: 0.5510 - val_loss: 0.9123 - val_accuracy: 0.5637\\n\",\n       \"Epoch 7/10\\n\",\n-      \"5622/5622 [==============================] - 54s 10ms/step - loss: 0.8671 - accuracy: 0.6032 - val_loss: 0.8384 - val_accuracy: 0.6109\\n\",\n+      \"1874/1874 [==============================] - 18s 10ms/step - loss: 0.9433 - accuracy: 0.5548 - val_loss: 0.9043 - val_accuracy: 0.5691\\n\",\n       \"Epoch 8/10\\n\",\n-      \"5622/5622 [==============================] - 54s 10ms/step - loss: 0.8576 - accuracy: 0.6080 - val_loss: 0.8315 - val_accuracy: 0.6146\\n\",\n+      \"1874/1874 [==============================] - 19s 10ms/step - loss: 0.9369 - accuracy: 0.5584 - val_loss: 0.8948 - val_accuracy: 0.5718\\n\",\n       \"Epoch 9/10\\n\",\n-      \"5622/5622 [==============================] - 54s 10ms/step - loss: 0.8491 - accuracy: 0.6126 - val_loss: 0.8323 - val_accuracy: 0.6182\\n\",\n+      \"1874/1874 [==============================] - 18s 10ms/step - loss: 0.9308 - accuracy: 0.5617 - val_loss: 0.8947 - val_accuracy: 0.5722\\n\",\n       \"Epoch 10/10\\n\",\n-      \"5622/5622 [==============================] - 54s 10ms/step - loss: 0.8400 - accuracy: 0.6183 - val_loss: 0.8272 - val_accuracy: 0.6220\\n\",\n+      \"1874/1874 [==============================] - 18s 10ms/step - loss: 0.9263 - accuracy: 0.5640 - val_loss: 0.8897 - val_accuracy: 0.5736\\n\",\n       \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n       \"Cut data in pieces with these shapes: after header:(13992, 500), before header:(5995, 500)\\n\",\n       \"Confusion matrix:\\n\",\n       \"H V P M \\n\",\n-      \"[[4606   87  157  104]\\n\",\n-      \" [ 253 2222 1212 1413]\\n\",\n-      \" [ 338 1398 2350  885]\\n\",\n-      \" [ 210 1395  671 2686]]\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0101: 0.7588432481112724\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0011: 0.6884474908690649\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0110: 0.7398809225996898\\n\",\n-      \"Test accuracy: 0.5935858307900135\\n\",\n+      \"[[4583   57   99  215]\\n\",\n+      \" [ 299 1917 1168 1716]\\n\",\n+      \" [ 481 1655 2053  782]\\n\",\n+      \" [ 280 1463  500 2719]]\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0101: 0.7520388252364036\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0011: 0.6459198479011358\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0110: 0.7299744834142192\\n\",\n+      \"Test accuracy: 0.5639665782758794\\n\",\n       \"\\n\",\n       \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n       \"Cut data in pieces with these shapes: after header:(13992, 500), before header:(5996, 500)\\n\",\n       \"Confusion matrix:\\n\",\n       \"H V P M \\n\",\n-      \"[[4512   92  231  119]\\n\",\n-      \" [ 197 2186 1383 1335]\\n\",\n-      \" [ 316 1276 2588  791]\\n\",\n-      \" [ 204 1469  765 2524]]\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0101: 0.758505103061837\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0011: 0.6831598959375625\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0110: 0.7400440264158495\\n\",\n-      \"Test accuracy: 0.5908545127076246\\n\",\n+      \"[[4511   73  170  200]\\n\",\n+      \" [ 256 2040 1294 1511]\\n\",\n+      \" [ 421 1620 2248  682]\\n\",\n+      \" [ 265 1636  549 2512]]\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0101: 0.7529017410446268\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0011: 0.6439363618170902\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0110: 0.7349409645787472\\n\",\n+      \"Test accuracy: 0.5658895337202321\\n\",\n       \"\\n\",\n       \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n       \"Cut data in pieces with these shapes: after header:(13992, 500), before header:(5995, 500)\\n\",\n       \"Confusion matrix:\\n\",\n       \"H V P M \\n\",\n-      \"[[4573   92  180  109]\\n\",\n-      \" [ 209 2145 1355 1391]\\n\",\n-      \" [ 316 1302 2513  840]\\n\",\n-      \" [ 216 1321  750 2675]]\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0101: 0.7561915244909191\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0011: 0.6902986941511983\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0110: 0.7448841747135638\\n\",\n-      \"Test accuracy: 0.5956871966778406\\n\",\n+      \"[[4599   44  128  183]\\n\",\n+      \" [ 296 1908 1278 1618]\\n\",\n+      \" [ 438 1687 2159  687]\\n\",\n+      \" [ 281 1562  538 2581]]\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0101: 0.7501375894331316\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0011: 0.6410166608295392\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0110: 0.7342772802321509\\n\",\n+      \"Test accuracy: 0.5627157652474108\\n\",\n       \"\\n\",\n       \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n       \"Cut data in pieces with these shapes: after header:(13992, 500), before header:(5995, 500)\\n\",\n       \"Confusion matrix:\\n\",\n       \"H V P M \\n\",\n-      \"[[4586   97  174   97]\\n\",\n-      \" [ 195 2231 1217 1457]\\n\",\n-      \" [ 316 1397 2297  961]\\n\",\n-      \" [ 197 1381  678 2706]]\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0101: 0.7578926302096363\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0011: 0.6879971981788162\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0110: 0.7368789713313654\\n\",\n-      \"Test accuracy: 0.591384399859909\\n\",\n+      \"[[4585   57  109  203]\\n\",\n+      \" [ 266 1933 1186 1715]\\n\",\n+      \" [ 424 1683 2031  833]\\n\",\n+      \" [ 251 1473  517 2721]]\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0101: 0.750037524390854\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0011: 0.6475709210987142\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0110: 0.7301245809776354\\n\",\n+      \"Test accuracy: 0.5638665132336018\\n\",\n       \"\\n\",\n       \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n       \"Cut data in pieces with these shapes: after header:(13992, 500), before header:(5995, 500)\\n\",\n       \"Confusion matrix:\\n\",\n       \"H V P M \\n\",\n-      \"[[4587   79  176  112]\\n\",\n-      \" [ 241 2134 1255 1470]\\n\",\n-      \" [ 360 1306 2385  920]\\n\",\n-      \" [ 217 1347  661 2737]]\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0101: 0.7602941912242958\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0011: 0.687646970530845\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0110: 0.737129133937059\\n\",\n-      \"Test accuracy: 0.5925351478461\\n\",\n+      \"[[4587   57  116  194]\\n\",\n+      \" [ 320 1944 1160 1676]\\n\",\n+      \" [ 453 1710 2025  783]\\n\",\n+      \" [ 286 1474  471 2731]]\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0101: 0.7507880122079351\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0011: 0.6463201080702456\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0110: 0.73232601190774\\n\",\n+      \"Test accuracy: 0.5647170660929605\\n\",\n       \"\\n\",\n       \"\\n\",\n       \"\\n\",\n-      \"created a json file of the test accuracies at ./test_accuracy_20220704-1426.json\\n\",\n+      \"created a json file of the test accuracies at /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/result_vary_raining_data_20220704-1556.json\\n\",\n       \"------------- dataset 0: FPGA2.5cm with max_train_files=14 ----------------------------------\\n\",\n       \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n       \"Cut data in pieces with these shapes: after header:(13992, 500), before header:(5995, 500)\\n\",\n       \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n-      \"Cut data in pieces with these shapes: after header:(41976, 500), before header:(17986, 500)\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13992, 500), before header:(5995, 500)\\n\",\n       \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n-      \"Cut data in pieces with these shapes: after header:(41976, 500), before header:(17986, 500)\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13992, 500), before header:(5995, 500)\\n\",\n       \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n-      \"Cut data in pieces with these shapes: after header:(41976, 500), before header:(17986, 500)\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13992, 500), before header:(5995, 500)\\n\",\n       \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n-      \"Cut data in pieces with these shapes: after header:(41976, 500), before header:(17986, 500)\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13992, 500), before header:(5995, 500)\\n\",\n       \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n-      \"Cut data in pieces with these shapes: after header:(41976, 500), before header:(17986, 500)\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13992, 500), before header:(5995, 500)\\n\",\n       \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n-      \"Cut data in pieces with these shapes: after header:(41976, 500), before header:(17986, 500)\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13992, 500), before header:(5995, 500)\\n\",\n       \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n-      \"Cut data in pieces with these shapes: after header:(41976, 500), before header:(17986, 500)\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13992, 500), before header:(5995, 500)\\n\",\n       \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n-      \"Cut data in pieces with these shapes: after header:(41976, 500), before header:(17986, 500)\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13992, 500), before header:(5995, 500)\\n\",\n       \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n-      \"Cut data in pieces with these shapes: after header:(41976, 500), before header:(17986, 500)\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13992, 500), before header:(5995, 500)\\n\",\n       \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n-      \"Cut data in pieces with these shapes: after header:(41976, 500), before header:(17987, 500)\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13992, 500), before header:(5996, 500)\\n\",\n       \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n-      \"Cut data in pieces with these shapes: after header:(41976, 500), before header:(17987, 500)\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13992, 500), before header:(5996, 500)\\n\",\n       \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n-      \"Cut data in pieces with these shapes: after header:(41976, 500), before header:(17986, 500)\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13992, 500), before header:(5995, 500)\\n\",\n       \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n-      \"Cut data in pieces with these shapes: after header:(41976, 500), before header:(17986, 500)\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13992, 500), before header:(5995, 500)\\n\",\n       \"Model: \\\"sequential_12\\\"\\n\",\n       \"_________________________________________________________________\\n\",\n       \"Layer (type)                 Output Shape              Param #   \\n\",\n@@ -2041,124 +2041,124 @@\n       \"Non-trainable params: 462\\n\",\n       \"_________________________________________________________________\\n\",\n       \"Epoch 1/10\\n\",\n-      \"6090/6090 [==============================] - 61s 10ms/step - loss: 1.0404 - accuracy: 0.4968 - val_loss: 0.9316 - val_accuracy: 0.5485\\n\",\n+      \"2030/2030 [==============================] - 22s 10ms/step - loss: 1.1071 - accuracy: 0.4674 - val_loss: 1.0059 - val_accuracy: 0.5168\\n\",\n       \"Epoch 2/10\\n\",\n-      \"6090/6090 [==============================] - 59s 10ms/step - loss: 0.9546 - accuracy: 0.5470 - val_loss: 0.8895 - val_accuracy: 0.5792\\n\",\n+      \"2030/2030 [==============================] - 20s 10ms/step - loss: 1.0094 - accuracy: 0.5130 - val_loss: 0.9559 - val_accuracy: 0.5396\\n\",\n       \"Epoch 3/10\\n\",\n-      \"6090/6090 [==============================] - 59s 10ms/step - loss: 0.9248 - accuracy: 0.5699 - val_loss: 0.8723 - val_accuracy: 0.5905\\n\",\n+      \"2030/2030 [==============================] - 20s 10ms/step - loss: 0.9813 - accuracy: 0.5280 - val_loss: 0.9273 - val_accuracy: 0.5546\\n\",\n       \"Epoch 4/10\\n\",\n-      \"6090/6090 [==============================] - 59s 10ms/step - loss: 0.9057 - accuracy: 0.5815 - val_loss: 0.8585 - val_accuracy: 0.6014\\n\",\n+      \"2030/2030 [==============================] - 20s 10ms/step - loss: 0.9643 - accuracy: 0.5409 - val_loss: 0.9107 - val_accuracy: 0.5693\\n\",\n       \"Epoch 5/10\\n\",\n-      \"6090/6090 [==============================] - 58s 10ms/step - loss: 0.8894 - accuracy: 0.5898 - val_loss: 0.8497 - val_accuracy: 0.6062\\n\",\n+      \"2030/2030 [==============================] - 20s 10ms/step - loss: 0.9515 - accuracy: 0.5487 - val_loss: 0.9002 - val_accuracy: 0.5769\\n\",\n       \"Epoch 6/10\\n\",\n-      \"6090/6090 [==============================] - 58s 10ms/step - loss: 0.8773 - accuracy: 0.5973 - val_loss: 0.8419 - val_accuracy: 0.6096\\n\",\n+      \"2030/2030 [==============================] - 20s 10ms/step - loss: 0.9428 - accuracy: 0.5557 - val_loss: 0.8902 - val_accuracy: 0.5829\\n\",\n       \"Epoch 7/10\\n\",\n-      \"6090/6090 [==============================] - 58s 10ms/step - loss: 0.8673 - accuracy: 0.6038 - val_loss: 0.8357 - val_accuracy: 0.6120\\n\",\n+      \"2030/2030 [==============================] - 20s 10ms/step - loss: 0.9321 - accuracy: 0.5616 - val_loss: 0.8834 - val_accuracy: 0.5846\\n\",\n       \"Epoch 8/10\\n\",\n-      \"6090/6090 [==============================] - 59s 10ms/step - loss: 0.8584 - accuracy: 0.6087 - val_loss: 0.8312 - val_accuracy: 0.6142\\n\",\n+      \"2030/2030 [==============================] - 20s 10ms/step - loss: 0.9239 - accuracy: 0.5649 - val_loss: 0.8769 - val_accuracy: 0.5850\\n\",\n       \"Epoch 9/10\\n\",\n-      \"6090/6090 [==============================] - 59s 10ms/step - loss: 0.8506 - accuracy: 0.6127 - val_loss: 0.8272 - val_accuracy: 0.6220\\n\",\n+      \"2030/2030 [==============================] - 20s 10ms/step - loss: 0.9161 - accuracy: 0.5699 - val_loss: 0.8753 - val_accuracy: 0.5891\\n\",\n       \"Epoch 10/10\\n\",\n-      \"6090/6090 [==============================] - 58s 10ms/step - loss: 0.8420 - accuracy: 0.6169 - val_loss: 0.8247 - val_accuracy: 0.6193\\n\",\n+      \"2030/2030 [==============================] - 20s 10ms/step - loss: 0.9101 - accuracy: 0.5720 - val_loss: 0.8714 - val_accuracy: 0.5868\\n\",\n       \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n       \"Cut data in pieces with these shapes: after header:(13992, 500), before header:(5995, 500)\\n\",\n       \"Confusion matrix:\\n\",\n       \"H V P M \\n\",\n-      \"[[4547   72  181  154]\\n\",\n-      \" [ 206 1918 1306 1670]\\n\",\n-      \" [ 294 1223 2382 1072]\\n\",\n-      \" [ 174 1083  718 2987]]\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0101: 0.7535898333917046\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0011: 0.695552108870766\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0110: 0.735027768049232\\n\",\n-      \"Test accuracy: 0.5920848551558513\\n\",\n+      \"[[4505   41  266  142]\\n\",\n+      \" [ 221 1078 1835 1966]\\n\",\n+      \" [ 302  749 2862 1058]\\n\",\n+      \" [ 197  764  956 3045]]\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0101: 0.7398809225996898\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0011: 0.6887476859958973\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0110: 0.7211187271726622\\n\",\n+      \"Test accuracy: 0.5748736678841246\\n\",\n       \"\\n\",\n       \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n       \"Cut data in pieces with these shapes: after header:(13992, 500), before header:(5996, 500)\\n\",\n       \"Confusion matrix:\\n\",\n       \"H V P M \\n\",\n-      \"[[4425   78  255  196]\\n\",\n-      \" [ 144 1919 1412 1626]\\n\",\n-      \" [ 267 1183 2520 1001]\\n\",\n-      \" [ 162 1185  763 2852]]\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0101: 0.7529017410446268\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0011: 0.6855113067840705\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0110: 0.7338903342005203\\n\",\n-      \"Test accuracy: 0.5861516910146087\\n\",\n+      \"[[4346   64  408  136]\\n\",\n+      \" [ 195 1079 2160 1667]\\n\",\n+      \" [ 252  741 3239  739]\\n\",\n+      \" [ 195  895 1294 2578]]\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0101: 0.723634180508305\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0011: 0.677106263758255\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0110: 0.724134480688413\\n\",\n+      \"Test accuracy: 0.5624374624774865\\n\",\n       \"\\n\",\n       \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n       \"Cut data in pieces with these shapes: after header:(13992, 500), before header:(5995, 500)\\n\",\n       \"Confusion matrix:\\n\",\n       \"H V P M \\n\",\n-      \"[[4518   71  208  157]\\n\",\n-      \" [ 169 1925 1352 1654]\\n\",\n-      \" [ 280 1156 2559  976]\\n\",\n-      \" [ 167 1086  683 3026]]\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0101: 0.7632961424926202\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0011: 0.6968029218992345\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0110: 0.7434832641216791\\n\",\n-      \"Test accuracy: 0.6017911642567669\\n\",\n+      \"[[4473   63  300  118]\\n\",\n+      \" [ 192 1094 2080 1734]\\n\",\n+      \" [ 261  763 3120  827]\\n\",\n+      \" [ 214  848 1126 2774]]\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0101: 0.7306749387101616\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0011: 0.6838945314454395\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0110: 0.7322759793866013\\n\",\n+      \"Test accuracy: 0.5734227247711012\\n\",\n       \"\\n\",\n       \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n       \"Cut data in pieces with these shapes: after header:(13992, 500), before header:(5995, 500)\\n\",\n       \"Confusion matrix:\\n\",\n       \"H V P M \\n\",\n-      \"[[4550   61  196  147]\\n\",\n-      \" [ 178 2002 1246 1674]\\n\",\n-      \" [ 274 1156 2459 1082]\\n\",\n-      \" [ 169 1135  671 2987]]\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0101: 0.7643468254365338\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0011: 0.6999549707309751\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0110: 0.7362785810777005\\n\",\n-      \"Test accuracy: 0.6002901886226047\\n\",\n+      \"[[4461   39  302  152]\\n\",\n+      \" [ 181 1072 1841 2006]\\n\",\n+      \" [ 264  708 2909 1090]\\n\",\n+      \" [ 193  799  917 3053]]\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0101: 0.7437834592485115\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0011: 0.6865462550657928\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0110: 0.7199179466653325\\n\",\n+      \"Test accuracy: 0.5751238304898184\\n\",\n       \"\\n\",\n       \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n       \"Cut data in pieces with these shapes: after header:(13992, 500), before header:(5995, 500)\\n\",\n       \"Confusion matrix:\\n\",\n       \"H V P M \\n\",\n-      \"[[4565   68  177  144]\\n\",\n-      \" [ 214 1959 1259 1668]\\n\",\n-      \" [ 326 1158 2423 1064]\\n\",\n-      \" [ 178 1080  648 3056]]\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0101: 0.7631960774503427\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0011: 0.7003051983789463\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0110: 0.7375794266273078\\n\",\n-      \"Test accuracy: 0.6005403512282984\\n\",\n+      \"[[4510   53  272  119]\\n\",\n+      \" [ 256 1029 1860 1955]\\n\",\n+      \" [ 314  719 2922 1016]\\n\",\n+      \" [ 217  734  977 3034]]\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0101: 0.7389803372191924\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0011: 0.6902986941511983\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0110: 0.720968629609246\\n\",\n+      \"Test accuracy: 0.5751238304898184\\n\",\n       \"\\n\",\n       \"\\n\",\n       \"\\n\",\n-      \"created a json file of the test accuracies at ./test_accuracy_20220704-1426.json\\n\",\n+      \"created a json file of the test accuracies at /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/result_vary_raining_data_20220704-1556.json\\n\",\n       \"------------- dataset 0: FPGA2.5cm with max_train_files=15 ----------------------------------\\n\",\n       \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n       \"Cut data in pieces with these shapes: after header:(13992, 500), before header:(5995, 500)\\n\",\n       \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n-      \"Cut data in pieces with these shapes: after header:(41976, 500), before header:(17986, 500)\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13992, 500), before header:(5995, 500)\\n\",\n       \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n-      \"Cut data in pieces with these shapes: after header:(41976, 500), before header:(17986, 500)\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13992, 500), before header:(5995, 500)\\n\",\n       \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n-      \"Cut data in pieces with these shapes: after header:(41976, 500), before header:(17986, 500)\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13992, 500), before header:(5995, 500)\\n\",\n       \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n-      \"Cut data in pieces with these shapes: after header:(41976, 500), before header:(17986, 500)\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13992, 500), before header:(5995, 500)\\n\",\n       \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n-      \"Cut data in pieces with these shapes: after header:(41976, 500), before header:(17986, 500)\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13992, 500), before header:(5995, 500)\\n\",\n       \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n-      \"Cut data in pieces with these shapes: after header:(41976, 500), before header:(17986, 500)\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13992, 500), before header:(5995, 500)\\n\",\n       \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n-      \"Cut data in pieces with these shapes: after header:(41976, 500), before header:(17986, 500)\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13992, 500), before header:(5995, 500)\\n\",\n       \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n-      \"Cut data in pieces with these shapes: after header:(41976, 500), before header:(17986, 500)\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13992, 500), before header:(5995, 500)\\n\",\n       \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n-      \"Cut data in pieces with these shapes: after header:(41976, 500), before header:(17986, 500)\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13992, 500), before header:(5995, 500)\\n\",\n       \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n-      \"Cut data in pieces with these shapes: after header:(41976, 500), before header:(17987, 500)\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13992, 500), before header:(5996, 500)\\n\",\n       \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n-      \"Cut data in pieces with these shapes: after header:(41976, 500), before header:(17987, 500)\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13992, 500), before header:(5996, 500)\\n\",\n       \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n-      \"Cut data in pieces with these shapes: after header:(41976, 500), before header:(17986, 500)\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13992, 500), before header:(5995, 500)\\n\",\n       \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n-      \"Cut data in pieces with these shapes: after header:(41976, 500), before header:(17986, 500)\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13992, 500), before header:(5995, 500)\\n\",\n       \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n-      \"Cut data in pieces with these shapes: after header:(41976, 500), before header:(17986, 500)\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13992, 500), before header:(5995, 500)\\n\",\n       \"Model: \\\"sequential_13\\\"\\n\",\n       \"_________________________________________________________________\\n\",\n       \"Layer (type)                 Output Shape              Param #   \\n\",\n@@ -2202,15 +2202,856 @@\n       \"Non-trainable params: 462\\n\",\n       \"_________________________________________________________________\\n\",\n       \"Epoch 1/10\\n\",\n-      \"6559/6559 [==============================] - 66s 10ms/step - loss: 1.0479 - accuracy: 0.4897 - val_loss: 0.9354 - val_accuracy: 0.5446\\n\",\n+      \"2187/2187 [==============================] - 23s 10ms/step - loss: 1.1703 - accuracy: 0.4260 - val_loss: 1.0524 - val_accuracy: 0.4700\\n\",\n+      \"Epoch 2/10\\n\",\n+      \"2187/2187 [==============================] - 21s 10ms/step - loss: 1.0419 - accuracy: 0.4899 - val_loss: 0.9795 - val_accuracy: 0.5176\\n\",\n+      \"Epoch 3/10\\n\",\n+      \"2187/2187 [==============================] - 21s 10ms/step - loss: 1.0059 - accuracy: 0.5099 - val_loss: 0.9385 - val_accuracy: 0.5455\\n\",\n+      \"Epoch 4/10\\n\",\n+      \"2187/2187 [==============================] - 20s 9ms/step - loss: 0.9783 - accuracy: 0.5311 - val_loss: 0.9255 - val_accuracy: 0.5534\\n\",\n+      \"Epoch 5/10\\n\",\n+      \"2187/2187 [==============================] - 20s 9ms/step - loss: 0.9662 - accuracy: 0.5355 - val_loss: 0.9123 - val_accuracy: 0.5600\\n\",\n+      \"Epoch 6/10\\n\",\n+      \"2187/2187 [==============================] - 20s 9ms/step - loss: 0.9546 - accuracy: 0.5433 - val_loss: 0.9050 - val_accuracy: 0.5639\\n\",\n+      \"Epoch 7/10\\n\",\n+      \"2187/2187 [==============================] - 20s 9ms/step - loss: 0.9464 - accuracy: 0.5463 - val_loss: 0.8950 - val_accuracy: 0.5695\\n\",\n+      \"Epoch 8/10\\n\",\n+      \"2187/2187 [==============================] - 21s 9ms/step - loss: 0.9402 - accuracy: 0.5497 - val_loss: 0.8933 - val_accuracy: 0.5701\\n\",\n+      \"Epoch 9/10\\n\",\n+      \"2187/2187 [==============================] - 21s 9ms/step - loss: 0.9333 - accuracy: 0.5530 - val_loss: 0.8867 - val_accuracy: 0.5746\\n\",\n+      \"Epoch 10/10\\n\",\n+      \"2187/2187 [==============================] - 20s 9ms/step - loss: 0.9264 - accuracy: 0.5578 - val_loss: 0.8800 - val_accuracy: 0.5775\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13992, 500), before header:(5995, 500)\\n\",\n+      \"Confusion matrix:\\n\",\n+      \"H V P M \\n\",\n+      \"[[4555  107  150  142]\\n\",\n+      \" [ 260 1727 1544 1569]\\n\",\n+      \" [ 371 1310 2529  761]\\n\",\n+      \" [ 239 1480  700 2543]]\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0101: 0.7466853454745584\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0011: 0.6595286936508731\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0110: 0.7299244508930806\\n\",\n+      \"Test accuracy: 0.568069245009256\\n\",\n+      \"\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13992, 500), before header:(5996, 500)\\n\",\n+      \"Confusion matrix:\\n\",\n+      \"H V P M \\n\",\n+      \"[[4451   73  274  156]\\n\",\n+      \" [ 234 1656 1785 1426]\\n\",\n+      \" [ 370 1192 2778  631]\\n\",\n+      \" [ 215 1518  884 2345]]\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0101: 0.7413448068841305\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0011: 0.6529917950770462\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0110: 0.7293376025615369\\n\",\n+      \"Test accuracy: 0.5618371022613569\\n\",\n+      \"\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13992, 500), before header:(5995, 500)\\n\",\n+      \"Confusion matrix:\\n\",\n+      \"H V P M \\n\",\n+      \"[[4539   74  209  132]\\n\",\n+      \" [ 250 1653 1742 1455]\\n\",\n+      \" [ 348 1252 2721  650]\\n\",\n+      \" [ 233 1514  790 2425]]\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0101: 0.7436833942062341\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0011: 0.6555260919597738\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0110: 0.7353279631760644\\n\",\n+      \"Test accuracy: 0.5672687246710362\\n\",\n+      \"\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13992, 500), before header:(5995, 500)\\n\",\n+      \"Confusion matrix:\\n\",\n+      \"H V P M \\n\",\n+      \"[[4568   78  160  148]\\n\",\n+      \" [ 230 1777 1516 1577]\\n\",\n+      \" [ 353 1337 2491  790]\\n\",\n+      \" [ 218 1515  657 2572]]\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0101: 0.7511382398559063\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0011: 0.658578075749237\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0110: 0.7318256866963526\\n\",\n+      \"Test accuracy: 0.570771001150748\\n\",\n+      \"\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13992, 500), before header:(5995, 500)\\n\",\n+      \"Confusion matrix:\\n\",\n+      \"H V P M \\n\",\n+      \"[[4557   92  173  132]\\n\",\n+      \" [ 281 1721 1560 1538]\\n\",\n+      \" [ 392 1302 2512  765]\\n\",\n+      \" [ 233 1451  722 2556]]\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0101: 0.7454845649672287\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0011: 0.6607294741582028\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0110: 0.7291239305548607\\n\",\n+      \"Test accuracy: 0.567668984840146\\n\",\n+      \"\\n\",\n+      \"\\n\",\n+      \"\\n\",\n+      \"created a json file of the test accuracies at /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/result_vary_raining_data_20220704-1556.json\\n\",\n+      \"------------- dataset 0: FPGA2.5cm with max_train_files=16 ----------------------------------\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13992, 500), before header:(5995, 500)\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13992, 500), before header:(5995, 500)\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13992, 500), before header:(5995, 500)\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13992, 500), before header:(5995, 500)\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13992, 500), before header:(5995, 500)\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13992, 500), before header:(5995, 500)\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13992, 500), before header:(5995, 500)\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13992, 500), before header:(5995, 500)\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13992, 500), before header:(5995, 500)\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13992, 500), before header:(5995, 500)\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13992, 500), before header:(5996, 500)\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13992, 500), before header:(5996, 500)\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13992, 500), before header:(5995, 500)\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13992, 500), before header:(5995, 500)\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13992, 500), before header:(5995, 500)\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13992, 500), before header:(5995, 500)\\n\",\n+      \"Model: \\\"sequential_14\\\"\\n\",\n+      \"_________________________________________________________________\\n\",\n+      \"Layer (type)                 Output Shape              Param #   \\n\",\n+      \"=================================================================\\n\",\n+      \"reshape_14 (Reshape)         (None, 500, 1)            0         \\n\",\n+      \"_________________________________________________________________\\n\",\n+      \"gaussian_noise_14 (GaussianN (None, 500, 1)            0         \\n\",\n+      \"_________________________________________________________________\\n\",\n+      \"conv1d_42 (Conv1D)           (None, 500, 13)           52        \\n\",\n+      \"_________________________________________________________________\\n\",\n+      \"max_pooling1d_42 (MaxPooling (None, 250, 13)           0         \\n\",\n+      \"_________________________________________________________________\\n\",\n+      \"spatial_dropout1d_42 (Spatia (None, 250, 13)           0         \\n\",\n+      \"_________________________________________________________________\\n\",\n+      \"batch_normalization_42 (Batc (None, 250, 13)           52        \\n\",\n+      \"_________________________________________________________________\\n\",\n+      \"conv1d_43 (Conv1D)           (None, 250, 118)          23128     \\n\",\n+      \"_________________________________________________________________\\n\",\n+      \"max_pooling1d_43 (MaxPooling (None, 250, 118)          0         \\n\",\n+      \"_________________________________________________________________\\n\",\n+      \"spatial_dropout1d_43 (Spatia (None, 250, 118)          0         \\n\",\n+      \"_________________________________________________________________\\n\",\n+      \"batch_normalization_43 (Batc (None, 250, 118)          472       \\n\",\n+      \"_________________________________________________________________\\n\",\n+      \"conv1d_44 (Conv1D)           (None, 250, 100)          59100     \\n\",\n+      \"_________________________________________________________________\\n\",\n+      \"max_pooling1d_44 (MaxPooling (None, 62, 100)           0         \\n\",\n+      \"_________________________________________________________________\\n\",\n+      \"batch_normalization_44 (Batc (None, 62, 100)           400       \\n\",\n+      \"_________________________________________________________________\\n\",\n+      \"spatial_dropout1d_44 (Spatia (None, 62, 100)           0         \\n\",\n+      \"_________________________________________________________________\\n\",\n+      \"flatten_14 (Flatten)         (None, 6200)              0         \\n\",\n+      \"_________________________________________________________________\\n\",\n+      \"dense_28 (Dense)             (None, 224)               1389024   \\n\",\n+      \"_________________________________________________________________\\n\",\n+      \"dense_29 (Dense)             (None, 4)                 900       \\n\",\n+      \"=================================================================\\n\",\n+      \"Total params: 1,473,128\\n\",\n+      \"Trainable params: 1,472,666\\n\",\n+      \"Non-trainable params: 462\\n\",\n+      \"_________________________________________________________________\\n\",\n+      \"Epoch 1/10\\n\",\n+      \"2343/2343 [==============================] - 23s 9ms/step - loss: 1.0857 - accuracy: 0.4784 - val_loss: 1.0039 - val_accuracy: 0.5104\\n\",\n       \"Epoch 2/10\\n\",\n-      \"6559/6559 [==============================] - 62s 9ms/step - loss: 0.9604 - accuracy: 0.5388 - val_loss: 0.8941 - val_accuracy: 0.5714\\n\",\n+      \"2343/2343 [==============================] - 21s 9ms/step - loss: 1.0011 - accuracy: 0.5233 - val_loss: 0.9582 - val_accuracy: 0.5432\\n\",\n       \"Epoch 3/10\\n\",\n-      \"6559/6559 [==============================] - 63s 10ms/step - loss: 0.9301 - accuracy: 0.5598 - val_loss: 0.8713 - val_accuracy: 0.5891\\n\",\n+      \"2343/2343 [==============================] - 21s 9ms/step - loss: 0.9767 - accuracy: 0.5373 - val_loss: 0.9350 - val_accuracy: 0.5604\\n\",\n       \"Epoch 4/10\\n\",\n-      \"6559/6559 [==============================] - 63s 10ms/step - loss: 0.9096 - accuracy: 0.5742 - val_loss: 0.8609 - val_accuracy: 0.5963\\n\",\n+      \"2343/2343 [==============================] - 21s 9ms/step - loss: 0.9566 - accuracy: 0.5513 - val_loss: 0.9172 - val_accuracy: 0.5659\\n\",\n       \"Epoch 5/10\\n\",\n-      \"3359/6559 [==============>...............] - ETA: 30s - loss: 0.8953 - accuracy: 0.5861\"\n+      \"2343/2343 [==============================] - 22s 9ms/step - loss: 0.9434 - accuracy: 0.5577 - val_loss: 0.9065 - val_accuracy: 0.5670\\n\",\n+      \"Epoch 6/10\\n\",\n+      \"2343/2343 [==============================] - 22s 9ms/step - loss: 0.9333 - accuracy: 0.5643 - val_loss: 0.9022 - val_accuracy: 0.5753\\n\",\n+      \"Epoch 7/10\\n\",\n+      \"2343/2343 [==============================] - 21s 9ms/step - loss: 0.9253 - accuracy: 0.5699 - val_loss: 0.9008 - val_accuracy: 0.5747\\n\",\n+      \"Epoch 8/10\\n\",\n+      \"2343/2343 [==============================] - 21s 9ms/step - loss: 0.9162 - accuracy: 0.5761 - val_loss: 0.8790 - val_accuracy: 0.5922\\n\",\n+      \"Epoch 9/10\\n\",\n+      \"2343/2343 [==============================] - 21s 9ms/step - loss: 0.9099 - accuracy: 0.5803 - val_loss: 0.8863 - val_accuracy: 0.5845\\n\",\n+      \"Epoch 10/10\\n\",\n+      \"2343/2343 [==============================] - 21s 9ms/step - loss: 0.9056 - accuracy: 0.5833 - val_loss: 0.8758 - val_accuracy: 0.5929\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13992, 500), before header:(5995, 500)\\n\",\n+      \"Confusion matrix:\\n\",\n+      \"H V P M \\n\",\n+      \"[[4483   78  219  174]\\n\",\n+      \" [ 237 1836 1194 1833]\\n\",\n+      \" [ 353 1263 2130 1225]\\n\",\n+      \" [ 211 1094  649 3008]]\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0101: 0.7482863861509982\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0011: 0.6827437834592485\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0110: 0.7154150197628458\\n\",\n+      \"Test accuracy: 0.5732225946865462\\n\",\n+      \"\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13992, 500), before header:(5996, 500)\\n\",\n+      \"Confusion matrix:\\n\",\n+      \"H V P M \\n\",\n+      \"[[4447   90  256  161]\\n\",\n+      \" [ 203 1755 1272 1871]\\n\",\n+      \" [ 335 1168 2307 1161]\\n\",\n+      \" [ 228 1038  671 3025]]\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0101: 0.7521512907744646\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0011: 0.6833600160096057\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0110: 0.7185811486892135\\n\",\n+      \"Test accuracy: 0.5770462277366419\\n\",\n+      \"\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13992, 500), before header:(5995, 500)\\n\",\n+      \"Confusion matrix:\\n\",\n+      \"H V P M \\n\",\n+      \"[[4530   73  201  150]\\n\",\n+      \" [ 215 1829 1200 1856]\\n\",\n+      \" [ 351 1233 2241 1146]\\n\",\n+      \" [ 225 1047  656 3034]]\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0101: 0.7549407114624506\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0011: 0.6866463201080703\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0110: 0.7225696702856858\\n\",\n+      \"Test accuracy: 0.5820783509281032\\n\",\n+      \"\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13992, 500), before header:(5995, 500)\\n\",\n+      \"Confusion matrix:\\n\",\n+      \"H V P M \\n\",\n+      \"[[4480  100  214  160]\\n\",\n+      \" [ 208 1833 1145 1914]\\n\",\n+      \" [ 308 1226 2176 1261]\\n\",\n+      \" [ 201 1030  684 3047]]\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0101: 0.7505878821233802\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0011: 0.6898984339820884\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0110: 0.7138640116075449\\n\",\n+      \"Test accuracy: 0.5771751638565067\\n\",\n+      \"\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13992, 500), before header:(5995, 500)\\n\",\n+      \"Confusion matrix:\\n\",\n+      \"H V P M \\n\",\n+      \"[[4507   86  202  159]\\n\",\n+      \" [ 263 1867 1115 1855]\\n\",\n+      \" [ 357 1233 2184 1197]\\n\",\n+      \" [ 225 1012  618 3107]]\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0101: 0.7550407765047281\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0011: 0.691899734827638\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0110: 0.7203182068344424\\n\",\n+      \"Test accuracy: 0.5836293590834042\\n\",\n+      \"\\n\",\n+      \"\\n\",\n+      \"\\n\",\n+      \"created a json file of the test accuracies at /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/result_vary_raining_data_20220704-1556.json\\n\",\n+      \"------------- dataset 0: FPGA2.5cm with max_train_files=17 ----------------------------------\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13992, 500), before header:(5995, 500)\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13992, 500), before header:(5995, 500)\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13992, 500), before header:(5995, 500)\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13992, 500), before header:(5995, 500)\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13992, 500), before header:(5995, 500)\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13992, 500), before header:(5995, 500)\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13992, 500), before header:(5995, 500)\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13992, 500), before header:(5995, 500)\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13992, 500), before header:(5995, 500)\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13992, 500), before header:(5995, 500)\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13992, 500), before header:(5996, 500)\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13992, 500), before header:(5996, 500)\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13992, 500), before header:(5995, 500)\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13992, 500), before header:(5995, 500)\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13992, 500), before header:(5995, 500)\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13992, 500), before header:(5995, 500)\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13992, 500), before header:(5995, 500)\\n\",\n+      \"Model: \\\"sequential_15\\\"\\n\",\n+      \"_________________________________________________________________\\n\",\n+      \"Layer (type)                 Output Shape              Param #   \\n\",\n+      \"=================================================================\\n\",\n+      \"reshape_15 (Reshape)         (None, 500, 1)            0         \\n\",\n+      \"_________________________________________________________________\\n\",\n+      \"gaussian_noise_15 (GaussianN (None, 500, 1)            0         \\n\",\n+      \"_________________________________________________________________\\n\",\n+      \"conv1d_45 (Conv1D)           (None, 500, 13)           52        \\n\",\n+      \"_________________________________________________________________\\n\",\n+      \"max_pooling1d_45 (MaxPooling (None, 250, 13)           0         \\n\",\n+      \"_________________________________________________________________\\n\",\n+      \"spatial_dropout1d_45 (Spatia (None, 250, 13)           0         \\n\",\n+      \"_________________________________________________________________\\n\",\n+      \"batch_normalization_45 (Batc (None, 250, 13)           52        \\n\",\n+      \"_________________________________________________________________\\n\",\n+      \"conv1d_46 (Conv1D)           (None, 250, 118)          23128     \\n\",\n+      \"_________________________________________________________________\\n\",\n+      \"max_pooling1d_46 (MaxPooling (None, 250, 118)          0         \\n\",\n+      \"_________________________________________________________________\\n\",\n+      \"spatial_dropout1d_46 (Spatia (None, 250, 118)          0         \\n\",\n+      \"_________________________________________________________________\\n\",\n+      \"batch_normalization_46 (Batc (None, 250, 118)          472       \\n\",\n+      \"_________________________________________________________________\\n\",\n+      \"conv1d_47 (Conv1D)           (None, 250, 100)          59100     \\n\",\n+      \"_________________________________________________________________\\n\",\n+      \"max_pooling1d_47 (MaxPooling (None, 62, 100)           0         \\n\",\n+      \"_________________________________________________________________\\n\",\n+      \"batch_normalization_47 (Batc (None, 62, 100)           400       \\n\",\n+      \"_________________________________________________________________\\n\",\n+      \"spatial_dropout1d_47 (Spatia (None, 62, 100)           0         \\n\",\n+      \"_________________________________________________________________\\n\",\n+      \"flatten_15 (Flatten)         (None, 6200)              0         \\n\",\n+      \"_________________________________________________________________\\n\",\n+      \"dense_30 (Dense)             (None, 224)               1389024   \\n\",\n+      \"_________________________________________________________________\\n\",\n+      \"dense_31 (Dense)             (None, 4)                 900       \\n\",\n+      \"=================================================================\\n\",\n+      \"Total params: 1,473,128\\n\",\n+      \"Trainable params: 1,472,666\\n\",\n+      \"Non-trainable params: 462\\n\",\n+      \"_________________________________________________________________\\n\",\n+      \"Epoch 1/10\\n\",\n+      \"2499/2499 [==============================] - 24s 9ms/step - loss: 1.0796 - accuracy: 0.4831 - val_loss: 0.9786 - val_accuracy: 0.5391\\n\",\n+      \"Epoch 2/10\\n\",\n+      \"2499/2499 [==============================] - 22s 9ms/step - loss: 0.9839 - accuracy: 0.5355 - val_loss: 0.9274 - val_accuracy: 0.5636\\n\",\n+      \"Epoch 3/10\\n\",\n+      \"2499/2499 [==============================] - 22s 9ms/step - loss: 0.9550 - accuracy: 0.5541 - val_loss: 0.9023 - val_accuracy: 0.5796\\n\",\n+      \"Epoch 4/10\\n\",\n+      \"2499/2499 [==============================] - 22s 9ms/step - loss: 0.9369 - accuracy: 0.5649 - val_loss: 0.8861 - val_accuracy: 0.5871\\n\",\n+      \"Epoch 5/10\\n\",\n+      \"2499/2499 [==============================] - 23s 9ms/step - loss: 0.9253 - accuracy: 0.5728 - val_loss: 0.8799 - val_accuracy: 0.5895\\n\",\n+      \"Epoch 6/10\\n\",\n+      \"2499/2499 [==============================] - 23s 9ms/step - loss: 0.9171 - accuracy: 0.5767 - val_loss: 0.8796 - val_accuracy: 0.5912\\n\",\n+      \"Epoch 7/10\\n\",\n+      \"2499/2499 [==============================] - 23s 9ms/step - loss: 0.9108 - accuracy: 0.5796 - val_loss: 0.8688 - val_accuracy: 0.5970\\n\",\n+      \"Epoch 8/10\\n\",\n+      \"2499/2499 [==============================] - 23s 9ms/step - loss: 0.9053 - accuracy: 0.5821 - val_loss: 0.8660 - val_accuracy: 0.5990\\n\",\n+      \"Epoch 9/10\\n\",\n+      \"2499/2499 [==============================] - 23s 9ms/step - loss: 0.8987 - accuracy: 0.5864 - val_loss: 0.8620 - val_accuracy: 0.5970\\n\",\n+      \"Epoch 10/10\\n\",\n+      \"2499/2499 [==============================] - 23s 9ms/step - loss: 0.8935 - accuracy: 0.5888 - val_loss: 0.8545 - val_accuracy: 0.6016\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13992, 500), before header:(5995, 500)\\n\",\n+      \"Confusion matrix:\\n\",\n+      \"H V P M \\n\",\n+      \"[[4494   48  225  187]\\n\",\n+      \" [ 205 1542 1652 1701]\\n\",\n+      \" [ 349  891 2681 1050]\\n\",\n+      \" [ 179  980  888 2915]]\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0101: 0.744834142192425\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0011: 0.6915995397008056\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0110: 0.727522889878421\\n\",\n+      \"Test accuracy: 0.5819782858858258\\n\",\n+      \"\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13992, 500), before header:(5996, 500)\\n\",\n+      \"Confusion matrix:\\n\",\n+      \"H V P M \\n\",\n+      \"[[4400   60  298  196]\\n\",\n+      \" [ 169 1483 1868 1581]\\n\",\n+      \" [ 309  787 2955  920]\\n\",\n+      \" [ 162  982 1090 2728]]\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0101: 0.7372423454072443\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0011: 0.6906643986391835\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0110: 0.7293876325795478\\n\",\n+      \"Test accuracy: 0.5786471883129878\\n\",\n+      \"\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13992, 500), before header:(5995, 500)\\n\",\n+      \"Confusion matrix:\\n\",\n+      \"H V P M \\n\",\n+      \"[[4483   42  243  186]\\n\",\n+      \" [ 199 1518 1764 1619]\\n\",\n+      \" [ 307  839 2896  929]\\n\",\n+      \" [ 191  973  982 2816]]\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0101: 0.7432331015159854\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0011: 0.6937009055886326\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0110: 0.7351278330915095\\n\",\n+      \"Test accuracy: 0.5860309200980638\\n\",\n+      \"\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13992, 500), before header:(5995, 500)\\n\",\n+      \"Confusion matrix:\\n\",\n+      \"H V P M \\n\",\n+      \"[[4506   51  212  185]\\n\",\n+      \" [ 207 1529 1635 1729]\\n\",\n+      \" [ 300  838 2705 1128]\\n\",\n+      \" [ 169  982  881 2930]]\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0101: 0.7451343373192575\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0011: 0.6973032471106219\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0110: 0.7253214589483165\\n\",\n+      \"Test accuracy: 0.583879521689098\\n\",\n+      \"\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13992, 500), before header:(5995, 500)\\n\",\n+      \"Confusion matrix:\\n\",\n+      \"H V P M \\n\",\n+      \"[[4499   50  215  190]\\n\",\n+      \" [ 244 1536 1620 1700]\\n\",\n+      \" [ 350  879 2718 1024]\\n\",\n+      \" [ 186  929  856 2991]]\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0101: 0.7473858007705009\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0011: 0.6963526292089859\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0110: 0.7314254265272427\\n\",\n+      \"Test accuracy: 0.5875819282533646\\n\",\n+      \"\\n\",\n+      \"\\n\",\n+      \"\\n\",\n+      \"created a json file of the test accuracies at /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/result_vary_raining_data_20220704-1556.json\\n\",\n+      \"------------- dataset 0: FPGA2.5cm with max_train_files=18 ----------------------------------\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13992, 500), before header:(5995, 500)\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13992, 500), before header:(5995, 500)\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13992, 500), before header:(5995, 500)\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13992, 500), before header:(5995, 500)\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13992, 500), before header:(5995, 500)\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13992, 500), before header:(5995, 500)\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13992, 500), before header:(5995, 500)\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13992, 500), before header:(5995, 500)\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13992, 500), before header:(5995, 500)\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13992, 500), before header:(5995, 500)\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13992, 500), before header:(5996, 500)\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13992, 500), before header:(5996, 500)\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13992, 500), before header:(5995, 500)\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13992, 500), before header:(5995, 500)\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13992, 500), before header:(5995, 500)\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13992, 500), before header:(5995, 500)\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13992, 500), before header:(5995, 500)\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13992, 500), before header:(5995, 500)\\n\",\n+      \"Model: \\\"sequential_16\\\"\\n\",\n+      \"_________________________________________________________________\\n\",\n+      \"Layer (type)                 Output Shape              Param #   \\n\",\n+      \"=================================================================\\n\",\n+      \"reshape_16 (Reshape)         (None, 500, 1)            0         \\n\",\n+      \"_________________________________________________________________\\n\",\n+      \"gaussian_noise_16 (GaussianN (None, 500, 1)            0         \\n\",\n+      \"_________________________________________________________________\\n\",\n+      \"conv1d_48 (Conv1D)           (None, 500, 13)           52        \\n\",\n+      \"_________________________________________________________________\\n\",\n+      \"max_pooling1d_48 (MaxPooling (None, 250, 13)           0         \\n\",\n+      \"_________________________________________________________________\\n\",\n+      \"spatial_dropout1d_48 (Spatia (None, 250, 13)           0         \\n\",\n+      \"_________________________________________________________________\\n\",\n+      \"batch_normalization_48 (Batc (None, 250, 13)           52        \\n\",\n+      \"_________________________________________________________________\\n\",\n+      \"conv1d_49 (Conv1D)           (None, 250, 118)          23128     \\n\",\n+      \"_________________________________________________________________\\n\",\n+      \"max_pooling1d_49 (MaxPooling (None, 250, 118)          0         \\n\",\n+      \"_________________________________________________________________\\n\",\n+      \"spatial_dropout1d_49 (Spatia (None, 250, 118)          0         \\n\",\n+      \"_________________________________________________________________\\n\",\n+      \"batch_normalization_49 (Batc (None, 250, 118)          472       \\n\",\n+      \"_________________________________________________________________\\n\",\n+      \"conv1d_50 (Conv1D)           (None, 250, 100)          59100     \\n\",\n+      \"_________________________________________________________________\\n\",\n+      \"max_pooling1d_50 (MaxPooling (None, 62, 100)           0         \\n\",\n+      \"_________________________________________________________________\\n\",\n+      \"batch_normalization_50 (Batc (None, 62, 100)           400       \\n\",\n+      \"_________________________________________________________________\\n\",\n+      \"spatial_dropout1d_50 (Spatia (None, 62, 100)           0         \\n\",\n+      \"_________________________________________________________________\\n\",\n+      \"flatten_16 (Flatten)         (None, 6200)              0         \\n\",\n+      \"_________________________________________________________________\\n\",\n+      \"dense_32 (Dense)             (None, 224)               1389024   \\n\",\n+      \"_________________________________________________________________\\n\",\n+      \"dense_33 (Dense)             (None, 4)                 900       \\n\",\n+      \"=================================================================\\n\",\n+      \"Total params: 1,473,128\\n\",\n+      \"Trainable params: 1,472,666\\n\",\n+      \"Non-trainable params: 462\\n\",\n+      \"_________________________________________________________________\\n\",\n+      \"Epoch 1/10\\n\",\n+      \"2655/2655 [==============================] - 27s 9ms/step - loss: 1.0897 - accuracy: 0.4743 - val_loss: 0.9748 - val_accuracy: 0.5279\\n\",\n+      \"Epoch 2/10\\n\",\n+      \"2655/2655 [==============================] - 25s 9ms/step - loss: 0.9935 - accuracy: 0.5247 - val_loss: 0.9310 - val_accuracy: 0.5558\\n\",\n+      \"Epoch 3/10\\n\",\n+      \"2655/2655 [==============================] - 24s 9ms/step - loss: 0.9646 - accuracy: 0.5422 - val_loss: 0.9128 - val_accuracy: 0.5661\\n\",\n+      \"Epoch 4/10\\n\",\n+      \"2655/2655 [==============================] - 25s 9ms/step - loss: 0.9510 - accuracy: 0.5514 - val_loss: 0.9008 - val_accuracy: 0.5712\\n\",\n+      \"Epoch 5/10\\n\",\n+      \"2655/2655 [==============================] - 25s 9ms/step - loss: 0.9353 - accuracy: 0.5603 - val_loss: 0.8779 - val_accuracy: 0.5838\\n\",\n+      \"Epoch 6/10\\n\",\n+      \"2655/2655 [==============================] - 25s 9ms/step - loss: 0.9198 - accuracy: 0.5714 - val_loss: 0.8708 - val_accuracy: 0.5902\\n\",\n+      \"Epoch 7/10\\n\",\n+      \"2655/2655 [==============================] - 25s 9ms/step - loss: 0.9104 - accuracy: 0.5767 - val_loss: 0.8631 - val_accuracy: 0.5990\\n\",\n+      \"Epoch 8/10\\n\",\n+      \"2655/2655 [==============================] - 26s 10ms/step - loss: 0.9027 - accuracy: 0.5816 - val_loss: 0.8538 - val_accuracy: 0.6018\\n\",\n+      \"Epoch 9/10\\n\",\n+      \"2655/2655 [==============================] - 26s 10ms/step - loss: 0.8966 - accuracy: 0.5858 - val_loss: 0.8545 - val_accuracy: 0.6028\\n\",\n+      \"Epoch 10/10\\n\",\n+      \"2655/2655 [==============================] - 26s 10ms/step - loss: 0.8902 - accuracy: 0.5894 - val_loss: 0.8506 - val_accuracy: 0.6024\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13992, 500), before header:(5995, 500)\\n\",\n+      \"Confusion matrix:\\n\",\n+      \"H V P M \\n\",\n+      \"[[4568   65  146  175]\\n\",\n+      \" [ 243 1928 1101 1828]\\n\",\n+      \" [ 357 1335 2143 1136]\\n\",\n+      \" [ 194 1129  615 3024]]\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0101: 0.7566418171811677\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0011: 0.6865462550657928\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0110: 0.7238705158352929\\n\",\n+      \"Test accuracy: 0.5835292940411267\\n\",\n+      \"\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13992, 500), before header:(5996, 500)\\n\",\n+      \"Confusion matrix:\\n\",\n+      \"H V P M \\n\",\n+      \"[[4467  112  195  180]\\n\",\n+      \" [ 190 2049 1202 1660]\\n\",\n+      \" [ 356 1427 2260  928]\\n\",\n+      \" [ 210 1277  671 2804]]\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0101: 0.7538523113868321\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0011: 0.6744546728036822\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0110: 0.7303882329397638\\n\",\n+      \"Test accuracy: 0.5793476085651391\\n\",\n+      \"\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13992, 500), before header:(5995, 500)\\n\",\n+      \"Confusion matrix:\\n\",\n+      \"H V P M \\n\",\n+      \"[[4555   77  154  168]\\n\",\n+      \" [ 207 1995 1165 1733]\\n\",\n+      \" [ 358 1436 2201  976]\\n\",\n+      \" [ 215 1221  610 2916]]\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0101: 0.7571421423925552\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0011: 0.6772902386551258\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0110: 0.7330264672036824\\n\",\n+      \"Test accuracy: 0.5837294241256817\\n\",\n+      \"\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13992, 500), before header:(5995, 500)\\n\",\n+      \"Confusion matrix:\\n\",\n+      \"H V P M \\n\",\n+      \"[[4550   83  145  176]\\n\",\n+      \" [ 200 1973 1070 1857]\\n\",\n+      \" [ 343 1370 2140 1118]\\n\",\n+      \" [ 179 1151  586 3046]]\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0101: 0.7607444839145444\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0011: 0.6852454095161855\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0110: 0.7256716865962876\\n\",\n+      \"Test accuracy: 0.5858307900135088\\n\",\n+      \"\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13992, 500), before header:(5995, 500)\\n\",\n+      \"Confusion matrix:\\n\",\n+      \"H V P M \\n\",\n+      \"[[4584   71  124  175]\\n\",\n+      \" [ 243 1903 1085 1869]\\n\",\n+      \" [ 375 1358 2146 1092]\\n\",\n+      \" [ 229 1043  574 3116]]\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0101: 0.7584930204633011\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0011: 0.6868964827137639\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0110: 0.7302746785410517\\n\",\n+      \"Test accuracy: 0.5878320908590584\\n\",\n+      \"\\n\",\n+      \"\\n\",\n+      \"\\n\",\n+      \"created a json file of the test accuracies at /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/result_vary_raining_data_20220704-1556.json\\n\",\n+      \"------------- dataset 0: FPGA2.5cm with max_train_files=19 ----------------------------------\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13992, 500), before header:(5995, 500)\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13992, 500), before header:(5995, 500)\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13992, 500), before header:(5995, 500)\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13992, 500), before header:(5995, 500)\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13992, 500), before header:(5995, 500)\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13992, 500), before header:(5995, 500)\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13992, 500), before header:(5995, 500)\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13992, 500), before header:(5995, 500)\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13992, 500), before header:(5995, 500)\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13992, 500), before header:(5995, 500)\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13992, 500), before header:(5996, 500)\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13992, 500), before header:(5996, 500)\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13992, 500), before header:(5995, 500)\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13992, 500), before header:(5995, 500)\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13992, 500), before header:(5995, 500)\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13992, 500), before header:(5995, 500)\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13992, 500), before header:(5995, 500)\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13992, 500), before header:(5995, 500)\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13992, 500), before header:(5995, 500)\\n\",\n+      \"Model: \\\"sequential_17\\\"\\n\",\n+      \"_________________________________________________________________\\n\",\n+      \"Layer (type)                 Output Shape              Param #   \\n\",\n+      \"=================================================================\\n\",\n+      \"reshape_17 (Reshape)         (None, 500, 1)            0         \\n\",\n+      \"_________________________________________________________________\\n\",\n+      \"gaussian_noise_17 (GaussianN (None, 500, 1)            0         \\n\",\n+      \"_________________________________________________________________\\n\",\n+      \"conv1d_51 (Conv1D)           (None, 500, 13)           52        \\n\",\n+      \"_________________________________________________________________\\n\",\n+      \"max_pooling1d_51 (MaxPooling (None, 250, 13)           0         \\n\",\n+      \"_________________________________________________________________\\n\",\n+      \"spatial_dropout1d_51 (Spatia (None, 250, 13)           0         \\n\",\n+      \"_________________________________________________________________\\n\",\n+      \"batch_normalization_51 (Batc (None, 250, 13)           52        \\n\",\n+      \"_________________________________________________________________\\n\",\n+      \"conv1d_52 (Conv1D)           (None, 250, 118)          23128     \\n\",\n+      \"_________________________________________________________________\\n\",\n+      \"max_pooling1d_52 (MaxPooling (None, 250, 118)          0         \\n\",\n+      \"_________________________________________________________________\\n\",\n+      \"spatial_dropout1d_52 (Spatia (None, 250, 118)          0         \\n\",\n+      \"_________________________________________________________________\\n\",\n+      \"batch_normalization_52 (Batc (None, 250, 118)          472       \\n\",\n+      \"_________________________________________________________________\\n\",\n+      \"conv1d_53 (Conv1D)           (None, 250, 100)          59100     \\n\",\n+      \"_________________________________________________________________\\n\",\n+      \"max_pooling1d_53 (MaxPooling (None, 62, 100)           0         \\n\",\n+      \"_________________________________________________________________\\n\",\n+      \"batch_normalization_53 (Batc (None, 62, 100)           400       \\n\",\n+      \"_________________________________________________________________\\n\",\n+      \"spatial_dropout1d_53 (Spatia (None, 62, 100)           0         \\n\",\n+      \"_________________________________________________________________\\n\",\n+      \"flatten_17 (Flatten)         (None, 6200)              0         \\n\",\n+      \"_________________________________________________________________\\n\",\n+      \"dense_34 (Dense)             (None, 224)               1389024   \\n\",\n+      \"_________________________________________________________________\\n\",\n+      \"dense_35 (Dense)             (None, 4)                 900       \\n\",\n+      \"=================================================================\\n\",\n+      \"Total params: 1,473,128\\n\",\n+      \"Trainable params: 1,472,666\\n\",\n+      \"Non-trainable params: 462\\n\",\n+      \"_________________________________________________________________\\n\",\n+      \"Epoch 1/10\\n\",\n+      \"2811/2811 [==============================] - 30s 10ms/step - loss: 1.0804 - accuracy: 0.4785 - val_loss: 0.9671 - val_accuracy: 0.5300\\n\",\n+      \"Epoch 2/10\\n\",\n+      \"2811/2811 [==============================] - 27s 10ms/step - loss: 0.9897 - accuracy: 0.5299 - val_loss: 0.9202 - val_accuracy: 0.5601\\n\",\n+      \"Epoch 3/10\\n\",\n+      \"2811/2811 [==============================] - 27s 10ms/step - loss: 0.9582 - accuracy: 0.5498 - val_loss: 0.8987 - val_accuracy: 0.5714\\n\",\n+      \"Epoch 4/10\\n\",\n+      \"2811/2811 [==============================] - 27s 10ms/step - loss: 0.9406 - accuracy: 0.5609 - val_loss: 0.8892 - val_accuracy: 0.5823\\n\",\n+      \"Epoch 5/10\\n\",\n+      \"2811/2811 [==============================] - 27s 10ms/step - loss: 0.9315 - accuracy: 0.5658 - val_loss: 0.8823 - val_accuracy: 0.5872\\n\",\n+      \"Epoch 6/10\\n\",\n+      \"2811/2811 [==============================] - 27s 10ms/step - loss: 0.9239 - accuracy: 0.5715 - val_loss: 0.8715 - val_accuracy: 0.5898\\n\",\n+      \"Epoch 7/10\\n\",\n+      \"2811/2811 [==============================] - 28s 10ms/step - loss: 0.9137 - accuracy: 0.5777 - val_loss: 0.8646 - val_accuracy: 0.5975\\n\",\n+      \"Epoch 8/10\\n\",\n+      \"2811/2811 [==============================] - 27s 10ms/step - loss: 0.9072 - accuracy: 0.5824 - val_loss: 0.8595 - val_accuracy: 0.6005\\n\",\n+      \"Epoch 9/10\\n\",\n+      \"2811/2811 [==============================] - 27s 10ms/step - loss: 0.9014 - accuracy: 0.5847 - val_loss: 0.8536 - val_accuracy: 0.6023\\n\",\n+      \"Epoch 10/10\\n\",\n+      \"2811/2811 [==============================] - 27s 10ms/step - loss: 0.8968 - accuracy: 0.5880 - val_loss: 0.8541 - val_accuracy: 0.6036\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13992, 500), before header:(5995, 500)\\n\",\n+      \"Confusion matrix:\\n\",\n+      \"H V P M \\n\",\n+      \"[[4545   90  191  128]\\n\",\n+      \" [ 237 2234 1278 1351]\\n\",\n+      \" [ 349 1394 2334  894]\\n\",\n+      \" [ 214 1526  711 2511]]\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0101: 0.7525391504477911\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0011: 0.6782408565567619\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0110: 0.7323760444288788\\n\",\n+      \"Test accuracy: 0.5815780257167159\\n\",\n+      \"\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13992, 500), before header:(5996, 500)\\n\",\n+      \"Confusion matrix:\\n\",\n+      \"H V P M \\n\",\n+      \"[[4451  102  255  146]\\n\",\n+      \" [ 199 2287 1331 1284]\\n\",\n+      \" [ 321 1451 2402  797]\\n\",\n+      \" [ 197 1591  761 2413]]\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0101: 0.7506503902341405\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0011: 0.6710026015609366\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0110: 0.7343406043626176\\n\",\n+      \"Test accuracy: 0.5779967980788473\\n\",\n+      \"\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13992, 500), before header:(5995, 500)\\n\",\n+      \"Confusion matrix:\\n\",\n+      \"H V P M \\n\",\n+      \"[[4565   85  188  116]\\n\",\n+      \" [ 208 2262 1269 1361]\\n\",\n+      \" [ 342 1423 2362  844]\\n\",\n+      \" [ 209 1484  706 2563]]\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0101: 0.7568419472657227\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0011: 0.6801921248811728\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0110: 0.7389303046980538\\n\",\n+      \"Test accuracy: 0.5879821884224746\\n\",\n+      \"\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13992, 500), before header:(5995, 500)\\n\",\n+      \"Confusion matrix:\\n\",\n+      \"H V P M \\n\",\n+      \"[[4551   87  194  122]\\n\",\n+      \" [ 210 2242 1269 1379]\\n\",\n+      \" [ 302 1351 2372  946]\\n\",\n+      \" [ 198 1502  703 2559]]\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0101: 0.7555411017161154\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0011: 0.6839445639665783\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0110: 0.733676889978486\\n\",\n+      \"Test accuracy: 0.5865812778305899\\n\",\n+      \"\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13992, 500), before header:(5995, 500)\\n\",\n+      \"Confusion matrix:\\n\",\n+      \"H V P M \\n\",\n+      \"[[4558   91  176  129]\\n\",\n+      \" [ 263 2262 1172 1403]\\n\",\n+      \" [ 365 1385 2304  917]\\n\",\n+      \" [ 227 1421  690 2624]]\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0101: 0.7561414919697803\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0011: 0.6858958322909892\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0110: 0.7335267924150698\\n\",\n+      \"Test accuracy: 0.5877820583379196\\n\",\n+      \"\\n\",\n+      \"\\n\",\n+      \"\\n\",\n+      \"created a json file of the test accuracies at /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/result_vary_raining_data_20220704-1556.json\\n\",\n+      \"------------- dataset 0: FPGA2.5cm with max_train_files=20 ----------------------------------\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13992, 500), before header:(5995, 500)\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13992, 500), before header:(5995, 500)\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13992, 500), before header:(5995, 500)\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13992, 500), before header:(5995, 500)\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13992, 500), before header:(5995, 500)\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13992, 500), before header:(5995, 500)\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13992, 500), before header:(5995, 500)\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13992, 500), before header:(5995, 500)\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13992, 500), before header:(5995, 500)\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13992, 500), before header:(5995, 500)\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13992, 500), before header:(5996, 500)\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13992, 500), before header:(5996, 500)\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13992, 500), before header:(5995, 500)\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13992, 500), before header:(5995, 500)\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13992, 500), before header:(5995, 500)\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13992, 500), before header:(5995, 500)\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13992, 500), before header:(5995, 500)\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13992, 500), before header:(5995, 500)\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13992, 500), before header:(5995, 500)\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13992, 500), before header:(5995, 500)\\n\",\n+      \"Model: \\\"sequential_18\\\"\\n\",\n+      \"_________________________________________________________________\\n\",\n+      \"Layer (type)                 Output Shape              Param #   \\n\",\n+      \"=================================================================\\n\",\n+      \"reshape_18 (Reshape)         (None, 500, 1)            0         \\n\",\n+      \"_________________________________________________________________\\n\",\n+      \"gaussian_noise_18 (GaussianN (None, 500, 1)            0         \\n\",\n+      \"_________________________________________________________________\\n\",\n+      \"conv1d_54 (Conv1D)           (None, 500, 13)           52        \\n\",\n+      \"_________________________________________________________________\\n\",\n+      \"max_pooling1d_54 (MaxPooling (None, 250, 13)           0         \\n\",\n+      \"_________________________________________________________________\\n\",\n+      \"spatial_dropout1d_54 (Spatia (None, 250, 13)           0         \\n\",\n+      \"_________________________________________________________________\\n\",\n+      \"batch_normalization_54 (Batc (None, 250, 13)           52        \\n\",\n+      \"_________________________________________________________________\\n\",\n+      \"conv1d_55 (Conv1D)           (None, 250, 118)          23128     \\n\",\n+      \"_________________________________________________________________\\n\",\n+      \"max_pooling1d_55 (MaxPooling (None, 250, 118)          0         \\n\",\n+      \"_________________________________________________________________\\n\",\n+      \"spatial_dropout1d_55 (Spatia (None, 250, 118)          0         \\n\",\n+      \"_________________________________________________________________\\n\",\n+      \"batch_normalization_55 (Batc (None, 250, 118)          472       \\n\",\n+      \"_________________________________________________________________\\n\",\n+      \"conv1d_56 (Conv1D)           (None, 250, 100)          59100     \\n\",\n+      \"_________________________________________________________________\\n\",\n+      \"max_pooling1d_56 (MaxPooling (None, 62, 100)           0         \\n\",\n+      \"_________________________________________________________________\\n\",\n+      \"batch_normalization_56 (Batc (None, 62, 100)           400       \\n\",\n+      \"_________________________________________________________________\\n\",\n+      \"spatial_dropout1d_56 (Spatia (None, 62, 100)           0         \\n\",\n+      \"_________________________________________________________________\\n\",\n+      \"flatten_18 (Flatten)         (None, 6200)              0         \\n\",\n+      \"_________________________________________________________________\\n\",\n+      \"dense_36 (Dense)             (None, 224)               1389024   \\n\",\n+      \"_________________________________________________________________\\n\",\n+      \"dense_37 (Dense)             (None, 4)                 900       \\n\",\n+      \"=================================================================\\n\",\n+      \"Total params: 1,473,128\\n\",\n+      \"Trainable params: 1,472,666\\n\",\n+      \"Non-trainable params: 462\\n\",\n+      \"_________________________________________________________________\\n\",\n+      \"Epoch 1/10\\n\",\n+      \"2967/2967 [==============================] - 31s 10ms/step - loss: 1.0908 - accuracy: 0.4709 - val_loss: 0.9945 - val_accuracy: 0.5103\\n\",\n+      \"Epoch 2/10\\n\",\n+      \"2967/2967 [==============================] - 29s 10ms/step - loss: 1.0081 - accuracy: 0.5105 - val_loss: 0.9668 - val_accuracy: 0.5233\\n\",\n+      \"Epoch 3/10\\n\",\n+      \"2967/2967 [==============================] - 28s 9ms/step - loss: 0.9766 - accuracy: 0.5339 - val_loss: 0.9153 - val_accuracy: 0.5672\\n\",\n+      \"Epoch 4/10\\n\",\n+      \"2967/2967 [==============================] - 28s 9ms/step - loss: 0.9522 - accuracy: 0.5529 - val_loss: 0.9004 - val_accuracy: 0.5730\\n\",\n+      \"Epoch 5/10\\n\",\n+      \"2967/2967 [==============================] - 29s 10ms/step - loss: 0.9386 - accuracy: 0.5624 - val_loss: 0.8889 - val_accuracy: 0.5797\\n\",\n+      \"Epoch 6/10\\n\",\n+      \"2967/2967 [==============================] - 29s 10ms/step - loss: 0.9251 - accuracy: 0.5679 - val_loss: 0.8726 - val_accuracy: 0.5909\\n\",\n+      \"Epoch 7/10\\n\",\n+      \"2967/2967 [==============================] - 29s 10ms/step - loss: 0.9128 - accuracy: 0.5751 - val_loss: 0.8628 - val_accuracy: 0.5958\\n\",\n+      \"Epoch 8/10\\n\",\n+      \"2615/2967 [=========================>....] - ETA: 3s - loss: 0.9049 - accuracy: 0.5815\"\n      ]\n     }\n    ],\n@@ -2229,7 +3070,7 @@\n     \"    \\\"validation_accuracies\\\": validation_accuracy,\\n\",\n     \"    'measurement_metadata': measurement_metadata, \\n\",\n     \"    'n_classes': num_classes,\\n\",\n-    \"    'data_augmentation_halflength': data_augmentation_halflength = 1,\\n\",\n+    \"    'data_augmentation_halflength': data_augmentation_halflength,\\n\",\n     \"     }, \\n\",\n     \"     target_file_path=result_file_path, \\n\",\n     \"     override=True, )\\n\",\n\n---", "paper/Visualize_Results_Vary_Train_Data.ipynb\n=======================================================\nlhs: 100644 | a385c1dc2f547584376ec5d5a73ddef362ad00ac\nrhs: 100644 | 6a220c92704e5e03a115d2ac4bd179eb2170395b\n---@@ -21,7 +21,7 @@\n   },\n   {\n    \"cell_type\": \"code\",\n-   \"execution_count\": 89,\n+   \"execution_count\": 94,\n    \"id\": \"6d344711-3707-40af-9763-afd5e0f7bf17\",\n    \"metadata\": {},\n    \"outputs\": [],\n@@ -70,7 +70,7 @@\n     \"\\n\",\n     \"    ax.legend()\\n\",\n     \"    ax.set_ylabel(\\\"Accuracy (%)\\\")\\n\",\n-    \"    ax.set_xlabel(\\\"Distance (cm)\\\")\\n\",\n+    \"    ax.set_xlabel(\\\"Number of measurements\\\")\\n\",\n     \"    ax.set_title(title)\\n\",\n     \"    if target_png_path:\\n\",\n     \"        plt.savefig(target_png_path)\\n\",\n@@ -86,7 +86,7 @@\n   },\n   {\n    \"cell_type\": \"code\",\n-   \"execution_count\": 90,\n+   \"execution_count\": 95,\n    \"id\": \"ca1fe49b-f77b-4422-a172-7eb144577936\",\n    \"metadata\": {},\n    \"outputs\": [],\n@@ -103,7 +103,7 @@\n     \"            n_classes = 0\\n\",\n     \"        guessing_level_percent = 50 if n_classes == 2 else 25\\n\",\n     \"\\n\",\n-    \"    title = f\\\"Information in the Distance ({n_classes} classes) from {path}\\\"\\n\",\n+    \"    title = f\\\"Advantage of more training data ({n_classes} classes) from {path}\\\"\\n\",\n     \"    return dict_test_accuracies, dict_val_accuracies, guessing_level_percent, title\"\n    ]\n   },\n@@ -117,7 +117,7 @@\n   },\n   {\n    \"cell_type\": \"code\",\n-   \"execution_count\": 93,\n+   \"execution_count\": 99,\n    \"id\": \"301626aa-b0b7-46a7-861c-6144a1d446e8\",\n    \"metadata\": {},\n    \"outputs\": [\n@@ -149,7 +149,7 @@\n     },\n     {\n      \"data\": {\n-      \"image/png\": \"\\n\",\n+      \"image/png\": \"\\n\",\n       \"text/plain\": [\n        \"<Figure size 1440x1080 with 1 Axes>\"\n       ]\n@@ -183,7 +183,7 @@\n   },\n   {\n    \"cell_type\": \"code\",\n-   \"execution_count\": 92,\n+   \"execution_count\": 100,\n    \"id\": \"9b1c2ac3-dce9-449f-a4c5-cc3f4dab0e72\",\n    \"metadata\": {},\n    \"outputs\": [\n@@ -192,7 +192,8 @@\n      \"output_type\": \"stream\",\n      \"text\": [\n       \"Warning. Failed to interpret n_classes from json file! Set to default.\\n\",\n-      \"distance=array([ 2.,  3.,  4.,  5.,  6.,  7.,  8.,  9., 10., 11., 12., 13., 14.]), accuracy=array([[54.37534397, 52.61156694, 53.84499925, 54.60049032, 54.68054235],\\n\",\n+      \"distance=array([ 2.,  3.,  4.,  5.,  6.,  7.,  8.,  9., 10., 11., 12., 13., 14.,\\n\",\n+      \"       15.]), accuracy=array([[54.37534397, 52.61156694, 53.84499925, 54.60049032, 54.68054235],\\n\",\n       \"       [55.57612448, 55.65339204, 56.00140091, 56.41667084, 55.56611798],\\n\",\n       \"       [55.96637815, 55.47328397, 56.67183669, 55.94136189, 56.10146595],\\n\",\n       \"       [56.95201881, 56.91915149, 57.65247411, 57.59243508, 57.5073798 ],\\n\",\n@@ -204,10 +205,12 @@\n       \"       [58.63811477, 58.92035221, 59.773853  , 58.80322209, 59.4186221 ],\\n\",\n       \"       [59.59873918, 59.38062838, 59.90393756, 59.78385951, 59.54370341],\\n\",\n       \"       [59.35858308, 59.08545127, 59.56871967, 59.13843999, 59.25351478],\\n\",\n-      \"       [59.20848552, 58.6151691 , 60.17911643, 60.02901886, 60.05403512]])\\n\",\n-      \"distance=array([ 2.,  3.,  4.,  5.,  6.,  7.,  8.,  9., 10., 11., 12., 13., 14.]), accuracy=array([55.3309679 , 56.76689744, 57.81758428, 59.02836919, 59.3685925 ,\\n\",\n+      \"       [59.20848552, 58.6151691 , 60.17911643, 60.02901886, 60.05403512],\\n\",\n+      \"       [59.56371642, 59.4506704 , 60.25916846, 59.93395707, 60.14409366]])\\n\",\n+      \"distance=array([ 2.,  3.,  4.,  5.,  6.,  7.,  8.,  9., 10., 11., 12., 13., 14.,\\n\",\n+      \"       15.]), accuracy=array([55.3309679 , 56.76689744, 57.81758428, 59.02836919, 59.3685925 ,\\n\",\n       \"       60.0990653 , 60.63941717, 60.98464131, 61.11472249, 61.35488153,\\n\",\n-      \"       62.05533743, 62.20043302, 61.92525029])\\n\",\n+      \"       62.05533743, 62.20043302, 61.92525029, 62.46560216])\\n\",\n       \"Warning. Failed to interpret n_classes from json file! Set to default.\\n\",\n       \"distance=array([ 2.,  3.,  4.,  5.,  6.,  7.,  8.,  9., 10., 11., 12., 13., 14.]), accuracy=array([[52.669235  , 51.49589754, 52.13388703, 52.59418622, 52.52914394],\\n\",\n       \"       [53.93005454, 54.19251551, 54.94071146, 54.36033422, 54.41036674],\\n\",\n@@ -229,7 +232,7 @@\n     },\n     {\n      \"data\": {\n-      \"image/png\": \"\\n\",\n+      \"image/png\": \"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IZskLVmyRC1atLCWoZUoUULx8fHW5ysmJsZaThceHq62bduqbNmyWrp0qd544w2tWLFCH374obVp95kzOccFv/zyi8LCwlS2bFm1bdtW69ev1yuvvGIdnzdvnr755hstXLjQeraenp6qX7++SpQoIQ8PD7344ovatWtXjmO4ublp+/btatWqlVasWJHj5/LW9+7WWV3ZBWkPk/sdJIVJ6vTbz50kfX1Le1vDMAoYhlFOUiVJ2+9zbQAAAADwyCtQoIDOnz+vLVu2SEoPGvbv36+bN29a3/I1YcIExcfHKzExUU888USOS4QSEhL01FPpu5LMnTvXam/UqJFmzJhhBQUXL16Ul5eXzpw5Yy1XunLlissbTZumqb1798rpdEpSlpoaN26sadOmWb+g7969W5L03//+V+XLl1ffvn0VEhKivXv33vZ+br2vkiVLKl++fNqwYYNOnDghSQoKCtKSJUsUFxdn3VdG+8cffywpfYbX5cuXVapUKZ07d05xcXG6fv26vvnmm9uOl/Ec582bZ7U3atTIWr4nyZrlFBAQoFOnTunzzz9Xu3btbvvcunXrpipVqmTZRykkJMQaa968eXr55ZclpS9ba9q0qcaNG6c6depkumbo0KFKSEjQBx98kGNfS5cu1fPPP58pRPniiy8y1WkYhgIDA629gm4d//jx44qOjlZ0dLRat26tjz76SM2bN1evXr2soDAjdMrOuHHjFBMTo+joaC1atEjPP/+8PvvsM0npm7W/9957CgsLk4eHh3VN48aNtXfvXiUlJSk1NVU//vijqlatmuMYiYmJSkhI0IsvvqgPPvjAWiZZu3ZtawbZwoUL9dxzz+XYx8PsngVJhmF8IWmLpMqGYcQYhtFN0nhJwYZhREkK/u21TNPcL2mJpAOSVkvqZZpm2r2qDQAAAAD+qvLkyaOlS5dq8ODBcjgccjqd2rx5s9LS0vTKK6/IZrPJ19dX/fv3V5EiRfTSSy9p+fLl2W62PWjQIL399tuqU6eO0tL+71e47t2765lnnrE2MP7888+VP39+LV68WH369JHD4VBwcLCSk5N15swZvfjii9nW2r17d4WHh2vnzp3y9fW1wonAwEAdOHDA2mx72LBhunHjhux2u3x8fDRs2DBJ0uLFi+Xj4yOn06lDhw6pY8eOKl68uOrUqSMfH58cN9tu3769wsPDVa1a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F16wnt/333+v5ORktW/fXuvXr1dwcLBeeukltWvXTgUKFNCMGTPUqVOnTPtJ/Z7NZtOAAQM0ePBgNWvWTHXr1tWePXtUrlw5Pfvss5LSZ2Z9+OGH6tevnyRZnz9/f/9MIfGfjRlJAAAAAPAI27hxo9auXastW7Zoz5498vX1VXJysiQpNDRUS5Ys0bJly9SiRQsZhpHtL+B3yzRNderUSREREYqIiNDhw4c1cuRIFS1aVHv27FGDBg304Ycfqnv37nfsq3Pnzpo+fboiIyM1YsQIq/acxr3bpUS32r59u2rUqJGl/ebNmypSpIh1PxERETp48KAkacaMGRozZoxOnTolp9OpuLg4l8YaNmyYAgMDtW/fPq1cudK6r+zuIaf7cnNz082bN63Xtz4bd3d35c2b12p/4403tHTpUkVGRurVV19VcnLybd/rDh06aOHChZozZ0624dqtYmJi1KJFC82fP18VKlSQlD4DKGPJWsY5GUvgpPTAbOzYsQoLC1OBAgWs9suXL6tp06YaM2aMatasKSl9pk18fLxSU1Oz7UuSFi1aZC1ryxj/1lk/GdccO3ZMx48fl8PhUNmyZRUTEyM/Pz/9+uuv6tKli5xOp0uzrzJUqVJFjz/+uPbt25ep3d3dXSEhIdZyuuLFi1v3+eqrr2rnzp237ffZZ5+1Nit/++23NWrUqDv+28zoP2/evNazuhcIkgAAAADgEZaQkKCiRYvKw8NDhw4d0tatW61jLVu21IoVK/TFF19YS7Cee+45K9hITEzUt99+e9djBgUFaenSpTp37pwk6eLFizpx4oQuXLigmzdvqlWrVho9erR27dolSXriiSd05cqVbPu6cuWKSpcurRs3bmjhwoWZxshY1pOWlqbLly8rKChIS5YsscKcjG/vcsX+/fvl5eVlhS+31lSoUCGVK1dOX375paT0YGfPnj2SpGPHjikgIECjRo1SiRIldOrUqdveT4aEhAQ99dRTktL3p8rQqFEjzZgxwwoCLl68KC8vL505c0Y7duywnklqaqrKli2riIgI3bx5U6dOndL27duzHSsjYCpRooQSExO1dOlS6748PT2t/YauX79u7UHVuXNnffDBB5LS9z7KSXx8vJo2bapx48apTp06Vnvp0qX1xBNPaOvWrTJNU/Pnz9fLL78sSdq9e7dee+01hYWFqWTJktY1KSkpatGihTp27Jhp9pdhGAoMDLTqnjdvntVXxrP88ccfM7VVr15dUVFROn78uFJSUrRo0SKFhITIZrPp3Llzio6OVnR0tDw9PbVr1y797W9/05w5c1z6xr3jx49b78+JEyd0+PBhlS1bVomJiYqNjZWUvkfSd999Jy8vL0my2qX0pXVVqlS57RhnzpyRh4eHXnnlFQ0YMEC7du2Sl5eXoqOjdfToUUnSggULVL9+/dv2cy8QJAEAAADAI6xJkyZKTU2V3W7XsGHDrFkeklS0aFFVrVpVJ06csGbiVK9eXSEhIXI4HGrZsqWqVaumwoULS0qffTNjxow7jlm1alWNGTNGjRo1kt1uV3BwsGJjY3X69Gk1aNBATqdTnTt31rhx4ySlhxY9e/bMdrPt0aNHKyAgQMHBwdYv5ZI0ZcoUbdiwwfra+f3798vb21vvvvuu6tevL4fDobfeektS+i/uw4cPz7ZWp9MpSVq1apWaNGlitbdt21bvv/++fH19dezYMS1cuFCzZs2yvto9Y6bJwIEDZbPZ5OPjo3r16snhcCgwMFAHDhy47WbbgwYN0ttvv606depYXxEvSd27d9czzzxjbRj++eefK3/+/Fq8eLH69Okjh8Oh4OBgJScnq06dOipXrpy1DMrPzy/bsYoUKaJXX31VNptNzZs3t5bISelhxNSpU2W321W7dm39+uuvkqRSpUqpSpUqd5yNNH36dB09elSjR4+2vto+I0D8+OOP1b17d1WsWFEVKlSw9kIaOHCgEhMT1aZNGzmdToWEhEiSlixZok2bNmnu3LlWXxEREZKk9957T5MmTVLFihUVFxenbt26WTUsX75cjRo10uOPP261ubm5afr06WrcuLGqVKmif/zjH7cNxLKzfPlyeXp6asuWLWratKm1rPLnn3+Ww+GQ0+lUixYt9NFHH6lEiRK6evWqQkJCrPeuZMmS6tmzp6T05aXe3t5yOByaOnVqpvAw4zOYwTAMRUZGWpvVjx07VkOHDpW7u7vmzJmjNm3ayGazKU+ePFb/95PxZ0xbzC3VqlUz/8jGbwAAAABwvxw8ePCOsw8eNImJiSpYsKCSkpJUr149zZw5M8eQ4lERHBys+fPnq3Tp0rldygMhKSlJNptNu3btsoJE3FtpaWkqWbKkfv31V+XLl+++jZvdf6MMw9hpmma17M5nRhIAAAAAPIA+ivgo18bu0aOHnE6n/Pz81KpVq0c+RJKkNWvWECL9Zu3atfLy8lKfPn0Ike4jb29vde/e/b6GSH8E39oGAAAAAA+gj/d8rDecb+TK2J9//nmujPsomjNnjqZMmZKprU6dOvrwww9zqaI7a9iwoU6ePJmp7fvvv9fgwYMztZUrV876NkD87w4dOpTbJbiEIAkAAAAAgHukS5cud9xn6GHQuHFja48g/LWxtA0AAAAAAAAuIUgCAAAAAACASwiSAAAAAAAA4BKCJAAAAAAAALiEIAkAAAAAHmFxcXFyOp1yOp3629/+pqeeesp6nZKScsfrN27cqM2bN9+HSu9sy5YtevXVVxUREaHvvvvuD/URHx+vjz766E+u7MF06tQpBQYGqkqVKvL29s707XEXL15UcHCwKlWqpODgYF26dEmStGbNGvn7+8tms8nf31/r16+XJCUlJalp06by8vKSt7e3hgwZYvV1/fp1hYaGqmLFigoICFB0dLQkacOGDdZnzel0yt3dXStWrJAkHT9+XAEBAapUqZJCQ0OzfBZ37NihvHnzaunSpdne26FDh1SrVi0VKFBAEydOtNqTk5NVo0YNORwOeXt7a8SIEdaxYcOGyW63y+l0qlGjRjpz5owkKTo6Wo899phVZ8+ePbMdc/jw4Vq7dq0rj/6RRpAEAAAAAI+w4sWLKyIiQhEREerZs6f69+9vvc6fP/8dr3+QgqTVq1erSZMmj1SQlJqaes/6dnNz07///W8dPHhQW7du1YcffqgDBw5IksaPH6+goCBFRUUpKChI48ePlySVKFFCK1euVGRkpObNm6cOHTpY/Q0YMECHDh3S7t279csvv2jVqlWSpFmzZqlo0aI6evSo+vfvr8GDB0uSAgMDrc/a+vXr5eHhoUaNGkmSBg8erP79+ysqKkpFixbVrFmzrHHS0tI0ePDg235LXLFixTR16lQNGDAgU3uBAgW0fv167dmzRxEREVq9erW2bt0qSRo4cKD27t2riIgINWvWTKNGjbKuq1ChglXrjBkzsh1z1KhRatiwoWsP/xFGkAQAAAAAfzE7d+5U/fr15e/vr8aNGys2NlaSNHXqVFWtWlV2u11t27ZVdHS0ZsyYocmTJ8vpdOqnn37K1M/27dtVu3Zt+fr6qnbt2jp8+LCk9CBgwIABstlsstvtmjZtmqT0WSa1a9eWw+FQjRo1dOXKlbuqe926dWrYsKGGDx+uxYsXy+l0avHixbp69aq6du2q6tWry9fXV19//bUkaf/+/apRo4acTqfsdruioqI0ZMgQHTt2TE6nUwMHDsx2nMTERAUFBcnPz082m83qT5Lmz58vu90uh8NhhSxnz55VixYt5HA45HA4tHnzZkVHR8vHx8e6buLEiRo5cqQkqUGDBnrnnXdUv359TZkyRStXrlRAQIB8fX3VsGFDnT171qqjS5cu1nNctmyZZs2apf79+1v9/uc//9Fbb72V7X2ULl1afn5+kqQnnnhCVapU0enTpyVJX3/9tTp16iRJ6tSpkzVTyNfXV2XKlJEkeXt7Kzk5WdevX5eHh4cCAwMlSfnz55efn59iYmKy9NW6dWutW7dOpmlmqmXp0qV64YUX5OHhIdM0tX79erVu3TrL+JI0bdo0tWrVSiVLlsz2viSpZMmSql69uvLly5ep3TAMFSxYUJJ048YN3bhxQ4ZhSJIKFSpknXf16lWr3VWdO3e2ZkgNGTLE+reSEWadOHFCQUFBstvtCgoK0smTJ63r+vbtq9q1a6t8+fI5zrJ6WLjldgEAAAAA8FfyUcRH+njPxy6da5tnu+M5rzte1xvON1we3zRN9enTR19//bWefPJJLV68WO+++65mz56t8ePH6/jx4ypQoIDi4+NVpEgR9ezZUwULFswy80OSvLy8tGnTJrm5uWnt2rV65513tGzZMs2cOVPHjx/X7t275ebmposXLyolJUWhoaFavHixqlevrsuXL+uxxx5zue4LFy4oX758Kly4sEaNGqXw8HBNnz5dkvTOO+/o+eef1+zZsxUfH68aNWqoYcOGmjFjht588021b99eKSkpSktL0/jx47Vv3z5FRETkOJa7u7uWL1+uQoUK6cKFC6pZs6ZCQkJ04MABjR07Vr/88otKlCihixcvSpL69u2r+vXra/ny5UpLS1NiYqK1VCwn8fHx+vHHHyVJly5d0tatW2UYhj799FNNmDBB//73vzV69GgVLlxYkZGR1nn58+eX3W7XhAkTlC9fPs2ZM0effPLJHZ9fdHS0du/erYCAAEnp4Vfp0qUlpQdO586dy3LNsmXL5OvrqwIFCmSpfeXKlXrzzTclSadPn9bTTz8tKX0WVOHChRUXF6cSJUpY1yxatMgKvOLi4lSkSBG5uaVHEp6enlbA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ek/7HzBggA4dOqTdu3frl19+0apVqyRJs2bNUtGiRXX06FH1799fgwcPliR5eHho/vz52r9/v1avXq1+/fpZAWb79u116NAhRUZG6tq1a/r0008lSatWrVJUVJSioqI0c+ZMvf7665KkypUrKyIiQhEREdq5c6c8PDzUokULSdL48eMVFBSkqKgoBQUFafz48Znq7t+/v1544YUc78vd3V2jR4/ONmhasmSJ9uzZo3379un8+fP68ssvJUn//Oc/FRkZqYiICA0aNEhvvfWWdc1jjz1m1RoWFpbtmD179lTHjnf+t36/ECQBAAAAwH2Ucvq0knbsyPTn7KjROuhVRYd9/aw2SdbPse+8o4NeVRRVq3aWa89Pm37b8Vq3bq1vvvlG169flyRFR0frzJkzeu655/T666+rWrVq8vb21ogRI7K9vmzZsrpw4YIkaezYsapcubIaNmyow4cPW+f85z//UfXq1eVwONSqVSslJSVp8+bNCgsL08CBA+V0OnXs2DF17txZS5culSStW7dOvr6+stls6tq1q1Vf2bJlNWLECPn5+clms+nQoUNZaoqOjlbdunXl5+cnPz8/bd682To2YcIE2Ww2ORwOaybM0aNH1bBhQzkcDvn5+enYsWMuvVcZVq9erRdeeEFDhgzRTz/9JKfTqcmTJystLU0DBw5U9erVZbfb9cknn0hKn8FUr149OZ1O+fj46KefftKQIUN07do1OZ1OtW/fPsexmjdvLn9/f3l7e2vmzJmZavDz85PD4VBQUJAkKTExUV26dJHNZpPdbteyZcskSQULFrSuW7p0qTp37ixJ6ty5s9566y0FBgZq8ODB2r59u2rXri1fX1/Vrl3bek/T0tI0YMAAq99p06Zp3bp1VhgjSWvWrFHLli2zvQcPDw8FBgZKkvLnzy8/Pz/FxMRIkr7++mt16tRJUvpnc926dTJNU88++6wqVaokSSpTpoxKliyp8+fPS0qfFWcYhgzDUI0aNTL11bFjRxmGoZo1ayo+Pl6xsbGZalm3bp0qVKigv//971nG79Spk1asWGGdu2LFCpUvX17e3t45vj+PP/64nnvuObm7u2c5VqhQIUnpIV1KSooMw8jULklXr1612l116+y/qVOnqmrVqrLb7Wrbtq2k9FlWzZs3l91uV82aNbV3717ruq5du6pBgwYqX768pk6delfj5sg0zYf2j7+/vwkAAAAAD7IDBw78sesqe/1pNbz44ovmihUrTNM0zXHjxpkDBgwwTdM04+LiTNM0zdTUVLN+/frmnj17TNM0zfr165s7duwwTdM0//73v5vnz583w8PDTR8fH/Pq1atmQkKCWaFCBfP99983TdM0L1y4YI317rvvmlOnTjVN0zQ7depkfvnll9axjNfXrl0zPT09zcOHD5umaZodOnQwJ0+ebI2Xcf2HH35oduvWLcv9XL161bx27ZppmqZ55MgRM+N3w++++86sVauWefXq1Uz3V6NGDfOrr74yTdM0r127Zh13RWpqqulwOEzTNM0NGzaYTZs2tY598skn5ujRo03TNM3k5GTT39/f/O9//2tOnDjRHDNmjHX95cuXTdM0zccff/yO42XUnJSUZHp7e5sXLlwwz507Z3p6epr//e9/M50zaNAg880337SuvXjxYpZxvvzyS7NTp06maaY//6ZNm5qpqammaZpmQkKCeePGDdM0TXPNmjVmy5YtTdM0zY8++shs2bKldSwuLs68efOmWblyZfPcuXOmaZpmu3btzLCwsDvez6VLl8xy5cqZx44dM03TNL29vc1Tp05Zx8uXL2+eP38+0zXbtm0zvby8zLS0tEztKSkppq+vr7lp0ybTNE2zadOm5k8//WQdf/75563PbYYuXbqY06ZNs14XLlw40/EiRYqYpmmaiYmJZs2aNc0rV66YI0aMsD7bOZkzZ47Zq1evLO2NGjUyixQpYrZr1856zqZpmtOnTzfLly9venp6mkeOHLHa8+bNa/r7+5sBAQHm8uXLsx3r1npKly5tJicnm6aZ/mxN0zR79+5tjhw50jRN01y3bp31eR0xYoRZq1YtMzk52Tx//rxZrFgxMyUlJUv/2f03SlK4mUMWw4wkAAAAAHjE3bq87dZlbUuWLJGfn598fX21f//+TMvQfu+nn35SixYt5OHhoUKFCmXaz2Xfvn2qW7eubDabFi5cqP3799+2nsOHD6tcuXJ69tlnJaXPDNm0aZN1PGOmi7+/v7WHzq1u3LihV199VTabTW3atLHqXrt2rbp06SIPDw9JUrFixXTlyhWdPn3amk3j7u5uHXfFtm3bFBAQkO2xH374QfPnz5fT6VRAQIDi4uIUFRWl6tWra86cORo5cqQiIyP1xBNPuDze1KlT5XA4VLNmTZ06dUpRUVHaunWr6tWrp3Llyln3lXG/vXr1sq4tWrToHftv06aN8ubNK0lKSEhQmzZt5OPjo/79+1vv29q1a9WzZ0+5ublZ4xmGoQ4dOuizzz5TfHy8tmzZctslYFL6zJx27dqpb9++Kl++vKT0ySy/d+sMndjYWHXo0EFz5sxRnjyZI4s33nhD9erVU926dV3qKyUlRWFhYWrTps0dn8uIESPUv3//TLO5/ojvv/9esbGxun79utavX2+19+rVS8eOHdN7772nMWPGWO0nT55UeHi4Pv/8c/Xr1++Os+Xsdrvat2+vzz77zHp/fv75Z3Xo0EGS9PzzzysuLk4JCQmSpKZNm6pAgQIqUaKESpYsqbNnz/5P9ydJbv9zDwAAAACAB1rz5s311ltvadeuXbp27Zr8/Px0/PhxTZw4UTt27FDRokXVuXNnJScn37afnJbkdO7cWStWrJDD4dDcuXO1cePG2/aTXQBwqwIFCkhK34g4u718Jk+erFKlSmnPnj26efOmtczINM0sNd5prDtZtWqVmjRpku0x0zQ1bdo0NW7cOMuxTZs26dtvv1WHDh00cOBAl/a42bhxo9auXastW7bIw8NDDRo0UHJycrb3lTF+du23tv3+PX388cetn4cNG6bAwEAtX75c0dHRatCgwW377dKli1566SW5u7urTZs2VpCRkx49eqhSpUrq16+f1ebp6alTp07J09NTqampSkhIsIKxy5cvq2nTphozZoxq1qyZqa9//etfOn/+vLV88Na+MsTExKhMmTLW61WrVsnPz0+lSpWy2kqVKqXY2FiVLl1asbGxKlmypKT0wHDp0qUaNGiQ4uPjlSdPHrm7u+upp57Sv/71L0nSp59+qmrVqt32nqX0sDIkJERff/21goODMx1r27attZeTJKve8uXLq0GDBtq9e7cqVKiQY9/ffvutNm3apLCwMI0ePVr79++/baCW8W9Jyvnf091iRhIAAAAAPOIKFiyoBg0aqGvXrtZspMuXL+vxxx9X4cKFdfbsWWsz5JzUq1dPy5cv17Vr13TlyhWtXLnSOnblyhWVLl1aN27c0MKFC632J554QleuXMnSl5eXl6Kjo3X06FFJ0oIFC1S/fn2X7ychIUGlS5dWnjx5tGDBAuvbsRo1aqTZs2crKSlJUvreMYUKFZKnp6e1F87169et465Yt26dtSfR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NAzj28AmYHovzE1ERERERERERLpxwIMk0zTXASN2c/tO4PgDPR8REREREREREYlMb+3aJiIiIiIiIiIihxgFSSIiIiIiIiIiEhEFSSIiIiIiIiIiEhEFSSIiIiIiIiIiEhEFSSIiIiIiIiIiEhEFSSIiIiIiIiIiEhEFSSIiIiIiIiIiEhEFSSIiIiIiIiIiEhEFSSIiIiIiIiIiEhEFSSIiIiIiIiIiEhEFSSIiIiIiIiIiEhEFSSIiIiIiIiIiEhEFSSIiIiIiIiIiEhEFSSIiIiIiIiIiEhEFSSIiIiIiIiIiEhEFSSIiIiIiIiIiEhEFSSIiIiIiIiIiEhEFSSIiIiIiIiIiEhEFSSIiIiIiIiIiEhEFSSIiIiIiIiIiEhEFSSIiIiIiIiIiEhEFSSIiIiIiIiIiEhEFSSIiIiIiIiIiEhEFSSIiIiIiIiIiEhEFSSIiIiIiIiIiEhEFSSIiIiIiIiIiEhEFSSIiIiIiIiIiEhEFSSIiIiIiIiIiEhEFSSIiIiIiIiIiEhEFSSIiIiIiIiIiEhEFSSIiIiIiIiIiEhEFSSIiIiIiIiIiEhEFSSIiIiIiIiIiEhEFSSIiIiIiIiIiEhEFSSIiIiIiIiIiEhEFSSIiIiIiIiIiEhEFSSIiIiIiIiIiEhEFSSIiIiIiIiIiEhEFSSIiIiIiIiIiEhEFSSIiIiIiIiIiEhEFSSIiIiIiIiIiEhEFSSIiIiIiIiIiEhEFSSIiIiIiIiIiEpFDMkgyDGOaYRhP1dXV9fZURERERERERESOGIdkkGSa5uumaV6bkJDQ21MRERERERERETliHJJBkoiIiIiIiIiIHHgKkkREREREREREJCIKkkREREREREREJCIKkkREREREREREJCIKkkREREREREREJCIKkkREREREREREJCIKkkREREREREREJCIKkkREREREREREJCIKkkREREREREREJCIKkkREREREREREJCIKkkREREREREREJCIKkkREREREREREJCIKkkREREREREREJCIKkkREREREREREJCIKkkREREREREREJCIKkkREREREREREJCIKkkREREREREREJCIKkkREREREREREJCIKkkREREREREREJCIKkkREREREREREJCIKkkREREREREREJCIKkkREREREREREJCIKkkREREREREREJCIKkkREREREREREJCIKkkREREREREREJCIKkkREREREREREJCIKkkREREREREREJCIKkkREREREREREJCIKkkREREREREREJCIKkkREREREREREJCIKkkREREREREREJCIKkkREREREREREJCIKkkREREREREREJCIKkkREREREREREJCIKkkREREREREREJCIKkkREREREREREJCIKkkREREREREREJCIKkkREREREREREJCIKkkREREREREREJCIKkkREREREREREJCIKkkREREREREREJCIKkkREREREREREJCIKkkREREREREREJCIKkkREREREREREJCK9FiQZhmE3DGOhYRj/C32fbBjGe4ZhrAldJ/XW3EREREREREREZFe9WZF0C7Ci0/d3Ah+YpjkA+CD0vYiIiIiIiIiIHCR6JUgyDCMHOA34//buPljTur7v+OfrghWfQOtCN0KLGmpExoe4UpWOJgodGgmQVsc4mm4ntjRtopiJtVDbTJtJLMYmats8bUnjOpJYRmkgzKTAEDBtqsiCPCOSkIzBbtltrKumVSR8+8d9bXJc97g/1sO5uM++XjPM/Xjd13eX35xz9n2u+7ovXnH3OUl2TNd3JDl3nccCAAAA4FuY64ik9yd5Z5KHV9x3XHfvSpLp8tgDbVhV51XVzqrauWfPnkd9UAAAAAAW1j0kVdVZSXZ3902Hsn13b+/urd29dfPmzWs8HQAAAACrOWKGfZ6W5Oyq+r4kT0jy1Kr6cJIHqmpLd++qqi1Jds8wGwAAAACrWPcjkrr7wu4+vrtPTPKDSX6nu9+c5Iok26anbUty+XrPBgAAAMDq5vzUtv1dlOSMqro3yRnTbQAAAAAeI+Z4a9uf6+7rk1w/Xf+TJK+Zcx4AAAAAVvdYOiIJAAAAgMcwIQkAAACAIUISAAAAAEOEJAAAAACGCEkAAAAADBGSAAAAABgiJAEAAAAwREgCAAAAYIiQBAAAAMAQIQkAAACAIUISAAAAAEOEJAAAAACGCEkAAAAADBGSAAAAABgiJAEAAAAwREgCAAAAYIiQBAAAAMAQIQkAAACAIUISAAAAAEOEJAAAAACGCEkAAAAADBGSAAAAABgiJAEAAAAwREgCAAAAYIiQBAAAAMAQIQkAAACAIUISAAAAAEOEJAAAAACGCEkAAAAADBGSAAAAABgiJAEAAAAwREgC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\\n\",\n       \"text/plain\": [\n        \"<Figure size 1440x1080 with 1 Axes>\"\n       ]\n\n---", "paper/hyperparameter_optimization.ipynb\n=======================================================\nlhs: 100644 | 3b9ea856d14d5aa4939b74a7e86e89a9ae569756\nrhs: 100644 | 5d85ffbc1d2e1f4de8667bfdd4ca44c278125952\n---@@ -95,6 +95,21 @@\n   {\n    \"cell_type\": \"code\",\n    \"execution_count\": 3,\n+   \"id\": \"089eb97b-4ab7-4b98-9454-fc1233287b3d\",\n+   \"metadata\": {},\n+   \"outputs\": [],\n+   \"source\": [\n+    \"debug=False\\n\",\n+    \"use_new_data=False\\n\",\n+    \"num_test_data_sets = 10\\n\",\n+    \"offset_header_rev1 = -200\\n\",\n+    \"offset_header_rev2 = 200\\n\",\n+    \"offset_header = offset_header_rev2\"\n+   ]\n+  },\n+  {\n+   \"cell_type\": \"code\",\n+   \"execution_count\": 4,\n    \"id\": \"50bb7930-54d1-4e34-8d58-c03ace7beb35\",\n    \"metadata\": {},\n    \"outputs\": [\n@@ -102,7 +117,7 @@\n      \"name\": \"stdout\",\n      \"output_type\": \"stream\",\n      \"text\": [\n-      \"Evaluating datasets: ['7.0cm', '00cm', '1.0cm', '2.0cm', '3.0cm', '4.0cm']\\n\"\n+      \"Evaluating datasets: ['FPGA2.5cm']\\n\"\n      ]\n     }\n    ],\n@@ -118,7 +133,7 @@\n     \"    \\\"do_normalize_data\\\": True,  # Use if data should be normalized to have zero mean and std 1\\n\",\n     \"}\\n\",\n     \"\\n\",\n-    \"data_directory=\\\"/project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/Distance_precise\\\"\\n\",\n+    \"data_directory=\\\"/project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev230meas2.5cm/\\\"\\n\",\n     \"\\n\",\n     \"# Array of the different distances in cm (folder names) used for the measurement\\n\",\n     \"# position = [dirname for dirname in os.listdir(data_directory) \\n\",\n@@ -131,7 +146,7 @@\n   },\n   {\n    \"cell_type\": \"code\",\n-   \"execution_count\": 4,\n+   \"execution_count\": 5,\n    \"id\": \"ee7cba52-820e-4058-a241-93c19f3ae772\",\n    \"metadata\": {},\n    \"outputs\": [],\n@@ -144,57 +159,104 @@\n   },\n   {\n    \"cell_type\": \"code\",\n-   \"execution_count\": 5,\n+   \"execution_count\": 8,\n    \"id\": \"af969409-2b19-4c66-a5c6-55badf735280\",\n    \"metadata\": {},\n    \"outputs\": [\n+    {\n+     \"name\": \"stderr\",\n+     \"output_type\": \"stream\",\n+     \"text\": [\n+      \"/home/a/A.Baliuka/emissionsecurity/paper/preprocessing.py:184: RuntimeWarning: divide by zero encountered in double_scalars\\n\",\n+      \"  if np.max(correlation) / np.median(correlation) < 2.:\\n\"\n+     ]\n+    },\n     {\n      \"name\": \"stdout\",\n      \"output_type\": \"stream\",\n      \"text\": [\n-      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/Distance_precise/1.0cm\\n\",\n-      \"\\n\",\n-      \"Found the data synchronization at 799864\\n\",\n-      \"\\n\",\n-      \"Cut data in pieces with these shapes: after header:(11896, 500), before header:(7992, 500)\\n\",\n-      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/Distance_precise/1.0cm\\n\",\n-      \"\\n\",\n-      \"Found the data synchronization at 799864\\n\",\n-      \"\\n\",\n-      \"Cut data in pieces with these shapes: after header:(83272, 500), before header:(55944, 500)\\n\",\n-      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/Distance_precise/1.0cm\\n\",\n-      \"\\n\",\n-      \"Found the data synchronization at 799864\\n\",\n-      \"\\n\",\n-      \"Cut data in pieces with these shapes: after header:(83272, 500), before header:(55944, 500)\\n\",\n-      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/Distance_precise/1.0cm\\n\",\n-      \"\\n\",\n-      \"Found the data synchronization at 799864\\n\",\n-      \"\\n\",\n-      \"Cut data in pieces with these shapes: after header:(83272, 500), before header:(55944, 500)\\n\",\n-      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/Distance_precise/1.0cm\\n\",\n-      \"\\n\",\n-      \"Found the data synchronization at 799864\\n\",\n-      \"\\n\",\n-      \"Cut data in pieces with these shapes: after header:(83272, 500), before header:(55944, 500)\\n\",\n-      \"(556864, 500)\\n\",\n-      \"(556864,)\\n\"\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev230meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13994, 500), before header:(5894, 500)\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev230meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(41982, 500), before header:(17682, 500)\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev230meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(41982, 500), before header:(17682, 500)\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev230meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(41982, 500), before header:(17682, 500)\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev230meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(41982, 500), before header:(17682, 500)\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev230meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(41982, 500), before header:(17682, 500)\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev230meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(41982, 500), before header:(17682, 500)\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev230meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(41982, 500), before header:(17682, 500)\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev230meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(41982, 500), before header:(17682, 500)\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev230meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(41982, 500), before header:(17682, 500)\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev230meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(41982, 500), before header:(17682, 500)\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev230meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(41982, 500), before header:(17682, 500)\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev230meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(41982, 500), before header:(17682, 500)\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev230meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(41982, 500), before header:(17682, 500)\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev230meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(41982, 500), before header:(17682, 500)\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev230meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(41982, 500), before header:(17682, 500)\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev230meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(41982, 500), before header:(17682, 500)\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev230meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(41982, 500), before header:(17682, 500)\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev230meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(41982, 500), before header:(17682, 500)\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev230meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(41982, 500), before header:(17682, 500)\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev230meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(41982, 500), before header:(17682, 500)\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev230meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(41982, 500), before header:(17682, 500)\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev230meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(41982, 500), before header:(17682, 500)\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev230meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(41982, 500), before header:(17682, 500)\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev230meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(41982, 500), before header:(17682, 500)\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev230meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(41982, 500), before header:(17682, 500)\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev230meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(41982, 500), before header:(17682, 500)\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev230meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(41982, 500), before header:(17682, 500)\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev230meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(41982, 500), before header:(17682, 500)\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev230meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(41982, 500), before header:(17682, 500)\\n\",\n+      \"(1730256, 500)\\n\",\n+      \"(1730256,)\\n\"\n      ]\n     },\n     {\n      \"name\": \"stderr\",\n      \"output_type\": \"stream\",\n      \"text\": [\n-      \"2022-03-30 11:16:03.135639: I tensorflow/core/platform/cpu_feature_guard.cc:142] This TensorFlow binary is optimized with oneAPI Deep Neural Network Library (oneDNN) to use the following CPU instructions in performance-critical operations:  SSE4.1 SSE4.2 AVX AVX2 FMA\\n\",\n+      \"2022-07-01 12:21:29.702352: I tensorflow/core/platform/cpu_feature_guard.cc:142] This TensorFlow binary is optimized with oneAPI Deep Neural Network Library (oneDNN) to use the following CPU instructions in performance-critical operations:  SSE4.1 SSE4.2 AVX AVX2 FMA\\n\",\n       \"To enable them in other operations, rebuild TensorFlow with the appropriate compiler flags.\\n\",\n-      \"2022-03-30 11:16:03.681481: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1510] Created device /job:localhost/replica:0/task:0/device:GPU:0 with 43630 MB memory:  -> device: 0, name: NVIDIA A40, pci bus id: 0000:01:00.0, compute capability: 8.6\\n\"\n+      \"2022-07-01 12:21:30.270916: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1510] Created device /job:localhost/replica:0/task:0/device:GPU:0 with 43614 MB memory:  -> device: 0, name: NVIDIA A40, pci bus id: 0000:81:00.0, compute capability: 8.6\\n\"\n      ]\n     }\n    ],\n    \"source\": [\n     \"training_data, training_labels, validation_data, validation_labels = pp.get_datasets(\\n\",\n-    \"    os.path.join(data_directory, position[2]), \\n\",\n-    \"    technical_details, data_augmentation_halflength=3,\\n\",\n+    \"    os.path.join(data_directory, position[0]), \\n\",\n+    \"    technical_details=technical_details,\\n\",\n+    \"    offset_header=offset_header,\\n\",\n+    \"    data_augmentation_halflength=1, \\n\",\n+    \"    debug=debug, \\n\",\n+    \"    force_create_npy_files=use_new_data\\n\",\n     \")\\n\",\n     \"\\n\",\n     \"print(training_data.shape)\\n\",\n@@ -211,7 +273,7 @@\n   },\n   {\n    \"cell_type\": \"code\",\n-   \"execution_count\": 6,\n+   \"execution_count\": 9,\n    \"id\": \"db20a227-a4fc-4745-9df5-a5a5ab640d0d\",\n    \"metadata\": {},\n    \"outputs\": [\n@@ -279,7 +341,7 @@\n   },\n   {\n    \"cell_type\": \"code\",\n-   \"execution_count\": 7,\n+   \"execution_count\": 10,\n    \"id\": \"87d2e9ca-1749-4d12-bb39-573ae2157753\",\n    \"metadata\": {},\n    \"outputs\": [],\n@@ -302,7 +364,7 @@\n   },\n   {\n    \"cell_type\": \"code\",\n-   \"execution_count\": 8,\n+   \"execution_count\": 11,\n    \"id\": \"36ca9e2d-ef5a-45db-ad7a-83d676246a65\",\n    \"metadata\": {},\n    \"outputs\": [\n@@ -347,56 +409,18 @@\n       \"Total params: 1,688,038\\n\",\n       \"Trainable params: 1,687,540\\n\",\n       \"Non-trainable params: 498\\n\",\n-      \"_________________________________________________________________\\n\",\n-      \"Successfully loaded test data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/Distance_precise/1.0cm\\n\",\n-      \"\\n\",\n-      \"Found the test data synchronization at 64\\n\",\n-      \"\\n\",\n-      \"prepared test data with shape: (19994, 500)\\n\"\n+      \"_________________________________________________________________\\n\"\n      ]\n     },\n     {\n-     \"name\": \"stderr\",\n-     \"output_type\": \"stream\",\n-     \"text\": [\n-      \"2022-03-30 11:16:08.813432: I tensorflow/compiler/mlir/mlir_graph_optimization_pass.cc:185] None of the MLIR Optimization Passes are enabled (registered 2)\\n\",\n-      \"2022-03-30 11:16:09.600153: I tensorflow/stream_executor/cuda/cuda_dnn.cc:369] Loaded cuDNN version 8201\\n\",\n-      \"2022-03-30 11:16:10.578419: I tensorflow/core/platform/default/subprocess.cc:304] Start cannot spawn child process: No such file or directory\\n\",\n-      \"2022-03-30 11:16:10.579219: I tensorflow/core/platform/default/subprocess.cc:304] Start cannot spawn child process: No such file or directory\\n\",\n-      \"2022-03-30 11:16:10.579242: W tensorflow/stream_executor/gpu/asm_compiler.cc:77] Couldn't get ptxas version string: Internal: Couldn't invoke ptxas --version\\n\",\n-      \"2022-03-30 11:16:10.580133: I tensorflow/core/platform/default/subprocess.cc:304] Start cannot spawn child process: No such file or directory\\n\",\n-      \"2022-03-30 11:16:10.580183: W tensorflow/stream_executor/gpu/redzone_allocator.cc:314] Internal: Failed to launch ptxas\\n\",\n-      \"Relying on driver to perform ptx compilation. \\n\",\n-      \"Modify $PATH to customize ptxas location.\\n\",\n-      \"This message will be only logged once.\\n\",\n-      \"2022-03-30 11:16:11.621361: I tensorflow/stream_executor/cuda/cuda_blas.cc:1760] TensorFloat-32 will be used for the matrix multiplication. This will only be logged once.\\n\"\n-     ]\n-    },\n-    {\n-     \"name\": \"stdout\",\n-     \"output_type\": \"stream\",\n-     \"text\": [\n-      \"Confusion matrix:\\n\",\n-      \"H V P M \\n\",\n-      \"[[2458    0    5    2]\\n\",\n-      \" [   3 1906   33  581]\\n\",\n-      \" [   3   40 2404   48]\\n\",\n-      \" [   2  476   34 2004]]\\n\",\n-      \"Test accuracy: 0.8772877287728773\\n\",\n-      \"0.8772877287728773\\n\",\n-      \"Successfully loaded test data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/Distance_precise/1.0cm\\n\",\n-      \"\\n\",\n-      \"Found the test data synchronization at 65\\n\",\n-      \"\\n\",\n-      \"prepared test data with shape: (19994, 500)\\n\",\n-      \"Confusion matrix:\\n\",\n-      \"H V P M \\n\",\n-      \"[[2456    1    5    3]\\n\",\n-      \" [   0 1892   31  600]\\n\",\n-      \" [   4   31 2424   36]\\n\",\n-      \" [   1  454   42 2019]]\\n\",\n-      \"Test accuracy: 0.8791879187918792\\n\",\n-      \"0.8791879187918792\\n\"\n+     \"ename\": \"AttributeError\",\n+     \"evalue\": \"module 'preprocessing' has no attribute 'load_test_data_synchronized'\",\n+     \"output_type\": \"error\",\n+     \"traceback\": [\n+      \"\\u001b[0;31m---------------------------------------------------------------------------\\u001b[0m\",\n+      \"\\u001b[0;31mAttributeError\\u001b[0m                            Traceback (most recent call last)\",\n+      \"\\u001b[0;32m/tmp/ipykernel_682/1305286116.py\\u001b[0m in \\u001b[0;36m<module>\\u001b[0;34m\\u001b[0m\\n\\u001b[1;32m      2\\u001b[0m \\u001b[0;34m\\u001b[0m\\u001b[0m\\n\\u001b[1;32m      3\\u001b[0m \\u001b[0;32mfor\\u001b[0m \\u001b[0mj\\u001b[0m \\u001b[0;32min\\u001b[0m \\u001b[0mrange\\u001b[0m\\u001b[0;34m(\\u001b[0m\\u001b[0;36m0\\u001b[0m\\u001b[0;34m,\\u001b[0m\\u001b[0;36m2\\u001b[0m\\u001b[0;34m)\\u001b[0m\\u001b[0;34m:\\u001b[0m\\u001b[0;34m\\u001b[0m\\u001b[0;34m\\u001b[0m\\u001b[0m\\n\\u001b[0;32m----> 4\\u001b[0;31m     test_data, test_labels = pp.load_test_data_synchronized(\\n\\u001b[0m\\u001b[1;32m      5\\u001b[0m         \\u001b[0mos\\u001b[0m\\u001b[0;34m.\\u001b[0m\\u001b[0mpath\\u001b[0m\\u001b[0;34m.\\u001b[0m\\u001b[0mjoin\\u001b[0m\\u001b[0;34m(\\u001b[0m\\u001b[0mdata_directory\\u001b[0m\\u001b[0;34m,\\u001b[0m \\u001b[0mposition\\u001b[0m\\u001b[0;34m[\\u001b[0m\\u001b[0;36m2\\u001b[0m\\u001b[0;34m]\\u001b[0m\\u001b[0;34m)\\u001b[0m\\u001b[0;34m,\\u001b[0m\\u001b[0;34m\\u001b[0m\\u001b[0;34m\\u001b[0m\\u001b[0m\\n\\u001b[1;32m      6\\u001b[0m         \\u001b[0mclock_freq\\u001b[0m\\u001b[0;34m=\\u001b[0m\\u001b[0mtechnical_details\\u001b[0m\\u001b[0;34m[\\u001b[0m\\u001b[0;34m\\\"clock_freq\\\"\\u001b[0m\\u001b[0;34m]\\u001b[0m\\u001b[0;34m,\\u001b[0m\\u001b[0;34m\\u001b[0m\\u001b[0;34m\\u001b[0m\\u001b[0m\\n\",\n+      \"\\u001b[0;31mAttributeError\\u001b[0m: module 'preprocessing' has no attribute 'load_test_data_synchronized'\"\n      ]\n     }\n    ],\n@@ -423,7 +447,7 @@\n   },\n   {\n    \"cell_type\": \"code\",\n-   \"execution_count\": 9,\n+   \"execution_count\": null,\n    \"id\": \"417d23fc-dcf8-42b9-99ef-6fc7d775c4b3\",\n    \"metadata\": {},\n    \"outputs\": [\n@@ -431,138 +455,13 @@\n      \"name\": \"stdout\",\n      \"output_type\": \"stream\",\n      \"text\": [\n-      \"prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 0 samples, test_accuracy=0.8791879187918792. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 1 samples, test_accuracy=0.8807880788078808. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 2 samples, test_accuracy=0.8781878187818782. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 3 samples, test_accuracy=0.8778877887788779. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 4 samples, test_accuracy=0.8735873587358736. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 5 samples, test_accuracy=0.8692869286928693. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 6 samples, test_accuracy=0.8593859385938594. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 7 samples, test_accuracy=0.8510851085108511. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 8 samples, test_accuracy=0.8343834383438344. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 9 samples, test_accuracy=0.8227822782278228. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 10 samples, test_accuracy=0.8014801480148015. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 11 samples, test_accuracy=0.7728772877287728. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 12 samples, test_accuracy=0.7338733873387339. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 13 samples, test_accuracy=0.686068606860686. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 14 samples, test_accuracy=0.6310631063106311. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 15 samples, test_accuracy=0.572957295729573. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 16 samples, test_accuracy=0.5141514151415142. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 17 samples, test_accuracy=0.45854585458545855. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 18 samples, test_accuracy=0.39893989398939894. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 19 samples, test_accuracy=0.2946294629462946. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 20 samples, test_accuracy=0.3029302930293029. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 21 samples, test_accuracy=0.2552255225522552. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 22 samples, test_accuracy=0.26242624262426245. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 23 samples, test_accuracy=0.2585258525852585. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 24 samples, test_accuracy=0.2548254825482548. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 25 samples, test_accuracy=0.2538253825382538. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 26 samples, test_accuracy=0.25822582258225824. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 27 samples, test_accuracy=0.2557255725572557. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 28 samples, test_accuracy=0.31683168316831684. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 29 samples, test_accuracy=0.3161316131613161. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 30 samples, test_accuracy=0.3175317531753175. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 31 samples, test_accuracy=0.3181318131813181. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 32 samples, test_accuracy=0.32143214321432145. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 33 samples, test_accuracy=0.3215321532153215. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 34 samples, test_accuracy=0.32323232323232326. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 35 samples, test_accuracy=0.3209320932093209. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 36 samples, test_accuracy=0.26512651265126513. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 37 samples, test_accuracy=0.2672267226722672. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 38 samples, test_accuracy=0.27002700270027. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 39 samples, test_accuracy=0.27542754275427545. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 40 samples, test_accuracy=0.2556255625562556. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 41 samples, test_accuracy=0.2583258325832583. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 42 samples, test_accuracy=0.2621262126212621. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 43 samples, test_accuracy=0.2538253825382538. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 44 samples, test_accuracy=0.25682568256825683. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 45 samples, test_accuracy=0.2565256525652565. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 46 samples, test_accuracy=0.2532253225322532. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 47 samples, test_accuracy=0.25842584258425844. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 48 samples, test_accuracy=0.25742574257425743. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 49 samples, test_accuracy=0.25292529252925294. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 50 samples, test_accuracy=0.2625262526252625. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 51 samples, test_accuracy=0.2654265426542654. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 52 samples, test_accuracy=0.2648264826482648. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 53 samples, test_accuracy=0.2542254225422542. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 54 samples, test_accuracy=0.2544254425442544. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 55 samples, test_accuracy=0.25642564256425643. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 56 samples, test_accuracy=0.25882588258825884. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 57 samples, test_accuracy=0.2526252625262526. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 58 samples, test_accuracy=0.25662566256625663. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 59 samples, test_accuracy=0.25072507250725073. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 60 samples, test_accuracy=0.25412541254125415. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 61 samples, test_accuracy=0.25742574257425743. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 62 samples, test_accuracy=0.2518251825182518. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 63 samples, test_accuracy=0.2569256925692569. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 64 samples, test_accuracy=0.2571257125712571. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 65 samples, test_accuracy=0.2536253625362536. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 66 samples, test_accuracy=0.28172817281728174. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 67 samples, test_accuracy=0.2796279627962796. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 68 samples, test_accuracy=0.2554255425542554. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 69 samples, test_accuracy=0.2611261126112611. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 70 samples, test_accuracy=0.25272527252725274. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 71 samples, test_accuracy=0.2644264426442644. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 72 samples, test_accuracy=0.2538253825382538. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 73 samples, test_accuracy=0.2571257125712571. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 74 samples, test_accuracy=0.25512551255125515. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 75 samples, test_accuracy=0.2538253825382538. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 76 samples, test_accuracy=0.25252525252525254. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 77 samples, test_accuracy=0.2524252425242524. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 78 samples, test_accuracy=0.25862586258625864. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 79 samples, test_accuracy=0.26572657265726574. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 80 samples, test_accuracy=0.2723272327232723. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 81 samples, test_accuracy=0.28392839283928395. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 82 samples, test_accuracy=0.3013301330133013. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 83 samples, test_accuracy=0.3361336133613361. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 84 samples, test_accuracy=0.39403940394039405. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 85 samples, test_accuracy=0.47024702470247026. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 86 samples, test_accuracy=0.25332533253325334. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 87 samples, test_accuracy=0.2571257125712571. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 88 samples, test_accuracy=0.7174717471747175. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 89 samples, test_accuracy=0.7701770177017702. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 90 samples, test_accuracy=0.8061806180618062. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 91 samples, test_accuracy=0.8306830683068307. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 92 samples, test_accuracy=0.8438843884388438. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 93 samples, test_accuracy=0.8577857785778578. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 94 samples, test_accuracy=0.8647864786478647. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 95 samples, test_accuracy=0.866986698669867. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 96 samples, test_accuracy=0.8691869186918691. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 97 samples, test_accuracy=0.876987698769877. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 98 samples, test_accuracy=0.8755875587558756. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 99 samples, test_accuracy=0.8809880988098809. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 100 samples, test_accuracy=0.8791879187918792. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 101 samples, test_accuracy=0.8807880788078808. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 102 samples, test_accuracy=0.8781878187818782. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 103 samples, test_accuracy=0.8778877887788779. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 104 samples, test_accuracy=0.8735873587358736. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 105 samples, test_accuracy=0.8692869286928693. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 106 samples, test_accuracy=0.8593859385938594. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 107 samples, test_accuracy=0.8510851085108511. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 108 samples, test_accuracy=0.8343834383438344. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 109 samples, test_accuracy=0.8227822782278228. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 110 samples, test_accuracy=0.8014801480148015. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 111 samples, test_accuracy=0.7728772877287728. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 112 samples, test_accuracy=0.7338733873387339. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 113 samples, test_accuracy=0.686068606860686. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 114 samples, test_accuracy=0.6310631063106311. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 115 samples, test_accuracy=0.572957295729573. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 116 samples, test_accuracy=0.5141514151415142. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 117 samples, test_accuracy=0.45854585458545855. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 118 samples, test_accuracy=0.39893989398939894. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 119 samples, test_accuracy=0.2946294629462946. BEST Test accuracy after trying all displacements: 0.8810 at displacement 99 \\n\"\n+      \"WARNING:tensorflow:Unresolved object in checkpoint: (root).optimizer.iter\\n\",\n+      \"WARNING:tensorflow:Unresolved object in checkpoint: (root).optimizer.beta_1\\n\",\n+      \"WARNING:tensorflow:Unresolved object in checkpoint: (root).optimizer.beta_2\\n\",\n+      \"WARNING:tensorflow:Unresolved object in checkpoint: (root).optimizer.decay\\n\",\n+      \"WARNING:tensorflow:Unresolved object in checkpoint: (root).optimizer.learning_rate\\n\",\n+      \"WARNING:tensorflow:A checkpoint was restored (e.g. tf.train.Checkpoint.restore or tf.keras.Model.load_weights) but not all checkpointed values were used. See above for specific issues. Use expect_partial() on the load status object, e.g. tf.train.Checkpoint.restore(...).expect_partial(), to silence these warnings, or use assert_consumed() to make the check explicit. See https://www.tensorflow.org/guide/checkpoint#loading_mechanics for details.\\n\"\n      ]\n-    },\n-    {\n-     \"data\": {\n-      \"text/plain\": [\n-       \"0.8809880988098809\"\n-      ]\n-     },\n-     \"execution_count\": 9,\n-     \"metadata\": {},\n-     \"output_type\": \"execute_result\"\n     }\n    ],\n    \"source\": [\n\n---"]}