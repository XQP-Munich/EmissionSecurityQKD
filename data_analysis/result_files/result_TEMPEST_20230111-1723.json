{"test_accuracies": {"0cm": [{"test_accuracy": 0.9899934957722519, "best_0.01": 1.0, "best_0.01_eq_label_proportions": {"0": 1.0, "1": 1.0, "2": 1.0, "3": 1.0}}, {"test_accuracy": 0.9905438535047781, "best_0.01": 1.0, "best_0.01_eq_label_proportions": {"0": 1.0, "1": 1.0, "2": 1.0, "3": 1.0}}, {"test_accuracy": 0.9903437234202231, "best_0.01": 1.0, "best_0.01_eq_label_proportions": {"0": 1.0, "1": 1.0, "2": 1.0, "3": 1.0}}], "1cm": [{"test_accuracy": 0.8330915094811627, "best_0.01": 1.0, "best_0.01_eq_label_proportions": {"0": 1.0, "1": 1.0, "2": 0.8367346938775511, "3": 0.9795918367346939}}, {"test_accuracy": 0.8376444689047882, "best_0.01": 1.0, "best_0.01_eq_label_proportions": {"0": 1.0, "1": 1.0, "2": 0.8571428571428571, "3": 0.9387755102040817}}, {"test_accuracy": 0.8391454445389503, "best_0.01": 1.0, "best_0.01_eq_label_proportions": {"0": 1.0, "1": 1.0, "2": 0.8571428571428571, "3": 0.9183673469387755}}], "2cm": [{"test_accuracy": 0.551508480512333, "best_0.01": 0.7336683417085427, "best_0.01_eq_label_proportions": {"0": 0.9795918367346939, "1": 0.673469387755102, "2": 0.42857142857142855, "3": 0.5918367346938775}}, {"test_accuracy": 0.551708610596888, "best_0.01": 0.7437185929648241, "best_0.01_eq_label_proportions": {"0": 1.0, "1": 0.6530612244897959, "2": 0.4897959183673469, "3": 0.6530612244897959}}, {"test_accuracy": 0.5508080252163906, "best_0.01": 0.7587939698492462, "best_0.01_eq_label_proportions": {"0": 1.0, "1": 0.7551020408163265, "2": 0.5306122448979592, "3": 0.6530612244897959}}], "3cm": [{"test_accuracy": 0.463701405913844, "best_0.01": 1.0, "best_0.01_eq_label_proportions": {"0": 1.0, "1": 0.40816326530612246, "2": 0.5714285714285714, "3": 0.2653061224489796}}, {"test_accuracy": 0.45379496672837344, "best_0.01": 0.9949748743718593, "best_0.01_eq_label_proportions": {"0": 1.0, "1": 0.3673469387755102, "2": 0.4489795918367347, "3": 0.24489795918367346}}, {"test_accuracy": 0.4533947065592635, "best_0.01": 1.0, "best_0.01_eq_label_proportions": {"0": 1.0, "1": 0.3673469387755102, "2": 0.3877551020408163, "3": 0.12244897959183673}}], "4cm": [{"test_accuracy": 0.3867513884024616, "best_0.01": 0.4723618090452261, "best_0.01_eq_label_proportions": {"0": 0.9591836734693877, "1": 0.3877551020408163, "2": 0.42857142857142855, "3": 0.40816326530612246}}, {"test_accuracy": 0.3868514534447391, "best_0.01": 0.542713567839196, "best_0.01_eq_label_proportions": {"0": 0.9387755102040817, "1": 0.22448979591836735, "2": 0.3469387755102041, "3": 0.2653061224489796}}, {"test_accuracy": 0.3841997298243858, "best_0.01": 0.5175879396984925, "best_0.01_eq_label_proportions": {"0": 0.9387755102040817, "1": 0.3469387755102041, "2": 0.40816326530612246, "3": 0.30612244897959184}}], "5cm": [{"test_accuracy": 0.34287286736378647, "best_0.01": 0.33668341708542715, "best_0.01_eq_label_proportions": {"0": 0.5510204081632653, "1": 0.2857142857142857, "2": 0.2857142857142857, "3": 0.2857142857142857}}, {"test_accuracy": 0.3456746885475559, "best_0.01": 0.4221105527638191, "best_0.01_eq_label_proportions": {"0": 0.5918367346938775, "1": 0.20408163265306123, "2": 0.4489795918367347, "3": 0.22448979591836735}}, {"test_accuracy": 0.34247260719467654, "best_0.01": 0.37185929648241206, "best_0.01_eq_label_proportions": {"0": 0.5714285714285714, "1": 0.24489795918367346, "2": 0.4489795918367347, "3": 0.30612244897959184}}], "6cm": [{"test_accuracy": 0.31870715965377494, "best_0.01": 0.3015075376884422, "best_0.01_eq_label_proportions": {"0": 0.5102040816326531, "1": 0.1836734693877551, "2": 0.16326530612244897, "3": 0.32653061224489793}}, {"test_accuracy": 0.3208585580627408, "best_0.01": 0.39195979899497485, "best_0.01_eq_label_proportions": {"0": 0.40816326530612246, "1": 0.3877551020408163, "2": 0.4489795918367347, "3": 0.22448979591836735}}, {"test_accuracy": 0.32105868814729577, "best_0.01": 0.2663316582914573, "best_0.01_eq_label_proportions": {"0": 0.46938775510204084, "1": 0.2653061224489796, "2": 0.20408163265306123, "3": 0.20408163265306123}}], "7cm": [{"test_accuracy": 0.29424125681693103, "best_0.01": 0.592964824120603, "best_0.01_eq_label_proportions": {"0": 0.673469387755102, "1": 0.3673469387755102, "2": 0.16326530612244897, "3": 0.2857142857142857}}, {"test_accuracy": 0.29629259018361936, "best_0.01": 0.46733668341708545, "best_0.01_eq_label_proportions": {"0": 0.5510204081632653, "1": 0.22448979591836735, "2": 0.22448979591836735, "3": 0.20408163265306123}}, {"test_accuracy": 0.2957422324510932, "best_0.01": 0.542713567839196, "best_0.01_eq_label_proportions": {"0": 0.5102040816326531, "1": 0.2857142857142857, "2": 0.32653061224489793, "3": 0.16326530612244897}}], "8cm": [{"test_accuracy": 0.2807825086306099, "best_0.01": 0.4221105527638191, "best_0.01_eq_label_proportions": {"0": 0.4489795918367347, "1": 0.32653061224489793, "2": 0.14285714285714285, "3": 0.20408163265306123}}, {"test_accuracy": 0.28803722419572725, "best_0.01": 0.4723618090452261, "best_0.01_eq_label_proportions": {"0": 0.46938775510204084, "1": 0.24489795918367346, "2": 0.30612244897959184, "3": 0.22448979591836735}}, {"test_accuracy": 0.2802821834192225, "best_0.01": 0.457286432160804, "best_0.01_eq_label_proportions": {"0": 0.4489795918367347, "1": 0.3469387755102041, "2": 0.22448979591836735, "3": 0.2857142857142857}}], "9cm": [{"test_accuracy": 0.2710261670085556, "best_0.01": 0.2914572864321608, "best_0.01_eq_label_proportions": {"0": 0.1836734693877551, "1": 0.22448979591836735, "2": 0.23076923076923078, "3": 0.24489795918367346}}, {"test_accuracy": 0.27232701255816283, "best_0.01": 0.3015075376884422, "best_0.01_eq_label_proportions": {"0": 0.1836734693877551, "1": 0.24489795918367346, "2": 0.5555555555555556, "3": 0.30612244897959184}}, {"test_accuracy": 0.2780307199679792, "best_0.01": 0.27638190954773867, "best_0.01_eq_label_proportions": {"0": 0.20408163265306123, "1": 0.2653061224489796, "2": 1.0, "3": 0.32653061224489793}}], "10cm": [{"test_accuracy": 0.25521589032871367, "best_0.01": 0.23618090452261306, "best_0.01_eq_label_proportions": {"0": NaN, "1": 0.24489795918367346, "2": NaN, "3": NaN}}, {"test_accuracy": 0.25521589032871367, "best_0.01": 0.23618090452261306, "best_0.01_eq_label_proportions": {"0": NaN, "1": 0.24489795918367346, "2": NaN, "3": NaN}}, {"test_accuracy": 0.25521589032871367, "best_0.01": 0.23618090452261306, "best_0.01_eq_label_proportions": {"0": NaN, "1": 0.24489795918367346, "2": NaN, "3": NaN}}], "11cm": [{"test_accuracy": 0.24801120728473508, "best_0.01": 0.22613065326633167, "best_0.01_eq_label_proportions": {"0": 0.20408163265306123, "1": NaN, "2": NaN, "3": NaN}}, {"test_accuracy": 0.24801120728473508, "best_0.01": 0.22110552763819097, "best_0.01_eq_label_proportions": {"0": 0.24489795918367346, "1": NaN, "2": NaN, "3": NaN}}, {"test_accuracy": 0.24801120728473508, "best_0.01": 0.22613065326633167, "best_0.01_eq_label_proportions": {"0": 0.20408163265306123, "1": NaN, "2": NaN, "3": NaN}}], "12cm": [{"test_accuracy": 0.25306449191974784, "best_0.01": 0.24120603015075376, "best_0.01_eq_label_proportions": {"0": 0.20408163265306123, "1": 0.2653061224489796, "2": 0.32653061224489793, "3": 0.3673469387755102}}, {"test_accuracy": 0.25521589032871367, "best_0.01": 0.23618090452261306, "best_0.01_eq_label_proportions": {"0": NaN, "1": 0.24489795918367346, "2": NaN, "3": NaN}}, {"test_accuracy": 0.25571621554010104, "best_0.01": 0.2613065326633166, "best_0.01_eq_label_proportions": {"0": 0.1836734693877551, "1": 0.24489795918367346, "2": 0.2857142857142857, "3": 0.24489795918367346}}]}, "train_accuracies": {"0cm": 0.9835337400436401, "1cm": 0.8479067087173462, "2cm": 0.56050044298172, "3cm": 0.47016116976737976, "4cm": 0.3926524519920349, "5cm": 0.35334357619285583, "6cm": 0.3260091245174408, "7cm": 0.2989443242549896, "8cm": 0.2887043356895447, "9cm": 0.28207501769065857, "10cm": 0.25165802240371704, "11cm": 0.25148847699165344, "12cm": 0.2517886757850647}, "validation_accuracies": {"0cm": 0.992094874382019, "1cm": 0.8420473337173462, "2cm": 0.5593135356903076, "3cm": 0.45704707503318787, "4cm": 0.3895031809806824, "5cm": 0.35047781467437744, "6cm": 0.3157552480697632, "7cm": 0.3027467727661133, "8cm": 0.284284770488739, "9cm": 0.26792415976524353, "10cm": 0.2529143989086151, "11cm": 0.2501125633716583, "12cm": 0.2529143989086151}, "measurement_metadata": {"GIT_SHA1": "5e065f332d688afde3c864bea88d33b2790b1b1c", "GIT_DIFF": ["paper/copy_command.txt\n=======================================================\nlhs: 100644 | f5153bf51b693fdfb8ebbc2ab0100d3d27c2e773\nrhs: 100644 | e7874ed8babf5efea88793ad2264ce60f34acb06\n---@@ -1,3 +1,3 @@\n to copy all files to jupyter server use this command:\n-scp -r .\\\\paper\\\\Data2D\\asdf Markus.Stoecker@cip-sv-login01.cip.physik.uni-muenchen.de:/project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData\n-scp -r Markus.Stoecker@cip-sv-login01.cip.physik.uni-muenchen.de:/project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/asdf C:\\Users\\marku\\PycharmProjects\\LMU\\emissionsecurity\\paper\\Data2D\n\\ No newline at end of file\n+scp -r .\\\\paper\\\\Data2D\\asdf Markus.Stoecker@cip-sv-login01.cip.physik.uni-muenchen.de:/project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper\n+scp -r Markus.Stoecker@cip-sv-login01.cip.physik.uni-muenchen.de:/project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/asdf C:\\Users\\marku\\PycharmProjects\\LMU\\emissionsecurity\\paper\\Data2D\n\\ No newline at end of file\n\n---"], "DATASET_HASH_VERSION": "v0.2.0", "description": "Measurement of electromagnetic emissions from Quantum key distribution electronics. Contains measurement setup description and sha256 file hashes of measurement results.", "comments": "Measurement of the Rev1 module in different distances above the lower right corner of the FPGA. The probe is aligned parallel to the LMU slogan.", "dataset_name": "__GLOB_PATTERN__=..\\paper\\Data2D\\Rev1Distance\\**", "probe": "XF R 400-1", "amplifier": "TRF37C73EVM", "FILE_SHA256": {"0cm/test_0_data.txt": "e9612ffabdd6dc557e55a91e26391a36fb6253ceacd2afbfca7f48d089b4dd67", "0cm/test_0_synch_debug_signal.txt": "a64160eb863887c4b5acf5a793ff3d8cbbf3bb4c11ff47780e50c93a2867b0f0", "0cm/test_1_data.txt": "434035e2847dc691879f0fc07c46cd8aea2259e09c5c69af897691a3aa905f5a", "0cm/test_1_synch_debug_signal.txt": "9a8196a99e674c3c815dcf9a68ee614ba9e1f2df60b97c18d4fea812a2d85cb2", "0cm/test_2_data.txt": "8c4104e2e4d48b58fcddd19c9504a565b92ceb473328c3d92087e7a2a6f3e94e", "0cm/test_2_synch_debug_signal.txt": "4667842885b919b733998afbad88798b7241067679f4194c5c663c2a70a60e79", "0cm/test_labels.txt": "d49a07e40fb198c86dc04a8d7e71ce4328d46807b1ac82523868045461926a6f", "0cm/training_labels.txt": "9f7900ecf822b645cfc58ba5e0cd54d0f4ba08a1e956ec4ec0a47eeb3ae0fdd7", "0cm/train_0_data.txt": "40292c504a0830dab7ac4a7c56e90f13462b34c84e4a2035bfb4da342d9d1ed4", "0cm/train_0_synch_debug_signal.txt": "47013561b14a2f2cc0f1a76a8bc24af5f148f43fdc71dd67f1e82c48cc001a86", "0cm/train_1_data.txt": "68bf0c89ad133b6e06dc5ea1be523d0d7f65e553b96ef7a19b3f86c6c9f5c994", "0cm/train_1_synch_debug_signal.txt": "e4b5240f13894a12c34a6b54cea2f9252cda7079d4b952c9a8dc2128dc888987", "0cm/train_2_data.txt": "2c835169339b37794ef40793e9f8fe26b18bc30f23bbd0ac72178314df638df9", "0cm/train_2_synch_debug_signal.txt": "3e59783e7e7c272ac368e8f31555a0dd58313e589d93d5ffe1a7180b9638446b", "0cm/train_3_data.txt": "259347443e6edb0ebb629bede40fee928d6c995081a9ba4f20245f3deec8c26d", "0cm/train_3_synch_debug_signal.txt": "b576e7c8bb4663576aff7e534009db97d71c5a5dcf2f46f26fe7e0104fdf20c7", "0cm/train_4_data.txt": "dbdc925a42f96058a12b45b62d80a51df08f1b0c25fd12958e4f2ae34c572da8", "0cm/train_4_synch_debug_signal.txt": "14bbc3ae2ea2832b0772c4d71eef83ede5c3bb1f3eeed5ed7fd1f7a2c72144ac", "0cm/train_5_data.txt": "918453fa185238486334636004d1b0d1e5c02ad76e23656df23decefc891fd9c", "0cm/train_5_synch_debug_signal.txt": "7ec0fa4326e729a635c43d5cfd4f372c11b6a3bacfe2bf26e95179e7298991bf", "0cm/train_6_data.txt": "60407f2241cd6340258b5be53ea4c8baca82adb1ecfeb389d6a751898d0b8303", "0cm/train_6_synch_debug_signal.txt": "22e068bb77db558eb5e2c7ed318b5288dd16fb10884a28bc0d69730217fb54de", "10cm/test_0_data.txt": "6f3cd6fff611c4843ae16c5bb1274e37d6731c84f73b50cdb4577f56a7b4f8fd", "10cm/test_0_synch_debug_signal.txt": "9bed89f13e02215e15e52e801c36c09d06b4f505c9378802c0d7826388b80e60", "10cm/test_1_data.txt": "328be627e740d5eaeee075297cb2b6af5aad4e53944d10dedb390e9649f452c5", "10cm/test_1_synch_debug_signal.txt": "3fcbed731160d7b34613750697b1ede077ab16fe4753450498b8f2ee579eff43", "10cm/test_2_data.txt": "d7002ca3a51eb879b27cf509edc8ece883057896a8d1d19449467d9977c65b7a", "10cm/test_2_synch_debug_signal.txt": "d47812426b6867e30bc89749aec653371af9ff7b4f6157fee7c4fa7fa18619f4", "10cm/test_labels.txt": "d49a07e40fb198c86dc04a8d7e71ce4328d46807b1ac82523868045461926a6f", "10cm/training_labels.txt": "9f7900ecf822b645cfc58ba5e0cd54d0f4ba08a1e956ec4ec0a47eeb3ae0fdd7", "10cm/train_0_data.txt": "1a28078f58126d14024d5497fa2df744bf13185175431025eb5aa9a4a12456bd", "10cm/train_0_synch_debug_signal.txt": "bd4871684a20644eee5bc4a141e4e1261ae217ae6872deab308a66423452b9ae", "10cm/train_1_data.txt": "d812bba1a57741c78c9104876ff39afa94b22c7168bc91642155484021c65572", "10cm/train_1_synch_debug_signal.txt": "e16ab8efe781416fae2b123cf44868afaa88dec8fcfba3ed9e11e53724cba4f8", "10cm/train_2_data.txt": "ebf0d9d28e1e5b838ff2d5efd4763bd11b456e4fe43c65ac8f6e3fbd5d217014", "10cm/train_2_synch_debug_signal.txt": "e5b6375a4775f4b267d654a6460ef8d9b0f728a73b21eee8b4f292c6ed1dd31f", "10cm/train_3_data.txt": "7460698b33d29e0b6013080d1f18521e4be94ea75533c3fafca3c1f29b78e444", "10cm/train_3_synch_debug_signal.txt": "9373554ecde1fe34fc7ae3f3be28d4bae4acaf5083aa7174a3179458977f3cfa", "10cm/train_4_data.txt": "e948b2bb7f8039c55e57c6e311c0ce65c15749fb66f828c994d2117379f0381c", "10cm/train_4_synch_debug_signal.txt": "b50997a3df7ca85809fdc69c35ddd0af7a5558db7c08bb867a05022bd3763b62", "10cm/train_5_data.txt": "13fedb41803eb165bf5fe961a1a498e607792c552a27f191933c45628072df57", "10cm/train_5_synch_debug_signal.txt": "bf7ae57b91b1f7b66523ee1b57eb82d60ab00dba5a9bc2f918947fca4b94a4c8", "10cm/train_6_data.txt": "efd025b8ff8b30fc5cd277e18fc93eea889b8eb4f2164309c69f663a0b4550f9", "10cm/train_6_synch_debug_signal.txt": "4d9abad6b901439086799f872fa0eb291386e37b33e8b4bcf9cceac802a1615d", "11cm/test_0_data.txt": "10b81f7d9925117cf928dd597ab45820197304eb7092cc489fe0c72a98c626ad", "11cm/test_0_synch_debug_signal.txt": "efacca7307d0c4eb49981e946825263fe23ad17371b15453cdc97c9724453df6", "11cm/test_1_data.txt": "43ee9d62dfb518087241c7fb7424ca49c2077e4abbe56ae004c173f34720de43", "11cm/test_1_synch_debug_signal.txt": "1f3c98a1db2572aae32fcfa8efacf7a3b13f46087fe568d68d834fc83471a396", "11cm/test_2_data.txt": "30908a59d78b2c85b8bd41091c03b0c3b20bc47e3d2161c3a225399578e04375", "11cm/test_2_synch_debug_signal.txt": "3d44299298808b57f028b6f0bfb249b6c9f3b80a75ff2f050cf6b5a7b35761fb", "11cm/test_labels.txt": "d49a07e40fb198c86dc04a8d7e71ce4328d46807b1ac82523868045461926a6f", "11cm/training_labels.txt": "9f7900ecf822b645cfc58ba5e0cd54d0f4ba08a1e956ec4ec0a47eeb3ae0fdd7", "11cm/train_0_data.txt": "cd84a89ceb4732c64bf1fb772567a3ba0e81713003df224dcdf6e82af96681c7", "11cm/train_0_synch_debug_signal.txt": "efc1a792028cc2e952ff9f25baf64653d9c48319d5c063cd23f3c34bdd2167c3", "11cm/train_1_data.txt": "9b34931afff51192097d373c517ab9e2fb56b24947ba7a5ff4c6c942e6568e6c", "11cm/train_1_synch_debug_signal.txt": "4d312f74539d0321734779caa17b4c7950b5da6769615cc0e84fd10a8caff7f7", "11cm/train_2_data.txt": "29a80d60a5c24273eaf15d819f710fb4c2038422e0cadbaea2763f2b893563cc", "11cm/train_2_synch_debug_signal.txt": "24bd2c7e6d46362374869cedd7a18ba36a9e761f988c1bc6957bc6beda491d21", "11cm/train_3_data.txt": "8a2d2efd025adec57c328433553360005c972c0b94b5823588960b36317fd70d", "11cm/train_3_synch_debug_signal.txt": "40dbc7bfeb0d02415f54868ce4e424c969dcea4ffbbdb0286956f2ee8e63dd9f", "11cm/train_4_data.txt": "d1041d14afcdacc7f798e691765be410899d12dadb670bbfe232d21d89f897e2", "11cm/train_4_synch_debug_signal.txt": "82bd7e0006c44b0c290de62a27c182b1a493723c192e242a8a3569cb6663b9e3", "11cm/train_5_data.txt": "1095c5e4a84e6f0e2ac5f91441afb22e03649456bc86971ea340065448cf306c", "11cm/train_5_synch_debug_signal.txt": "fc7cc3c2375cfe1f23f92dd4f309c8b8f38af4f1ed536c81e3224f4f5109ee97", "11cm/train_6_data.txt": "e91e9d898fb123b0261f2fb226af1f12c14e255fac11ff74626a3f03ffe720fd", "11cm/train_6_synch_debug_signal.txt": "9c256330e133232256fb07583a989bd90d9d34d233072eb6ee45814a09f4d264", "12cm/test_0_data.txt": "08aab9c296c1062b629d4e489549f6f6432f60442c937b371bd60e0e9b32916b", "12cm/test_0_synch_debug_signal.txt": "4eb19118c7810921013351b1a6fd3b01c38f6bcb78bf8bdcd26fa19f53947aaa", "12cm/test_1_data.txt": "e156a559cec6244cfdd6b9726e54dc553844a8d6b80cac634bd809779592c618", "12cm/test_1_synch_debug_signal.txt": "f1359be50d94e15baebe35dde30a06d14132c1f410c956dcddf5e2c075619a66", "12cm/test_2_data.txt": "8929a40cf875e1066b35e17128e6acb28281fd63beabf90927b0b58930590ebe", "12cm/test_2_synch_debug_signal.txt": "99393706c1588ab753b9a95c5065d514a9e596dcf4e773b5bfe0ad6d61c222d3", "12cm/test_labels.txt": "d49a07e40fb198c86dc04a8d7e71ce4328d46807b1ac82523868045461926a6f", "12cm/training_labels.txt": "9f7900ecf822b645cfc58ba5e0cd54d0f4ba08a1e956ec4ec0a47eeb3ae0fdd7", "12cm/train_0_data.txt": "25d7832655f4fb65ccf5aa316ffea81886631c4654a8649a624088258cfaa8a4", "12cm/train_0_synch_debug_signal.txt": "573d5ce6ed771c143f1d9e6c2627bcb3cdfaf9fa80fefa469c67cbd56b49ffc9", "12cm/train_1_data.txt": "adf6bbbebdbdce5221832e85af7af1a7f3694442960fd7cc0ad3082c70d0b7eb", "12cm/train_1_synch_debug_signal.txt": "4fb97adb8f6ebf173ab01d0018745a9cf38af563f6e302491702f0411600a17a", "12cm/train_2_data.txt": "f18e3930030bd27af75401238b6af9c8d2a01ccbd35cda50200a8b1bdb8bace7", "12cm/train_2_synch_debug_signal.txt": "959e9e06b69801fed284afc3db51cebde7253fb74cee0bb8a5a6e9602f3bc9bf", "12cm/train_3_data.txt": "87cadd26e7717f9559c9e828e354954c010db6c74d603a0287cc1d002f86bf56", "12cm/train_3_synch_debug_signal.txt": "93e6a5bc6966d4b24a7cdab233465f8d0ec5359290798c57db0d74841cae934c", "12cm/train_4_data.txt": "3d1bae93016626705024209c93ebdd84c2bf4c2adf379a5c8e9e8e6313729ae3", "12cm/train_4_synch_debug_signal.txt": "aec6e7725ba51b747bd75ebfc11f85e2f854b955156696cc095a49cc13380e63", "12cm/train_5_data.txt": "961c3db2a32c187adf3debf82cafb4474e2d8fc6eb2de23b8ce1b5d62dc9caf1", "12cm/train_5_synch_debug_signal.txt": "487a753ac0ecd524863c549d5367ab8a30987e6262188869cc63d1e0afa535e8", "12cm/train_6_data.txt": "6bd4710b10fc52cea9c78c8277cd0979445b0ef3f9ed1f9a5a418104c5b124e6", "12cm/train_6_synch_debug_signal.txt": "aebd8c549623be5b3731b8e87614863f556877c15df18972d78a9e1d5fc1acab", "1cm/test_0_data.txt": "8119d582e6d991c9d4e142717a61e565223604341f02df6f42377d987fac65d2", "1cm/test_0_synch_debug_signal.txt": "91af1e0f71a8ba919ec524ffbc75a7cc093e9f405924dab629eba7ba408d5a7f", "1cm/test_1_data.txt": "60685b8c7208c6586aa5e126153353a2166abf9096e4b469384513da83e5c265", "1cm/test_1_synch_debug_signal.txt": "e605406cd3e5e24457d2821acde1bc636fbac3beb576e5af949c7fdb3c1d2b15", "1cm/test_2_data.txt": "29c2b51296835723750b76f5b30e2d53722eed2efac4f39fc84b6407c1684e05", "1cm/test_2_synch_debug_signal.txt": "6779f966c0e54651d81ca590ddf8aecad456aef7e142f144187a8bf6304bf7ba", "1cm/test_labels.txt": "d49a07e40fb198c86dc04a8d7e71ce4328d46807b1ac82523868045461926a6f", "1cm/training_labels.txt": "9f7900ecf822b645cfc58ba5e0cd54d0f4ba08a1e956ec4ec0a47eeb3ae0fdd7", "1cm/train_0_data.txt": "fee9ec4bc8085bd4b4d239531bdb2353cf725451ba601a2fe13a1326dad270ae", "1cm/train_0_synch_debug_signal.txt": "6488c8a290b7fd2eda8d477ce160c541694a40f1745f953e0be144a6702e5003", "1cm/train_1_data.txt": "015bc5129bf6719e9e720ecc2b8c088341cfd1ee90f6c3f286bfb8bc0da9c700", "1cm/train_1_synch_debug_signal.txt": "8119ecb2623c11af2b77482ddade2c97a1c7ac70521ef1cba54581044179cd8b", "1cm/train_2_data.txt": "028bbbd1cc2652cedccc17ec0fcea91ff148cb58b08ecac8f69ec90dfcf7bc62", "1cm/train_2_synch_debug_signal.txt": "cab0aa14dd576a8e7b9994c8dfd477712cbead7234d66228672bcfa421363004", "1cm/train_3_data.txt": "7302b42079da49a2b75e36b96b54fe4f9bb8621dd9744ace1d8569b9fc8e694a", "1cm/train_3_synch_debug_signal.txt": "ca6cfd5d1c58fd92c7e5c129ede5f0762a22765bc73321e5e1fc60bdbc0f181e", "1cm/train_4_data.txt": "0b9b8f99f7ba0d8b4c1e51ae494272fc68b722bcc4678486693bf4f2388ac734", "1cm/train_4_synch_debug_signal.txt": "a82d5678e148a12c916cc8ad1bf3f0fd1e894ed3f33be8da22075cab8d012c71", "1cm/train_5_data.txt": "5d84c9a4d3d3e387a075d2680db0b2f29f54946c95c558196c962f6002a114f1", "1cm/train_5_synch_debug_signal.txt": "33fc87a5a10ce3f0bfa4e0cf964d7d45aa6dc47c77e9aeb9196464c8f53708de", "1cm/train_6_data.txt": "ad14aa383ac0359b78731cf4f3bfc7887abd51b728de29d74a1d7fa114554815", "1cm/train_6_synch_debug_signal.txt": "1d237333eb3924c6edba9ee8ed3d848c026097bcd15f18b3fa159a9c026198d3", "2cm/test_0_data.txt": "77e55680d4ddb776503d07c25b1d57ceae29e002929289387881941214caa18c", "2cm/test_0_synch_debug_signal.txt": "0e5735f682775db5a1f6ca9c32baa4082ab7a2ef8cc4167aed5cee133e9738fc", "2cm/test_1_data.txt": "53f8fb8050de8abfdd9347b079c11b1f92b06bbd7efb153b800c49cd4db72763", "2cm/test_1_synch_debug_signal.txt": "cd601044ad0d04ee4a1745bcb512dfc249ae05d611c812c2f5008b7700141f7e", "2cm/test_2_data.txt": "f97c7227e19e89d5a9f3f72d4db328bd7b85b94e8abcebdbea7984bd6e0048d0", "2cm/test_2_synch_debug_signal.txt": "c1f62dcad8d6799ffdfc85e334ae74d46a1bc1cfe35d861adaef12063a047192", "2cm/test_labels.txt": "d49a07e40fb198c86dc04a8d7e71ce4328d46807b1ac82523868045461926a6f", "2cm/training_labels.txt": "9f7900ecf822b645cfc58ba5e0cd54d0f4ba08a1e956ec4ec0a47eeb3ae0fdd7", "2cm/train_0_data.txt": "f0a449ec8c6a3671610d3ee374185f0120ab3b1fe82cb96a22d819fa878c3d0f", "2cm/train_0_synch_debug_signal.txt": "ee75e98f22a687798b725d47cc8f848b5425210fee0d49d647bc34ab1170a135", "2cm/train_1_data.txt": "d4344d31c132b7072ff3bffecd1b0c3c56f4c4f950468e913e59dedb50bd76f8", "2cm/train_1_synch_debug_signal.txt": "f07585eea4cb01acc1f7c5f20ca1042f0f3faad423bfd6ce95e2e9709c2667a0", "2cm/train_2_data.txt": "e2fad1f72b80223964d6f054d16cd095f5e08afd7ae09603f67a9ae2454b4a5d", "2cm/train_2_synch_debug_signal.txt": "5eafea599470595b7e046c7e10378d0898cdaeb8ae0c039fe25aecc348f5db9b", "2cm/train_3_data.txt": "850c21a73de49243d7b1d768169aaa47093e7be036800eacef19eec5e8d22b47", "2cm/train_3_synch_debug_signal.txt": "aab5eddc3b7955e6f918fb4968f351404ed10e560bbec9b45216c89aaa14c8ec", "2cm/train_4_data.txt": "3fbf0de3a242214b9f59ec482338cccf64ac8fca7129b83a15559a89af73e0df", "2cm/train_4_synch_debug_signal.txt": "c31ddae063446061cb6e7553170cc02a4ed77d855010fe5d92a55e4a4803634d", "2cm/train_5_data.txt": "36c8caf5e42db673bc0f65438069643204393788d1d501761bba9b8e3b8ad26b", "2cm/train_5_synch_debug_signal.txt": "ee8b52f777ff7cb4d7a78e78f4a8cde4ab81daa8902f836e74c131817de72c5d", "2cm/train_6_data.txt": "e33b439cd213badb3a7445c3762919778c64afa2855b92acb3f0e5a387ad7298", "2cm/train_6_synch_debug_signal.txt": "861297a53210356c1aa05e6c29f22bc0e6e288213bf46249a8f74ad8c7f95e1f", "3cm/test_0_data.txt": "7c7f582790779566d91a3b0bd1ee5a8b7017816e86a99baaeb8c39c1b6c01671", "3cm/test_0_synch_debug_signal.txt": "290a083069b62e2f6b149e946df99e46e06276217a1390ff3dc36da3613d017b", "3cm/test_1_data.txt": "0923f656e375991cb3ab5b21cccf2a2edf34ccdfa39c186f84103c744e207c87", "3cm/test_1_synch_debug_signal.txt": "02470be78a9191118f52a4c25e0065916defbe3a9cc6281a768b8167e303eab1", "3cm/test_2_data.txt": "63f6702817c010d529de476a10ad19b6e7c6efb08f601704f9323af026ee6fdd", "3cm/test_2_synch_debug_signal.txt": "416bbee17b2b3b67897b55605762b430c89d2eb0cd63454d89b0b2cc3c20410b", "3cm/test_labels.txt": "d49a07e40fb198c86dc04a8d7e71ce4328d46807b1ac82523868045461926a6f", "3cm/training_labels.txt": "9f7900ecf822b645cfc58ba5e0cd54d0f4ba08a1e956ec4ec0a47eeb3ae0fdd7", "3cm/train_0_data.txt": "7f35cfac55f8b3363f12b3c2f2cd26b7205b792d58f2bbf2efff454cd382708d", "3cm/train_0_synch_debug_signal.txt": "413c04dcad0b8404aef9e466babe25e9f791eb7be740e47edc028a2f959279c9", "3cm/train_1_data.txt": "dd331cfb1dd56e1615df7b702e420088536572bd375992f50bebd3e6ced09686", "3cm/train_1_synch_debug_signal.txt": "3aaf4fec669c4635a2eea98bbcc227bcb99b5ae90828dcf2bea17843ff0f4dd3", "3cm/train_2_data.txt": "46fa548fc6e4e47683c13be80e9ae53448b0256913fc2aa5177a4ff4dc990006", "3cm/train_2_synch_debug_signal.txt": "0d6b0d83728a4f2432bd60dee13c52a0fd415a249824290bf3b1b121a37c5cff", "3cm/train_3_data.txt": "b7ff75b43163d33d7a08dea2fbcca490f8b9fc5b42f0817d2af856c3e5c21a9c", "3cm/train_3_synch_debug_signal.txt": "80fe8b53c3a6987af0bd4e407722c6a38c8bce47751f123bcdb73eea47919465", "3cm/train_4_data.txt": "c0f3125bc7baac9bf185b0dbcfc5072a1062ad283bda02bff1ca8fd253cc854e", "3cm/train_4_synch_debug_signal.txt": "e2b46e2de192a7f4d2cc92bb15b95c1410d34a04dc0f81de5562dabcd5c0a0c0", "3cm/train_5_data.txt": "e08b4469f182566771e8923514ffc59f223f6f488184d42f53a242dba53357af", "3cm/train_5_synch_debug_signal.txt": "d1913be058a350b88bd4fbbaa84db06aebab343b49cf4a4f35829330efdd753e", "3cm/train_6_data.txt": "c0be30f3c62c7d2b83b00c0e65b72c32a2dcc7bd405c35c8b61145d3d77b5bb4", "3cm/train_6_synch_debug_signal.txt": "e03777e11709e95a983b7156448ec49480a4c37286d79b63b2fa5729dfb0320e", "4cm/test_0_data.txt": "2038b588567bc49bf880a6225220d71f2835464024cfc193818269ec7bf0d198", "4cm/test_0_synch_debug_signal.txt": "10408183972df8b2dd58bb99a4c126e983342d4bf818072c3b1c620dd9f25db9", "4cm/test_1_data.txt": "a3dd7e1427a142af76387510c8fd04df25036bb4a5109440f446c4de8ae3f1bb", "4cm/test_1_synch_debug_signal.txt": "5eff25f212e19a919853d1301627fdb3e40e00dd29031dbe6e3344ea91ddc8e1", "4cm/test_2_data.txt": "fbe761b579fd956bac0bbdeb486cdfbac427154a2a5e8e5fc76b07553a654ad6", "4cm/test_2_synch_debug_signal.txt": "53e3f6f2ebabd1d21aa40fb0eff2266eaa5edbbccf0931c025a3fc32c1c9b452", "4cm/test_labels.txt": "d49a07e40fb198c86dc04a8d7e71ce4328d46807b1ac82523868045461926a6f", "4cm/training_labels.txt": "9f7900ecf822b645cfc58ba5e0cd54d0f4ba08a1e956ec4ec0a47eeb3ae0fdd7", "4cm/train_0_data.txt": "b53dd33a028880c87bc421c447d324ce43be456d6ff529138c3b4a510f745880", "4cm/train_0_synch_debug_signal.txt": "1ba58d208fe94a7ba840cbb10a252237b28b2bc1a16048a6427d905354075cda", "4cm/train_1_data.txt": "47b4811fa865000f6038525eeef63df811d3f35c25f05b58047b819d5c226b6e", "4cm/train_1_synch_debug_signal.txt": "07fd8f4c4ec393491f76c1156e632bc292b6ed8a91a7b54aa0eac99a2a8dbcfb", "4cm/train_2_data.txt": "7c284e60b32a7133601c4737dd64b08f8034ca6e86958fdfc8bf04ee4dd15f8a", "4cm/train_2_synch_debug_signal.txt": "52a2f734ecec469c8d7bcf40255fcbd815bc5833729c89d6c8067ea2734acc12", "4cm/train_3_data.txt": "95a2a5cfc3ebe2388bb1a1d475692701d0bd6f939cfd993300976a88c1095ba9", "4cm/train_3_synch_debug_signal.txt": "534cd64d7429de97f4ccb58f9f066487362add41b533ea726f3c72dfd08a83b0", "4cm/train_4_data.txt": "4021d3ccfa20523b60efd172e173964047d1b67ab640fde86a40a998919cb969", "4cm/train_4_synch_debug_signal.txt": "4de89be35cd17d3aa2597c96a88b99c937fda0a9b99fc62df98e5173b9ea7018", "4cm/train_5_data.txt": "786e1d40c3462d59ea8ff7fe001b1d3c1bd86334b824b247928d508afc7ddc82", "4cm/train_5_synch_debug_signal.txt": "67a30555eb00aa9575527809b4c4956e9d8c9be335a8d4166380ef4c82d673bf", "4cm/train_6_data.txt": "b7d3d49b3cdd993ef60ced825081b6881a58998da139aa58ab973657428806fb", "4cm/train_6_synch_debug_signal.txt": "a64994dfb2506dd084b3450ad9a2fbcb41db83d12ff212f68fa1479fe33d15bb", "5cm/test_0_data.txt": "68137ff67301fbd8a0f629976ad71c2e5fb17f3100793764e5dc27e12aced093", "5cm/test_0_synch_debug_signal.txt": "319504c62f8d7fba38d6358b9fdba2465f5f909bf17aaad15887fb29b2a9c687", "5cm/test_1_data.txt": "12bc1f58ad4fd8ede0021cf6ec705b3018452bd174ecb72e147ef7e29af47453", "5cm/test_1_synch_debug_signal.txt": "c054575e73a19675bd31b5840e2a9005bdcca2582c90fd655d6f5b92718c8525", "5cm/test_2_data.txt": "a1752bbf03bc0ae03793c27d6d2cd3446d6df2c6973efafb7ba62e2db7100ac9", "5cm/test_2_synch_debug_signal.txt": "7d3b5ebd958cbb90f78e1aa8f2a84877e478493c804a94be9bef0cae481b04db", "5cm/test_labels.txt": "d49a07e40fb198c86dc04a8d7e71ce4328d46807b1ac82523868045461926a6f", "5cm/training_labels.txt": "9f7900ecf822b645cfc58ba5e0cd54d0f4ba08a1e956ec4ec0a47eeb3ae0fdd7", "5cm/train_0_data.txt": "6efea7c89d00513a6c0bb14d60be28f3b17b5be4f4a2daed09797a8a7e4005c9", "5cm/train_0_synch_debug_signal.txt": "5fc36d806ccaf5518f7874a8c8eb73b5c0d406dfcbc36d9f07ed27329184dcd9", "5cm/train_1_data.txt": "b62319a2554048ed154cc5e73e9bb4bc32f1d5d58517c806c87c08196dffc4d4", "5cm/train_1_synch_debug_signal.txt": "7e96f683c76de92b89d4552e7a9de5a0a938ef5b602df1cbfe3a940fdc2932b0", "5cm/train_2_data.txt": "419f5896c780851c8defb2596a09d6fbcc059768cc5abe0f48d391c5b0a6f470", "5cm/train_2_synch_debug_signal.txt": "9d877f9a617e6e96ac98500f1e4f3439f3d4f12dc64788ae3a11f42ef7aa3a28", "5cm/train_3_data.txt": "9843146d7c60482e14b570df5b1ef73b22f6a9414999b78eb71fb7bc73a30ecf", "5cm/train_3_synch_debug_signal.txt": "991cb48c3f30519af3659f6b0878f6906f2e68d3a0db4d992f3bdd759ead1eb9", "5cm/train_4_data.txt": "cfda8e98ab6c401c8bcad80f45ed081cbfd7bd28b033ee396d82bfb947c049ce", "5cm/train_4_synch_debug_signal.txt": "93d8698305e17c5d6578fe7261dc4756d58c4d4f4a03fd09bee6bda3f491d6a8", "5cm/train_5_data.txt": "57bf0b4fe387993211ba1ec961f36d7fdb44ae4d0419c5e3ab86ecc691b88504", "5cm/train_5_synch_debug_signal.txt": "aed2438c2db9d39985ed1c886ca7d07f39dd6700ad9353ff6c7a785d96690a1e", "5cm/train_6_data.txt": "cf131e2aa2a3bab3471312492e9744f5f082c891a0b9c36212e8ed777881fb3e", "5cm/train_6_synch_debug_signal.txt": "7be98589eee51b911fc5c4053cf647bc9bd7ff0576eef971a9b3f3cf2b44c743", "6cm/test_0_data.txt": "43aedb5ee290e36192693883c5cddbf5f05fb90e15a914d34939836a8ac95cdc", "6cm/test_0_synch_debug_signal.txt": "c00cbd784aed8ea8ec30090b04c6e4bb2cb07c0ac54a1a7a04f48d5c5d5bd31b", "6cm/test_1_data.txt": "238dd66d700c933cbb8061a57eed6ea74b72dde8d7a33f796f08b6174a81d945", "6cm/test_1_synch_debug_signal.txt": "0ba902af436a95b4ff04cb9cbffda1d3b4c1d3b8f1366882b93218f483ec7ef1", "6cm/test_2_data.txt": "4d07573608f909589ae2f3c1a2c3c4a29c122512d199cf8a505237fc9e8d182c", "6cm/test_2_synch_debug_signal.txt": "d7e7ee7240fe934fc62a9c858e83d99b3d338a3e7fe522abcdcf5f502b14ba75", "6cm/test_labels.txt": "d49a07e40fb198c86dc04a8d7e71ce4328d46807b1ac82523868045461926a6f", "6cm/training_labels.txt": "9f7900ecf822b645cfc58ba5e0cd54d0f4ba08a1e956ec4ec0a47eeb3ae0fdd7", "6cm/train_0_data.txt": "3abd0dd36728a82890a3dbdd37b8ad6bbf8706c8daa74bbac89840171ba48400", "6cm/train_0_synch_debug_signal.txt": "f5c85c5a3f1f485943dbf725bcb882598fc6eaa61a7f652326cbe9c55fa83264", "6cm/train_1_data.txt": "5a1d76bd250653982dc7a836af87ee28ccb1956d382feea83722187184a4c265", "6cm/train_1_synch_debug_signal.txt": "dbd4c52f32b9710bdf0696c1c5c28a452d52a8419fa767070ecbb0530640b911", "6cm/train_2_data.txt": "b3321ea52fb32af485d4e92cd26fc92a25b806f3d2203071b8a0cc71f82300d4", "6cm/train_2_synch_debug_signal.txt": "c963fafd7099f4d05a02ebf9be81f45d6e38a8eb6b121dcccba5ce20bdd4aa92", "6cm/train_3_data.txt": "c57b8aba2498d642e7545a7636155f3d7d4da741e6a36f2310af53e4bedf6f65", "6cm/train_3_synch_debug_signal.txt": "6d7ab3abf7d1139e37d6aa2ac720c6b59bd8e8a5d2d5d864e581d66ac1eb5327", "6cm/train_4_data.txt": "2fe35a2cbe1dfff68fa6be9451595640aa00db82512a26e604fd49ae5e1c9545", "6cm/train_4_synch_debug_signal.txt": "2d9fa2775f55cf4c268333e8021344e89befedf6f635677818b0ef7107fe5f33", "6cm/train_5_data.txt": "1960cb964446596abf0abb590d61c94a73d137aa621596813897f30295005f1a", "6cm/train_5_synch_debug_signal.txt": "f66d6a81b64b1b222399ddf617259edc025d71e649531a8e3b7fa526d2bf4f28", "6cm/train_6_data.txt": "294f679274a61c0dabfd65a8c3afddf60eb38365b4722fcb7d91e813388ab54f", "6cm/train_6_synch_debug_signal.txt": "4d42e26dc50fc2619979f507f4a2bba3574e126ebd3a76e77ab19bc20fb6f8ea", "7cm/test_0_data.txt": "4a1a3e38e758070e4bce4fa27bef3c11e17583d60449a920718afa459a1233e5", "7cm/test_0_synch_debug_signal.txt": "234a36fb17b10cb04ae08085658ba22aabc2a68ffdfd38d2c729b5cf3ead64e7", "7cm/test_1_data.txt": "e30dfce6d4e41f5155719fb31dc078a6d401798b2fb1a70cfd971647a919ef3a", "7cm/test_1_synch_debug_signal.txt": "682d9f3987804fdaef39ef9fe45caeab20e0d66fe4afb9f58fd1095f7b50fe18", "7cm/test_2_data.txt": "827700539bd400c08b4e93fcce5dbec7475dbbe3c88a5b5318df29519a8ffbf5", "7cm/test_2_synch_debug_signal.txt": "4f7350415b79b0919f66de6bf5f8df3342d6fe3042e52f8cb0b63beaa404486e", "7cm/test_labels.txt": "d49a07e40fb198c86dc04a8d7e71ce4328d46807b1ac82523868045461926a6f", "7cm/training_labels.txt": "9f7900ecf822b645cfc58ba5e0cd54d0f4ba08a1e956ec4ec0a47eeb3ae0fdd7", "7cm/train_0_data.txt": "684be47796a9c44e0a23606a9d41fed3b248f99ab5e4ea1151d7f32df0a52d49", "7cm/train_0_synch_debug_signal.txt": "9ccd4900387a08e64c2902513b3901442d3b805482495d00b41709a0d7a817d0", "7cm/train_1_data.txt": "47ad7bdec3f0865c05a9144bf8f8ec5ee38ae93f2ac8302da2f69831c1fcce35", "7cm/train_1_synch_debug_signal.txt": "8a776dcf515ae20e6beddebbeb00a88e9e0d63e72e98ea49ad503844e2eba674", "7cm/train_2_data.txt": "d6eaf4900b07abe5be93695ab300e594328d8a71a1871dcccb46130ce4862405", "7cm/train_2_synch_debug_signal.txt": "4dafe775bd72966ad47e05de4f6f78554aae2b1948b59000f70071902e2807d6", "7cm/train_3_data.txt": "77ecc5f249d4e23896b2a78c7f078876805f5934206d4a10c782a61997690845", "7cm/train_3_synch_debug_signal.txt": "ec8a423e4cba8400445b54d84b8f8d2a932724da5f5be5cebb98f180f03d7f3f", "7cm/train_4_data.txt": "7e86a9b43950680f1715711b8a143736f643fabe2bf2667547fcf5bded0347c2", "7cm/train_4_synch_debug_signal.txt": "68c689ce10e69f17722f0372a053a8db9c4e4cd3857cca220ea3ffa8e5a8a32c", "7cm/train_5_data.txt": "7a0694a4c862c8d39c63229c26dbf3523d972c2090cbb51c8ca5282207a64993", "7cm/train_5_synch_debug_signal.txt": "bc95bd5565f1cf5c6bf3e94e5976d3340f50a3b1b127e5244c52f708f6ecefc2", "7cm/train_6_data.txt": "61fc35e9922bc140efc811f44ce8590ad5171d60c2417170edd6f8dd4db2e47d", "7cm/train_6_synch_debug_signal.txt": "2da24a6c2a58c1114093aa33a980f0bae8a25e041409ffdeabd2ff7a7a76d173", "8cm/test_0_data.txt": "91c831357a51d9cfc0a5559948373eb4b5068e40d6c65a9c8a6b9952596f0208", "8cm/test_0_synch_debug_signal.txt": "34f1ed12726c9f5df8b8d7a888ddf43a4d23b88ca365212bde3a7e521e0901f9", "8cm/test_1_data.txt": "b64eda5383eeea9f1815f7130356cb7a9f840483b4eaa20c25dcf9648af0c95f", "8cm/test_1_synch_debug_signal.txt": "3c3233c30226775673a5b0144feca980e8691a6e150ace820dfc11ad2b1a3df6", "8cm/test_2_data.txt": "9a1f9a017abb4827f0b135599553df3ad011872a87e81229514827bab7c97240", "8cm/test_2_synch_debug_signal.txt": "4462921e891088bbbf4b2911360330a3d9d13546e4a207e887a56fb9c17bf525", "8cm/test_labels.txt": "d49a07e40fb198c86dc04a8d7e71ce4328d46807b1ac82523868045461926a6f", "8cm/training_labels.txt": "9f7900ecf822b645cfc58ba5e0cd54d0f4ba08a1e956ec4ec0a47eeb3ae0fdd7", "8cm/train_0_data.txt": "ff36efc20b23f87ce3c2e6d67b211230740f35a7f47809fe626d834a2a4da8ae", "8cm/train_0_synch_debug_signal.txt": "d249ef7f3042e6f354f232f3f8d15f884d7e46ac7c8e33b1bfb57317d75258c1", "8cm/train_1_data.txt": "76b98a39aa84b4140be473810b8bd14b58abc82f20d34eda3201e452781f0813", "8cm/train_1_synch_debug_signal.txt": "aca028888d06570eec068f0c3cfc576810559bda43bc0c3b35d3546b682cb9f9", "8cm/train_2_data.txt": "d242d4dda64dbb65d96d88d6a6c50f30216dc61dc95a0fde59774d0ca7953f53", "8cm/train_2_synch_debug_signal.txt": "ba364b935e8b23213006a538bf257c671bb3b8240cd4f79df8d7944af307f673", "8cm/train_3_data.txt": "cc3a3429354baa0ce707f9f13f3b1447251df6a9a44ba1c7ee9fc1c13f8ff487", "8cm/train_3_synch_debug_signal.txt": "292da9da9b7d101a1baaff76d476d5102dae778cd215dab7352941b9e0b710b4", "8cm/train_4_data.txt": "535534754239fe5f2763abf400ce0863c38da71e7f23335aa27d934f6d5e7d2d", "8cm/train_4_synch_debug_signal.txt": "395e470595dbace3707f2a14f41f7f10ef2f4b9ba198e3875d62d35034382331", "8cm/train_5_data.txt": "5661e1fd4844ac1f583ea10e23fe19a0d3f75b60e97270502bf613ce32c93401", "8cm/train_5_synch_debug_signal.txt": "0633acd1a74d314bcad8fc157596b9141a4275648ef797a6fa14e7c7acd68686", "8cm/train_6_data.txt": "fbde405aa29538ffebb4cc2c288d494a3582d856f5ae902d47424305ce5d6306", "8cm/train_6_synch_debug_signal.txt": "a8cc7c7e19e82a2aca77f12b63c644fbb590dd3bd2f283eebb6e46c5a41f881d", "9cm/test_0_data.txt": "5536615ef5d596c9a3d3268bdb88e61c8b355bf9bbbccb253f6200aca8fe1c64", "9cm/test_0_synch_debug_signal.txt": "5785245dfd6a76f43d9e60eb8c9673e8b6ba8fb772c508da3a3201545ff0869f", "9cm/test_1_data.txt": "fc224fbb1222993b9783ae327c49b46ad4f28fbae55ec65d9864b393a3988ad3", "9cm/test_1_synch_debug_signal.txt": "e797bc2f8268ee99f575fc662aebc422c160d5707c1f49a66cac285d2ffae63c", "9cm/test_2_data.txt": "29d47685727645022250fb126210ff8a8a6e48db7652fce94cabcb614b26ef2b", "9cm/test_2_synch_debug_signal.txt": "ed6f00381304af019ab5297d48c82fbd4a1eac1ea19eefd15f7ab6b87ca0bd32", "9cm/test_labels.txt": "d49a07e40fb198c86dc04a8d7e71ce4328d46807b1ac82523868045461926a6f", "9cm/training_labels.txt": "9f7900ecf822b645cfc58ba5e0cd54d0f4ba08a1e956ec4ec0a47eeb3ae0fdd7", "9cm/train_0_data.txt": "34a4bb3007f21a90296d231a84ee30396d7049ed589bb36f7e85d0b014b64a28", "9cm/train_0_synch_debug_signal.txt": "2e4d13848c7cce9248f89c146883be9a8ceb9a12a7185c4aedd9b284982e95e6", "9cm/train_1_data.txt": "38dcf216ce9c6d6100b5153fd692696d79f7047c6e77dac9355a0320afe7f598", "9cm/train_1_synch_debug_signal.txt": "e8aae49b046bb9cc9597c847fd76116bb98928e63be0b0f037aafd6ba19f3357", "9cm/train_2_data.txt": "29b141ea92ae54ed69ce8668db44bdbc090eafae51cdacebe358ba8e2d7fc387", "9cm/train_2_synch_debug_signal.txt": "807924f06878eb00c34229e5c35603b8fa02e06a222cff1b49a668e1fb755b46", "9cm/train_3_data.txt": "1b37d8725e02fff88b603c9352aaba424b11793b9204fee3d9e1339f157e98bd", "9cm/train_3_synch_debug_signal.txt": "7141983ea813c27c9d873c562d107fb238bff439787d3ecea81d3e5727149b3b", "9cm/train_4_data.txt": "ba1d7969d2c8c27fcb78f96372e89440850d823333faff4fee8d0fa3ab7c6557", "9cm/train_4_synch_debug_signal.txt": "f7ed7b6f154239059282bfb1d9f77e2ec8e58d04138a18c9c1ecbe13af79aa92", "9cm/train_5_data.txt": "e6e7bb9c37e3b94d2450149420a7220f6ea85f707e3c2b6b24d1a71d71770c40", "9cm/train_5_synch_debug_signal.txt": "211dd4f442d14c515563135604f51864d739b5f0d748792866a21ced0041ae8c", "9cm/train_6_data.txt": "41dff1af9d2e4cd42008b9bd7f267684ff0ca9d3e93563dcf2ebad507822d413", "9cm/train_6_synch_debug_signal.txt": "2bba0c3696677d6ddb5f265c92189b48476eeda4c53013df86ecc5f62cd00b3c"}, "alice_control_args": "-c -1 -m 0 -b 0 -da 100 -db 150", "laser_driver_enabled": false, "time_measurement_end": "20220624-15:50"}, "n_classes": 4, "data_augmentation_halflength": 1, "GIT_SHA1_ONSAVING": "007c2c6e849d561aac53de53eecd39e18ff6c99a", "GIT_DIFF_ONSAVING": ["paper/TEMPEST_ATTACK_MOST_CERTAIN_SELECTION.ipynb\n=======================================================\nlhs: 100644 | f065618ba78b853639aacaea27792ff45f54602b\nrhs: 100644 | b0bee213fd4bbd6d883c8f8b79afe7f65372cb05\n---@@ -174,7 +174,7 @@\n   },\n   {\n    \"cell_type\": \"code\",\n-   \"execution_count\": 5,\n+   \"execution_count\": null,\n    \"id\": \"b5cc5936-8054-40e6-9397-6597ba56bcb3\",\n    \"metadata\": {\n     \"pycharm\": {\n@@ -257,28 +257,28 @@\n       \"Non-trainable params: 462\\n\",\n       \"_________________________________________________________________\\n\",\n       \"Epoch 1/4\\n\",\n-      \"2811/2811 [==============================] - 30s 10ms/step - loss: 0.1375 - accuracy: 0.9480 - val_loss: 0.0326 - val_accuracy: 0.9898\\n\",\n+      \"2811/2811 [==============================] - 31s 10ms/step - loss: 0.1370 - accuracy: 0.9485 - val_loss: 0.0329 - val_accuracy: 0.9895\\n\",\n       \"Epoch 2/4\\n\",\n-      \"2809/2811 [============================>.] - ETA: 0s - loss: 0.0468 - accuracy: 0.9835\\n\",\n+      \"2809/2811 [============================>.] - ETA: 0s - loss: 0.0467 - accuracy: 0.9835\\n\",\n       \"\\n\",\n       \"\\n\",\n-      \"Cancelling training because reached val_accuracy 0.9914944767951965. (threshold 0.99)\\n\",\n+      \"Cancelling training because reached val_accuracy 0.992094874382019. (threshold 0.99)\\n\",\n       \"\\n\",\n       \"\\n\",\n       \"\\n\",\n-      \"2811/2811 [==============================] - 26s 9ms/step - loss: 0.0468 - accuracy: 0.9835 - val_loss: 0.0259 - val_accuracy: 0.9915\\n\",\n+      \"2811/2811 [==============================] - 26s 9ms/step - loss: 0.0467 - accuracy: 0.9835 - val_loss: 0.0241 - val_accuracy: 0.9921\\n\",\n       \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev1Distance/0cm\\n\",\n       \"Cut data in pieces with these shapes: after header:(14095, 500), before header:(5892, 500)\\n\",\n       \"Confusion matrix ():\\n\",\n       \"H V P M \\n\",\n       \"[[4952    2    1    2]\\n\",\n-      \" [   3 4944  107   47]\\n\",\n-      \" [   1   24 4946    3]\\n\",\n-      \" [   1   33    2 4919]]\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0101: 0.9927953169560214\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0011: 0.9891929754340322\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0110: 0.9953970080552359\\n\",\n-      \"Test accuracy: 0.9886926502226447\\n\",\n+      \" [   3 4967   74   57]\\n\",\n+      \" [   0   25 4942    7]\\n\",\n+      \" [   2   26    1 4926]]\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0101: 0.9941962275479062\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0011: 0.9906439185470556\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0110: 0.9951468454495422\\n\",\n+      \"Test accuracy: 0.9899934957722519\\n\",\n       \"\\n\",\n       \"Test accuracy for 'most certain 1.0% of predictions (total 199)': 1.0\\n\",\n       \"\\n\",\n@@ -288,18 +288,52 @@\n       \" [  0   0   0   0]\\n\",\n       \" [  0   0   0   0]\\n\",\n       \" [  0   0   0   0]]\\n\",\n+      \"Test accuracy for 'most certain 1.0080189630825096% of predictions (total 49)': 1.0\\n\",\n+      \"\\n\",\n+      \"Confusion matrix (most certain 1.0080189630825096%):\\n\",\n+      \"H V P M \\n\",\n+      \"[[49  0  0  0]\\n\",\n+      \" [ 0  0  0  0]\\n\",\n+      \" [ 0  0  0  0]\\n\",\n+      \" [ 0  0  0  0]]\\n\",\n+      \"Test accuracy for 'most certain 0.9953685258964143% of predictions (total 49)': 1.0\\n\",\n+      \"\\n\",\n+      \"Confusion matrix (most certain 0.9953685258964143%):\\n\",\n+      \"H V P M \\n\",\n+      \"[[ 0  0  0  0]\\n\",\n+      \" [ 0 49  0  0]\\n\",\n+      \" [ 0  0  0  0]\\n\",\n+      \" [ 0  0  0  0]]\\n\",\n+      \"Test accuracy for 'most certain 0.9957652451175768% of predictions (total 49)': 1.0\\n\",\n+      \"\\n\",\n+      \"Confusion matrix (most certain 0.9957652451175768%):\\n\",\n+      \"H V P M \\n\",\n+      \"[[ 0  0  0  0]\\n\",\n+      \" [ 0  0  0  0]\\n\",\n+      \" [ 0  0 49  0]\\n\",\n+      \" [ 0  0  0  0]]\\n\",\n+      \"Test accuracy for 'most certain 1.0009515224358974% of predictions (total 49)': 1.0\\n\",\n+      \"\\n\",\n+      \"Confusion matrix (most certain 1.0009515224358974%):\\n\",\n+      \"H V P M \\n\",\n+      \"[[ 0  0  0  0]\\n\",\n+      \" [ 0  0  0  0]\\n\",\n+      \" [ 0  0  0  0]\\n\",\n+      \" [ 0  0  0 49]]\\n\",\n+      \"Total test accuracy for 'most certain 1.0% of predictions when taking equal numbers of each predicted symbol: 1.0\\n\",\n+      \"\\n\",\n       \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev1Distance/0cm\\n\",\n       \"Cut data in pieces with these shapes: after header:(14095, 500), before header:(5892, 500)\\n\",\n       \"Confusion matrix ():\\n\",\n       \"H V P M \\n\",\n-      \"[[4951    1    2    3]\\n\",\n-      \" [   3 4955  104   39]\\n\",\n-      \" [   1   26 4946    1]\\n\",\n-      \" [   7   38    2 4908]]\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0101: 0.9926452193926052\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0011: 0.9889928453494772\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0110: 0.9956471706609296\\n\",\n-      \"Test accuracy: 0.988642617701506\\n\",\n+      \"[[4953    1    1    2]\\n\",\n+      \" [   3 4987   68   43]\\n\",\n+      \" [   1   35 4935    3]\\n\",\n+      \" [   3   26    3 4923]]\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0101: 0.9940961625056287\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0011: 0.9910441787161655\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0110: 0.995947365787762\\n\",\n+      \"Test accuracy: 0.9905438535047781\\n\",\n       \"\\n\",\n       \"Test accuracy for 'most certain 1.0% of predictions (total 199)': 1.0\\n\",\n       \"\\n\",\n@@ -309,18 +343,52 @@\n       \" [  0   0   0   0]\\n\",\n       \" [  0   0   0   0]\\n\",\n       \" [  0   0   0   0]]\\n\",\n+      \"Test accuracy for 'most certain 1.0074092741935483% of predictions (total 49)': 1.0\\n\",\n+      \"\\n\",\n+      \"Confusion matrix (most certain 1.0074092741935483%):\\n\",\n+      \"H V P M \\n\",\n+      \"[[49  0  0  0]\\n\",\n+      \" [ 0  0  0  0]\\n\",\n+      \" [ 0  0  0  0]\\n\",\n+      \" [ 0  0  0  0]]\\n\",\n+      \"Test accuracy for 'most certain 0.9896514161220045% of predictions (total 49)': 1.0\\n\",\n+      \"\\n\",\n+      \"Confusion matrix (most certain 0.9896514161220045%):\\n\",\n+      \"H V P M \\n\",\n+      \"[[ 0  0  0  0]\\n\",\n+      \" [ 0 49  0  0]\\n\",\n+      \" [ 0  0  0  0]\\n\",\n+      \" [ 0  0  0  0]]\\n\",\n+      \"Test accuracy for 'most certain 0.9979528659876175% of predictions (total 49)': 1.0\\n\",\n+      \"\\n\",\n+      \"Confusion matrix (most certain 0.9979528659876175%):\\n\",\n+      \"H V P M \\n\",\n+      \"[[ 0  0  0  0]\\n\",\n+      \" [ 0  0  0  0]\\n\",\n+      \" [ 0  0 49  0]\\n\",\n+      \" [ 0  0  0  0]]\\n\",\n+      \"Test accuracy for 'most certain 1.005180044256689% of predictions (total 49)': 1.0\\n\",\n+      \"\\n\",\n+      \"Confusion matrix (most certain 1.005180044256689%):\\n\",\n+      \"H V P M \\n\",\n+      \"[[ 0  0  0  0]\\n\",\n+      \" [ 0  0  0  0]\\n\",\n+      \" [ 0  0  0  0]\\n\",\n+      \" [ 0  0  0 49]]\\n\",\n+      \"Total test accuracy for 'most certain 1.0% of predictions when taking equal numbers of each predicted symbol: 1.0\\n\",\n+      \"\\n\",\n       \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev1Distance/0cm\\n\",\n       \"Cut data in pieces with these shapes: after header:(14095, 500), before header:(5892, 500)\\n\",\n       \"Confusion matrix ():\\n\",\n       \"H V P M \\n\",\n-      \"[[4955    0    1    1]\\n\",\n-      \" [   3 4970   92   36]\\n\",\n-      \" [   0   18 4954    2]\\n\",\n-      \" [   3   32    4 4916]]\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0101: 0.9938459998999349\\n\",\n+      \"[[4954    1    1    1]\\n\",\n+      \" [   2 4985   68   46]\\n\",\n+      \" [   1   32 4937    4]\\n\",\n+      \" [   3   31    3 4918]]\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0101: 0.9942962925901836\\n\",\n       \"Estimated bit prediction accuracy given mapping 0011: 0.9908440486316106\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0110: 0.9960974633511782\\n\",\n-      \"Test accuracy: 0.9903937559413619\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0110: 0.9955471056186521\\n\",\n+      \"Test accuracy: 0.9903437234202231\\n\",\n       \"\\n\",\n       \"Test accuracy for 'most certain 1.0% of predictions (total 199)': 1.0\\n\",\n       \"\\n\",\n@@ -330,9 +398,43 @@\n       \" [  0   0   0   0]\\n\",\n       \" [  0   0   0   0]\\n\",\n       \" [  0   0   0   0]]\\n\",\n+      \"Test accuracy for 'most certain 1.0074092741935483% of predictions (total 49)': 1.0\\n\",\n+      \"\\n\",\n+      \"Confusion matrix (most certain 1.0074092741935483%):\\n\",\n+      \"H V P M \\n\",\n+      \"[[49  0  0  0]\\n\",\n+      \" [ 0  0  0  0]\\n\",\n+      \" [ 0  0  0  0]\\n\",\n+      \" [ 0  0  0  0]]\\n\",\n+      \"Test accuracy for 'most certain 0.9896514161220045% of predictions (total 49)': 1.0\\n\",\n+      \"\\n\",\n+      \"Confusion matrix (most certain 0.9896514161220045%):\\n\",\n+      \"H V P M \\n\",\n+      \"[[ 0  0  0  0]\\n\",\n+      \" [ 0 49  0  0]\\n\",\n+      \" [ 0  0  0  0]\\n\",\n+      \" [ 0  0  0  0]]\\n\",\n+      \"Test accuracy for 'most certain 0.9975544020762627% of predictions (total 49)': 1.0\\n\",\n+      \"\\n\",\n+      \"Confusion matrix (most certain 0.9975544020762627%):\\n\",\n+      \"H V P M \\n\",\n+      \"[[ 0  0  0  0]\\n\",\n+      \" [ 0  0  0  0]\\n\",\n+      \" [ 0  0 49  0]\\n\",\n+      \" [ 0  0  0  0]]\\n\",\n+      \"Test accuracy for 'most certain 1.0055846246729723% of predictions (total 49)': 1.0\\n\",\n+      \"\\n\",\n+      \"Confusion matrix (most certain 1.0055846246729723%):\\n\",\n+      \"H V P M \\n\",\n+      \"[[ 0  0  0  0]\\n\",\n+      \" [ 0  0  0  0]\\n\",\n+      \" [ 0  0  0  0]\\n\",\n+      \" [ 0  0  0 49]]\\n\",\n+      \"Total test accuracy for 'most certain 1.0% of predictions when taking equal numbers of each predicted symbol: 1.0\\n\",\n       \"\\n\",\n       \"\\n\",\n-      \"created a json file of the test accuracies at /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev1Distance/result_TEMPEST_20230111-1402.json\\n\",\n+      \"\\n\",\n+      \"created a json file of the test accuracies at /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev1Distance/result_TEMPEST_20230111-1723.json\\n\",\n       \"Loading dataset 1: 1cm\\n\",\n       \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev1Distance/1cm\\n\",\n       \"Cut data in pieces with these shapes: after header:(14095, 500), before header:(5892, 500)\\n\",\n@@ -402,25 +504,25 @@\n       \"Non-trainable params: 462\\n\",\n       \"_________________________________________________________________\\n\",\n       \"Epoch 1/4\\n\",\n-      \"2811/2811 [==============================] - 28s 10ms/step - loss: 0.5520 - accuracy: 0.7604 - val_loss: 0.4301 - val_accuracy: 0.8160\\n\",\n+      \"2811/2811 [==============================] - 28s 10ms/step - loss: 0.5509 - accuracy: 0.7603 - val_loss: 0.4301 - val_accuracy: 0.8175\\n\",\n       \"Epoch 2/4\\n\",\n-      \"2811/2811 [==============================] - 26s 9ms/step - loss: 0.4246 - accuracy: 0.8209 - val_loss: 0.3993 - val_accuracy: 0.8290\\n\",\n+      \"2811/2811 [==============================] - 26s 9ms/step - loss: 0.4253 - accuracy: 0.8203 - val_loss: 0.3990 - val_accuracy: 0.8290\\n\",\n       \"Epoch 3/4\\n\",\n-      \"2811/2811 [==============================] - 26s 9ms/step - loss: 0.3863 - accuracy: 0.8383 - val_loss: 0.3882 - val_accuracy: 0.8367\\n\",\n+      \"2811/2811 [==============================] - 26s 9ms/step - loss: 0.3902 - accuracy: 0.8361 - val_loss: 0.3815 - val_accuracy: 0.8367\\n\",\n       \"Epoch 4/4\\n\",\n-      \"2811/2811 [==============================] - 26s 9ms/step - loss: 0.3598 - accuracy: 0.8505 - val_loss: 0.3760 - val_accuracy: 0.8420\\n\",\n+      \"2811/2811 [==============================] - 26s 9ms/step - loss: 0.3646 - accuracy: 0.8479 - val_loss: 0.3718 - val_accuracy: 0.8420\\n\",\n       \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev1Distance/1cm\\n\",\n       \"Cut data in pieces with these shapes: after header:(14095, 500), before header:(5892, 500)\\n\",\n       \"Confusion matrix ():\\n\",\n       \"H V P M \\n\",\n-      \"[[4887    8   10   52]\\n\",\n-      \" [   4 3447 1056  594]\\n\",\n-      \" [  12  636 4067  259]\\n\",\n-      \" [  23  366  330 4236]]\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0101: 0.8815229899434632\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0011: 0.8624605993896033\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0110: 0.9207985190373743\\n\",\n-      \"Test accuracy: 0.8323910541852204\\n\",\n+      \"[[4910    3   11   33]\\n\",\n+      \" [   7 3557  992  545]\\n\",\n+      \" [   7  688 4009  270]\\n\",\n+      \" [  38  411  331 4175]]\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0101: 0.8818231850702957\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0011: 0.863661379896933\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0110: 0.9206984539950969\\n\",\n+      \"Test accuracy: 0.8330915094811627\\n\",\n       \"\\n\",\n       \"Test accuracy for 'most certain 1.0% of predictions (total 199)': 1.0\\n\",\n       \"\\n\",\n@@ -430,18 +532,52 @@\n       \" [  0   0   0   0]\\n\",\n       \" [  0   0   0   0]\\n\",\n       \" [  0   0   0   0]]\\n\",\n+      \"Test accuracy for 'most certain 1.0070032245062475% of predictions (total 49)': 1.0\\n\",\n+      \"\\n\",\n+      \"Confusion matrix (most certain 1.0070032245062475%):\\n\",\n+      \"H V P M \\n\",\n+      \"[[49  0  0  0]\\n\",\n+      \" [ 0  0  0  0]\\n\",\n+      \" [ 0  0  0  0]\\n\",\n+      \" [ 0  0  0  0]]\\n\",\n+      \"Test accuracy for 'most certain 1.072494097445804% of predictions (total 49)': 1.0\\n\",\n+      \"\\n\",\n+      \"Confusion matrix (most certain 1.072494097445804%):\\n\",\n+      \"H V P M \\n\",\n+      \"[[ 0  0  0  0]\\n\",\n+      \" [ 0 49  0  0]\\n\",\n+      \" [ 0  0  0  0]\\n\",\n+      \" [ 0  0  0  0]]\\n\",\n+      \"Test accuracy for 'most certain 0.9351955830058021% of predictions (total 49)': 0.8367346938775511\\n\",\n+      \"\\n\",\n+      \"Confusion matrix (most certain 0.9351955830058021%):\\n\",\n+      \"H V P M \\n\",\n+      \"[[ 0  0  0  0]\\n\",\n+      \" [ 0  0  8  0]\\n\",\n+      \" [ 0  0 41  0]\\n\",\n+      \" [ 0  0  0  0]]\\n\",\n+      \"Test accuracy for 'most certain 0.994774039418674% of predictions (total 49)': 0.9795918367346939\\n\",\n+      \"\\n\",\n+      \"Confusion matrix (most certain 0.994774039418674%):\\n\",\n+      \"H V P M \\n\",\n+      \"[[ 0  0  0  0]\\n\",\n+      \" [ 0  0  0  1]\\n\",\n+      \" [ 0  0  0  0]\\n\",\n+      \" [ 0  0  0 48]]\\n\",\n+      \"Total test accuracy for 'most certain 1.0% of predictions when taking equal numbers of each predicted symbol: 0.9540816326530612\\n\",\n+      \"\\n\",\n       \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev1Distance/1cm\\n\",\n       \"Cut data in pieces with these shapes: after header:(14095, 500), before header:(5892, 500)\\n\",\n       \"Confusion matrix ():\\n\",\n       \"H V P M \\n\",\n-      \"[[4889    7   14   47]\\n\",\n-      \" [   1 3499 1001  600]\\n\",\n-      \" [   4  605 4139  226]\\n\",\n-      \" [  19  372  311 4253]]\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0101: 0.889077900635413\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0011: 0.8668134287286736\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0110: 0.9232000800520338\\n\",\n-      \"Test accuracy: 0.8395457047080602\\n\",\n+      \"[[4890    6    8   53]\\n\",\n+      \" [   1 3595  940  565]\\n\",\n+      \" [   4  657 4092  221]\\n\",\n+      \" [  32  447  311 4165]]\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0101: 0.888877770550858\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0011: 0.8646119977985691\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0110: 0.9217991694601491\\n\",\n+      \"Test accuracy: 0.8376444689047882\\n\",\n       \"\\n\",\n       \"Test accuracy for 'most certain 1.0% of predictions (total 199)': 1.0\\n\",\n       \"\\n\",\n@@ -451,18 +587,52 @@\n       \" [  0   0   0   0]\\n\",\n       \" [  0   0   0   0]\\n\",\n       \" [  0   0   0   0]]\\n\",\n+      \"Test accuracy for 'most certain 1.0141566876395371% of predictions (total 49)': 1.0\\n\",\n+      \"\\n\",\n+      \"Confusion matrix (most certain 1.0141566876395371%):\\n\",\n+      \"H V P M \\n\",\n+      \"[[49  0  0  0]\\n\",\n+      \" [ 0  0  0  0]\\n\",\n+      \" [ 0  0  0  0]\\n\",\n+      \" [ 0  0  0  0]]\\n\",\n+      \"Test accuracy for 'most certain 1.062008501594049% of predictions (total 49)': 1.0\\n\",\n+      \"\\n\",\n+      \"Confusion matrix (most certain 1.062008501594049%):\\n\",\n+      \"H V P M \\n\",\n+      \"[[ 0  0  0  0]\\n\",\n+      \" [ 0 49  0  0]\\n\",\n+      \" [ 0  0  0  0]\\n\",\n+      \" [ 0  0  0  0]]\\n\",\n+      \"Test accuracy for 'most certain 0.9337974210427957% of predictions (total 49)': 0.8571428571428571\\n\",\n+      \"\\n\",\n+      \"Confusion matrix (most certain 0.9337974210427957%):\\n\",\n+      \"H V P M \\n\",\n+      \"[[ 0  0  0  0]\\n\",\n+      \" [ 0  0  7  0]\\n\",\n+      \" [ 0  0 42  0]\\n\",\n+      \" [ 0  0  0  0]]\\n\",\n+      \"Test accuracy for 'most certain 0.998551159072742% of predictions (total 49)': 0.9387755102040817\\n\",\n+      \"\\n\",\n+      \"Confusion matrix (most certain 0.998551159072742%):\\n\",\n+      \"H V P M \\n\",\n+      \"[[ 0  0  0  0]\\n\",\n+      \" [ 0  0  0  3]\\n\",\n+      \" [ 0  0  0  0]\\n\",\n+      \" [ 0  0  0 46]]\\n\",\n+      \"Total test accuracy for 'most certain 1.0% of predictions when taking equal numbers of each predicted symbol: 0.9489795918367347\\n\",\n+      \"\\n\",\n       \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev1Distance/1cm\\n\",\n       \"Cut data in pieces with these shapes: after header:(14095, 500), before header:(5892, 500)\\n\",\n       \"Confusion matrix ():\\n\",\n       \"H V P M \\n\",\n-      \"[[4908    4    8   37]\\n\",\n-      \" [   4 3491  998  608]\\n\",\n-      \" [   6  637 4069  262]\\n\",\n-      \" [  30  314  323 4288]]\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0101: 0.8851753639865912\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0011: 0.8680142092360034\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0110: 0.9235002751788662\\n\",\n-      \"Test accuracy: 0.8383449242007305\\n\",\n+      \"[[4904    3   14   36]\\n\",\n+      \" [   6 3596  925  574]\\n\",\n+      \" [   6  673 4043  252]\\n\",\n+      \" [  39  360  327 4229]]\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0101: 0.8868764697053084\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0011: 0.8685645669685296\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0110: 0.9228498524040626\\n\",\n+      \"Test accuracy: 0.8391454445389503\\n\",\n       \"\\n\",\n       \"Test accuracy for 'most certain 1.0% of predictions (total 199)': 1.0\\n\",\n       \"\\n\",\n@@ -472,9 +642,43 @@\n       \" [  0   0   0   0]\\n\",\n       \" [  0   0   0   0]\\n\",\n       \" [  0   0   0   0]]\\n\",\n+      \"Test accuracy for 'most certain 1.0084258324924318% of predictions (total 49)': 1.0\\n\",\n+      \"\\n\",\n+      \"Confusion matrix (most certain 1.0084258324924318%):\\n\",\n+      \"H V P M \\n\",\n+      \"[[49  0  0  0]\\n\",\n+      \" [ 0  0  0  0]\\n\",\n+      \" [ 0  0  0  0]\\n\",\n+      \" [ 0  0  0  0]]\\n\",\n+      \"Test accuracy for 'most certain 1.0787456822107082% of predictions (total 49)': 1.0\\n\",\n+      \"\\n\",\n+      \"Confusion matrix (most certain 1.0787456822107082%):\\n\",\n+      \"H V P M \\n\",\n+      \"[[ 0  0  0  0]\\n\",\n+      \" [ 0 49  0  0]\\n\",\n+      \" [ 0  0  0  0]\\n\",\n+      \" [ 0  0  0  0]]\\n\",\n+      \"Test accuracy for 'most certain 0.941184780561311% of predictions (total 49)': 0.8571428571428571\\n\",\n       \"\\n\",\n+      \"Confusion matrix (most certain 0.941184780561311%):\\n\",\n+      \"H V P M \\n\",\n+      \"[[ 0  0  0  0]\\n\",\n+      \" [ 0  0  7  0]\\n\",\n+      \" [ 0  0 42  0]\\n\",\n+      \" [ 0  0  0  0]]\\n\",\n+      \"Test accuracy for 'most certain 0.9814869377332548% of predictions (total 49)': 0.9183673469387755\\n\",\n+      \"\\n\",\n+      \"Confusion matrix (most certain 0.9814869377332548%):\\n\",\n+      \"H V P M \\n\",\n+      \"[[ 0  0  0  0]\\n\",\n+      \" [ 0  0  0  4]\\n\",\n+      \" [ 0  0  0  0]\\n\",\n+      \" [ 0  0  0 45]]\\n\",\n+      \"Total test accuracy for 'most certain 1.0% of predictions when taking equal numbers of each predicted symbol: 0.9438775510204082\\n\",\n       \"\\n\",\n-      \"created a json file of the test accuracies at /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev1Distance/result_TEMPEST_20230111-1402.json\\n\",\n+      \"\\n\",\n+      \"\\n\",\n+      \"created a json file of the test accuracies at /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev1Distance/result_TEMPEST_20230111-1723.json\\n\",\n       \"Loading dataset 2: 2cm\\n\",\n       \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev1Distance/2cm\\n\",\n       \"Cut data in pieces with these shapes: after header:(14095, 500), before header:(5892, 500)\\n\",\n@@ -544,79 +748,181 @@\n       \"Non-trainable params: 462\\n\",\n       \"_________________________________________________________________\\n\",\n       \"Epoch 1/4\\n\",\n-      \"2811/2811 [==============================] - 28s 10ms/step - loss: 1.0089 - accuracy: 0.5105 - val_loss: 0.9288 - val_accuracy: 0.5439\\n\",\n+      \"2811/2811 [==============================] - 28s 10ms/step - loss: 1.0097 - accuracy: 0.5100 - val_loss: 0.9306 - val_accuracy: 0.5442\\n\",\n       \"Epoch 2/4\\n\",\n-      \"2811/2811 [==============================] - 26s 9ms/step - loss: 0.9433 - accuracy: 0.5432 - val_loss: 0.9177 - val_accuracy: 0.5492\\n\",\n+      \"2811/2811 [==============================] - 26s 9ms/step - loss: 0.9443 - accuracy: 0.5428 - val_loss: 0.9213 - val_accuracy: 0.5471\\n\",\n       \"Epoch 3/4\\n\",\n-      \"2811/2811 [==============================] - 26s 9ms/step - loss: 0.9248 - accuracy: 0.5543 - val_loss: 0.9132 - val_accuracy: 0.5568\\n\",\n+      \"2811/2811 [==============================] - 26s 9ms/step - loss: 0.9271 - accuracy: 0.5526 - val_loss: 0.9134 - val_accuracy: 0.5543\\n\",\n       \"Epoch 4/4\\n\",\n-      \"2811/2811 [==============================] - 26s 9ms/step - loss: 0.9116 - accuracy: 0.5625 - val_loss: 0.9136 - val_accuracy: 0.5571\\n\",\n+      \"2811/2811 [==============================] - 26s 9ms/step - loss: 0.9133 - accuracy: 0.5605 - val_loss: 0.9121 - val_accuracy: 0.5593\\n\",\n       \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev1Distance/2cm\\n\",\n       \"Cut data in pieces with these shapes: after header:(14095, 500), before header:(5892, 500)\\n\",\n       \"Confusion matrix ():\\n\",\n       \"H V P M \\n\",\n-      \"[[4486   70  141  260]\\n\",\n-      \" [ 204 1987 1658 1252]\\n\",\n-      \" [ 240 1198 2291 1245]\\n\",\n-      \" [ 364 1067 1206 2318]]\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0101: 0.6895482063341172\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0011: 0.6907990193625857\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0110: 0.7285735728223345\\n\",\n-      \"Test accuracy: 0.5544603992595187\\n\",\n+      \"[[4452   77  172  256]\\n\",\n+      \" [ 191 1861 1855 1194]\\n\",\n+      \" [ 220 1145 2393 1216]\\n\",\n+      \" [ 331 1020 1287 2317]]\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0101: 0.6818932305998899\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0011: 0.690148596587782\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0110: 0.7309751338369941\\n\",\n+      \"Test accuracy: 0.551508480512333\\n\",\n       \"\\n\",\n-      \"Test accuracy for 'most certain 1.0% of predictions (total 199)': 0.6030150753768844\\n\",\n+      \"Test accuracy for 'most certain 1.0% of predictions (total 199)': 0.7336683417085427\\n\",\n       \"\\n\",\n       \"Confusion matrix (most certain 1.0%):\\n\",\n       \"H V P M \\n\",\n-      \"[[12  0  0  0]\\n\",\n-      \" [ 0 50 45  0]\\n\",\n-      \" [ 0 15 54  1]\\n\",\n-      \" [ 0 10  8  4]]\\n\",\n+      \"[[61  0  0  0]\\n\",\n+      \" [ 0 63 15  1]\\n\",\n+      \" [ 0 15 16  1]\\n\",\n+      \" [ 1 15  5  6]]\\n\",\n+      \"Test accuracy for 'most certain 0.9620234886407394% of predictions (total 49)': 0.9795918367346939\\n\",\n+      \"\\n\",\n+      \"Confusion matrix (most certain 0.9620234886407394%):\\n\",\n+      \"H V P M \\n\",\n+      \"[[48  0  0  0]\\n\",\n+      \" [ 0  0  0  0]\\n\",\n+      \" [ 0  0  0  0]\\n\",\n+      \" [ 1  0  0  0]]\\n\",\n+      \"Test accuracy for 'most certain 1.217828418230563% of predictions (total 49)': 0.673469387755102\\n\",\n+      \"\\n\",\n+      \"Confusion matrix (most certain 1.217828418230563%):\\n\",\n+      \"H V P M \\n\",\n+      \"[[ 0  0  0  0]\\n\",\n+      \" [ 0 33  0  0]\\n\",\n+      \" [ 0  9  0  0]\\n\",\n+      \" [ 0  7  0  0]]\\n\",\n+      \"Test accuracy for 'most certain 0.8755475731557737% of predictions (total 49)': 0.42857142857142855\\n\",\n+      \"\\n\",\n+      \"Confusion matrix (most certain 0.8755475731557737%):\\n\",\n+      \"H V P M \\n\",\n+      \"[[ 0  0  0  0]\\n\",\n+      \" [ 0  0 22  0]\\n\",\n+      \" [ 0  0 21  0]\\n\",\n+      \" [ 0  0  6  0]]\\n\",\n+      \"Test accuracy for 'most certain 1.0027593818984548% of predictions (total 49)': 0.5918367346938775\\n\",\n+      \"\\n\",\n+      \"Confusion matrix (most certain 1.0027593818984548%):\\n\",\n+      \"H V P M \\n\",\n+      \"[[ 0  0  0  0]\\n\",\n+      \" [ 0  0  0 15]\\n\",\n+      \" [ 0  0  0  5]\\n\",\n+      \" [ 0  0  0 29]]\\n\",\n+      \"Total test accuracy for 'most certain 1.0% of predictions when taking equal numbers of each predicted symbol: 0.6683673469387754\\n\",\n+      \"\\n\",\n       \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev1Distance/2cm\\n\",\n       \"Cut data in pieces with these shapes: after header:(14095, 500), before header:(5892, 500)\\n\",\n       \"Confusion matrix ():\\n\",\n       \"H V P M \\n\",\n-      \"[[4488   91  136  242]\\n\",\n-      \" [ 217 2019 1663 1202]\\n\",\n-      \" [ 240 1274 2293 1167]\\n\",\n-      \" [ 402 1135 1153 2265]]\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0101: 0.6893480762495622\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0011: 0.6850953119527693\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0110: 0.7327763045979887\\n\",\n-      \"Test accuracy: 0.5536098464001601\\n\",\n+      \"[[4442   88  157  270]\\n\",\n+      \" [ 189 1845 1868 1199]\\n\",\n+      \" [ 216 1157 2412 1189]\\n\",\n+      \" [ 364 1015 1248 2328]]\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0101: 0.6811427427828088\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0011: 0.6874968729674288\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0110: 0.7347776054435383\\n\",\n+      \"Test accuracy: 0.551708610596888\\n\",\n       \"\\n\",\n-      \"Test accuracy for 'most certain 1.0% of predictions (total 199)': 0.6180904522613065\\n\",\n+      \"Test accuracy for 'most certain 1.0% of predictions (total 199)': 0.7437185929648241\\n\",\n       \"\\n\",\n       \"Confusion matrix (most certain 1.0%):\\n\",\n       \"H V P M \\n\",\n-      \"[[19  0  0  0]\\n\",\n-      \" [ 0 50 36  0]\\n\",\n-      \" [ 0 26 52  0]\\n\",\n-      \" [ 0  7  7  2]]\\n\",\n+      \"[[72  0  0  0]\\n\",\n+      \" [ 0 55 17  0]\\n\",\n+      \" [ 0 24 17  1]\\n\",\n+      \" [ 0  7  2  4]]\\n\",\n+      \"Test accuracy for 'most certain 0.9588850508539628% of predictions (total 49)': 1.0\\n\",\n+      \"\\n\",\n+      \"Confusion matrix (most certain 0.9588850508539628%):\\n\",\n+      \"H V P M \\n\",\n+      \"[[49  0  0  0]\\n\",\n+      \" [ 0  0  0  0]\\n\",\n+      \" [ 0  0  0  0]\\n\",\n+      \" [ 0  0  0  0]]\\n\",\n+      \"Test accuracy for 'most certain 1.2172350791717417% of predictions (total 49)': 0.6530612244897959\\n\",\n+      \"\\n\",\n+      \"Confusion matrix (most certain 1.2172350791717417%):\\n\",\n+      \"H V P M \\n\",\n+      \"[[ 0  0  0  0]\\n\",\n+      \" [ 0 32  0  0]\\n\",\n+      \" [ 0 12  0  0]\\n\",\n+      \" [ 0  5  0  0]]\\n\",\n+      \"Test accuracy for 'most certain 0.8789357959542656% of predictions (total 49)': 0.4897959183673469\\n\",\n+      \"\\n\",\n+      \"Confusion matrix (most certain 0.8789357959542656%):\\n\",\n+      \"H V P M \\n\",\n+      \"[[ 0  0  0  0]\\n\",\n+      \" [ 0  0 21  0]\\n\",\n+      \" [ 0  0 24  0]\\n\",\n+      \" [ 0  0  4  0]]\\n\",\n+      \"Test accuracy for 'most certain 1.0021560369033293% of predictions (total 49)': 0.6530612244897959\\n\",\n+      \"\\n\",\n+      \"Confusion matrix (most certain 1.0021560369033293%):\\n\",\n+      \"H V P M \\n\",\n+      \"[[ 0  0  0  0]\\n\",\n+      \" [ 0  0  0 10]\\n\",\n+      \" [ 0  0  0  7]\\n\",\n+      \" [ 0  0  0 32]]\\n\",\n+      \"Total test accuracy for 'most certain 1.0% of predictions when taking equal numbers of each predicted symbol: 0.6989795918367346\\n\",\n+      \"\\n\",\n       \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev1Distance/2cm\\n\",\n       \"Cut data in pieces with these shapes: after header:(14095, 500), before header:(5892, 500)\\n\",\n       \"Confusion matrix ():\\n\",\n       \"H V P M \\n\",\n-      \"[[4488   97  121  251]\\n\",\n-      \" [ 224 1956 1687 1234]\\n\",\n-      \" [ 233 1305 2215 1221]\\n\",\n-      \" [ 354 1103 1158 2340]]\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0101: 0.6849452143893531\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0011: 0.6853955070796017\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0110: 0.7302746785410517\\n\",\n-      \"Test accuracy: 0.5503077000050033\\n\",\n+      \"[[4460   74  168  255]\\n\",\n+      \" [ 193 1819 1872 1217]\\n\",\n+      \" [ 217 1205 2398 1154]\\n\",\n+      \" [ 322 1049 1252 2332]]\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0101: 0.6834442387551909\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0011: 0.6845449542202432\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0110: 0.7336268574573472\\n\",\n+      \"Test accuracy: 0.5508080252163906\\n\",\n       \"\\n\",\n-      \"Test accuracy for 'most certain 1.0% of predictions (total 199)': 0.542713567839196\\n\",\n+      \"Test accuracy for 'most certain 1.0% of predictions (total 199)': 0.7587939698492462\\n\",\n       \"\\n\",\n       \"Confusion matrix (most certain 1.0%):\\n\",\n       \"H V P M \\n\",\n-      \"[[ 7  0  0  0]\\n\",\n-      \" [ 0 54 50  2]\\n\",\n-      \" [ 0 16 43  1]\\n\",\n-      \" [ 0 13  9  4]]\\n\",\n+      \"[[59  0  0  0]\\n\",\n+      \" [ 0 66 12  4]\\n\",\n+      \" [ 0 15 23  0]\\n\",\n+      \" [ 0 15  2  3]]\\n\",\n+      \"Test accuracy for 'most certain 0.9623940677966103% of predictions (total 49)': 1.0\\n\",\n+      \"\\n\",\n+      \"Confusion matrix (most certain 0.9623940677966103%):\\n\",\n+      \"H V P M \\n\",\n+      \"[[49  0  0  0]\\n\",\n+      \" [ 0  0  0  0]\\n\",\n+      \" [ 0  0  0  0]\\n\",\n+      \" [ 0  0  0  0]]\\n\",\n+      \"Test accuracy for 'most certain 1.2049071618037135% of predictions (total 49)': 0.7551020408163265\\n\",\n+      \"\\n\",\n+      \"Confusion matrix (most certain 1.2049071618037135%):\\n\",\n+      \"H V P M \\n\",\n+      \"[[ 0  0  0  0]\\n\",\n+      \" [ 0 37  0  0]\\n\",\n+      \" [ 0  4  0  0]\\n\",\n+      \" [ 0  8  0  0]]\\n\",\n+      \"Test accuracy for 'most certain 0.8781634446397188% of predictions (total 49)': 0.5306122448979592\\n\",\n+      \"\\n\",\n+      \"Confusion matrix (most certain 0.8781634446397188%):\\n\",\n+      \"H V P M \\n\",\n+      \"[[ 0  0  0  0]\\n\",\n+      \" [ 0  0 18  0]\\n\",\n+      \" [ 0  0 26  0]\\n\",\n+      \" [ 0  0  5  0]]\\n\",\n+      \"Test accuracy for 'most certain 1.007815651472368% of predictions (total 49)': 0.6530612244897959\\n\",\n+      \"\\n\",\n+      \"Confusion matrix (most certain 1.007815651472368%):\\n\",\n+      \"H V P M \\n\",\n+      \"[[ 0  0  0  0]\\n\",\n+      \" [ 0  0  0 12]\\n\",\n+      \" [ 0  0  0  5]\\n\",\n+      \" [ 0  0  0 32]]\\n\",\n+      \"Total test accuracy for 'most certain 1.0% of predictions when taking equal numbers of each predicted symbol: 0.7346938775510203\\n\",\n+      \"\\n\",\n       \"\\n\",\n       \"\\n\",\n-      \"created a json file of the test accuracies at /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev1Distance/result_TEMPEST_20230111-1402.json\\n\",\n+      \"created a json file of the test accuracies at /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev1Distance/result_TEMPEST_20230111-1723.json\\n\",\n       \"Loading dataset 3: 3cm\\n\",\n       \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev1Distance/3cm\\n\",\n       \"Cut data in pieces with these shapes: after header:(14095, 500), before header:(5892, 500)\\n\",\n@@ -686,67 +992,135 @@\n       \"Non-trainable params: 462\\n\",\n       \"_________________________________________________________________\\n\",\n       \"Epoch 1/4\\n\",\n-      \"2811/2811 [==============================] - 28s 10ms/step - loss: 1.1236 - accuracy: 0.4312 - val_loss: 1.0842 - val_accuracy: 0.4498\\n\",\n+      \"2811/2811 [==============================] - 28s 10ms/step - loss: 1.1249 - accuracy: 0.4305 - val_loss: 1.0877 - val_accuracy: 0.4474\\n\",\n       \"Epoch 2/4\\n\",\n-      \"2811/2811 [==============================] - 26s 9ms/step - loss: 1.0766 - accuracy: 0.4546 - val_loss: 1.0746 - val_accuracy: 0.4565\\n\",\n+      \"2811/2811 [==============================] - 26s 9ms/step - loss: 1.0790 - accuracy: 0.4524 - val_loss: 1.0757 - val_accuracy: 0.4550\\n\",\n       \"Epoch 3/4\\n\",\n-      \"2811/2811 [==============================] - 26s 9ms/step - loss: 1.0650 - accuracy: 0.4619 - val_loss: 1.0740 - val_accuracy: 0.4599\\n\",\n+      \"2811/2811 [==============================] - 26s 9ms/step - loss: 1.0652 - accuracy: 0.4631 - val_loss: 1.0723 - val_accuracy: 0.4633\\n\",\n       \"Epoch 4/4\\n\",\n-      \"2811/2811 [==============================] - 26s 9ms/step - loss: 1.0543 - accuracy: 0.4683 - val_loss: 1.0745 - val_accuracy: 0.4537\\n\",\n+      \"2811/2811 [==============================] - 26s 9ms/step - loss: 1.0543 - accuracy: 0.4702 - val_loss: 1.0703 - val_accuracy: 0.4570\\n\",\n       \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev1Distance/3cm\\n\",\n       \"Cut data in pieces with these shapes: after header:(14095, 500), before header:(5892, 500)\\n\",\n       \"Confusion matrix ():\\n\",\n       \"H V P M \\n\",\n-      \"[[4319  372   45  221]\\n\",\n-      \" [ 625 2838  456 1182]\\n\",\n-      \" [ 555 2595  560 1264]\\n\",\n-      \" [ 658 2299  444 1554]]\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0101: 0.6680342222444589\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0011: 0.5991894731575524\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0110: 0.6604793115525092\\n\",\n-      \"Test accuracy: 0.46385150347726023\\n\",\n+      \"[[4295  398   16  248]\\n\",\n+      \" [ 594 2987  200 1320]\\n\",\n+      \" [ 547 2685  313 1429]\\n\",\n+      \" [ 639 2415  228 1673]]\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0101: 0.6787411817681493\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0011: 0.5962375544103667\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0110: 0.6524240756491719\\n\",\n+      \"Test accuracy: 0.463701405913844\\n\",\n       \"\\n\",\n-      \"Test accuracy for 'most certain 1.0% of predictions (total 199)': 0.9949748743718593\\n\",\n+      \"Test accuracy for 'most certain 1.0% of predictions (total 199)': 1.0\\n\",\n       \"\\n\",\n       \"Confusion matrix (most certain 1.0%):\\n\",\n       \"H V P M \\n\",\n-      \"[[198   0   0   0]\\n\",\n+      \"[[199   0   0   0]\\n\",\n       \" [  0   0   0   0]\\n\",\n       \" [  0   0   0   0]\\n\",\n-      \" [  0   0   1   0]]\\n\",\n+      \" [  0   0   0   0]]\\n\",\n+      \"Test accuracy for 'most certain 0.8225102880658437% of predictions (total 49)': 1.0\\n\",\n+      \"\\n\",\n+      \"Confusion matrix (most certain 0.8225102880658437%):\\n\",\n+      \"H V P M \\n\",\n+      \"[[49  0  0  0]\\n\",\n+      \" [ 0  0  0  0]\\n\",\n+      \" [ 0  0  0  0]\\n\",\n+      \" [ 0  0  0  0]]\\n\",\n+      \"Test accuracy for 'most certain 0.5888921626399529% of predictions (total 49)': 0.40816326530612246\\n\",\n+      \"\\n\",\n+      \"Confusion matrix (most certain 0.5888921626399529%):\\n\",\n+      \"H V P M \\n\",\n+      \"[[ 0  0  0  0]\\n\",\n+      \" [ 0 20  0  0]\\n\",\n+      \" [ 0 17  0  0]\\n\",\n+      \" [ 0 12  0  0]]\\n\",\n+      \"Test accuracy for 'most certain 6.600726552179657% of predictions (total 49)': 0.5714285714285714\\n\",\n+      \"\\n\",\n+      \"Confusion matrix (most certain 6.600726552179657%):\\n\",\n+      \"H V P M \\n\",\n+      \"[[ 0  0  0  0]\\n\",\n+      \" [ 0  0 13  0]\\n\",\n+      \" [ 0  0 28  0]\\n\",\n+      \" [ 0  0  8  0]]\\n\",\n+      \"Test accuracy for 'most certain 1.0699678800856531% of predictions (total 49)': 0.2653061224489796\\n\",\n+      \"\\n\",\n+      \"Confusion matrix (most certain 1.0699678800856531%):\\n\",\n+      \"H V P M \\n\",\n+      \"[[ 0  0  0  1]\\n\",\n+      \" [ 0  0  0 21]\\n\",\n+      \" [ 0  0  0 14]\\n\",\n+      \" [ 0  0  0 13]]\\n\",\n+      \"Total test accuracy for 'most certain 1.0% of predictions when taking equal numbers of each predicted symbol: 0.5612244897959183\\n\",\n+      \"\\n\",\n       \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev1Distance/3cm\\n\",\n       \"Cut data in pieces with these shapes: after header:(14095, 500), before header:(5892, 500)\\n\",\n       \"Confusion matrix ():\\n\",\n       \"H V P M \\n\",\n-      \"[[4175  424   61  297]\\n\",\n-      \" [ 712 2652  522 1215]\\n\",\n-      \" [ 636 2492  530 1316]\\n\",\n-      \" [ 803 2107  462 1583]]\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0101: 0.648371441436934\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0011: 0.5930855055786262\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0110: 0.6531245309451144\\n\",\n-      \"Test accuracy: 0.4472907389803372\\n\",\n+      \"[[4179  457   17  304]\\n\",\n+      \" [ 682 2839  230 1350]\\n\",\n+      \" [ 609 2584  287 1494]\\n\",\n+      \" [ 761 2197  232 1765]]\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0101: 0.6625806774403362\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0011: 0.597138139790864\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0110: 0.6478711162255466\\n\",\n+      \"Test accuracy: 0.45379496672837344\\n\",\n       \"\\n\",\n-      \"Test accuracy for 'most certain 1.0% of predictions (total 199)': 0.9899497487437185\\n\",\n+      \"Test accuracy for 'most certain 1.0% of predictions (total 199)': 0.9949748743718593\\n\",\n       \"\\n\",\n       \"Confusion matrix (most certain 1.0%):\\n\",\n       \"H V P M \\n\",\n-      \"[[197   0   0   0]\\n\",\n-      \" [  1   0   0   0]\\n\",\n+      \"[[198   0   0   0]\\n\",\n+      \" [  0   0   0   0]\\n\",\n       \" [  1   0   0   0]\\n\",\n       \" [  0   0   0   0]]\\n\",\n+      \"Test accuracy for 'most certain 0.8019178302038197% of predictions (total 49)': 1.0\\n\",\n+      \"\\n\",\n+      \"Confusion matrix (most certain 0.8019178302038197%):\\n\",\n+      \"H V P M \\n\",\n+      \"[[49  0  0  0]\\n\",\n+      \" [ 0  0  0  0]\\n\",\n+      \" [ 0  0  0  0]\\n\",\n+      \" [ 0  0  0  0]]\\n\",\n+      \"Test accuracy for 'most certain 0.6186393462919401% of predictions (total 49)': 0.3673469387755102\\n\",\n+      \"\\n\",\n+      \"Confusion matrix (most certain 0.6186393462919401%):\\n\",\n+      \"H V P M \\n\",\n+      \"[[ 0  0  0  0]\\n\",\n+      \" [ 0 18  0  0]\\n\",\n+      \" [ 0 19  0  0]\\n\",\n+      \" [ 0 12  0  0]]\\n\",\n+      \"Test accuracy for 'most certain 6.523172323759792% of predictions (total 49)': 0.4489795918367347\\n\",\n+      \"\\n\",\n+      \"Confusion matrix (most certain 6.523172323759792%):\\n\",\n+      \"H V P M \\n\",\n+      \"[[ 0  0  0  0]\\n\",\n+      \" [ 0  0 14  0]\\n\",\n+      \" [ 0  0 22  0]\\n\",\n+      \" [ 0  0 13  0]]\\n\",\n+      \"Test accuracy for 'most certain 1.017046611031956% of predictions (total 49)': 0.24489795918367346\\n\",\n+      \"\\n\",\n+      \"Confusion matrix (most certain 1.017046611031956%):\\n\",\n+      \"H V P M \\n\",\n+      \"[[ 0  0  0  0]\\n\",\n+      \" [ 0  0  0 14]\\n\",\n+      \" [ 0  0  0 23]\\n\",\n+      \" [ 0  0  0 12]]\\n\",\n+      \"Total test accuracy for 'most certain 1.0% of predictions when taking equal numbers of each predicted symbol: 0.5153061224489796\\n\",\n+      \"\\n\",\n       \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev1Distance/3cm\\n\",\n       \"Cut data in pieces with these shapes: after header:(14095, 500), before header:(5892, 500)\\n\",\n       \"Confusion matrix ():\\n\",\n       \"H V P M \\n\",\n-      \"[[4158  473   24  302]\\n\",\n-      \" [ 589 3012  332 1168]\\n\",\n-      \" [ 524 2852  385 1213]\\n\",\n-      \" [ 586 2568  349 1452]]\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0101: 0.6649822384549957\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0011: 0.581928253364687\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0110: 0.6543753439735829\\n\",\n-      \"Test accuracy: 0.4506429178966328\\n\",\n+      \"[[4154  478   17  308]\\n\",\n+      \" [ 577 3042  151 1331]\\n\",\n+      \" [ 482 2822  230 1440]\\n\",\n+      \" [ 562 2589  168 1636]]\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0101: 0.6744884174713563\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0011: 0.5866313103517287\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0110: 0.645669685295442\\n\",\n+      \"Test accuracy: 0.4533947065592635\\n\",\n       \"\\n\",\n       \"Test accuracy for 'most certain 1.0% of predictions (total 199)': 1.0\\n\",\n       \"\\n\",\n@@ -756,9 +1130,43 @@\n       \" [  0   0   0   0]\\n\",\n       \" [  0   0   0   0]\\n\",\n       \" [  0   0   0   0]]\\n\",\n+      \"Test accuracy for 'most certain 0.8652380952380954% of predictions (total 49)': 1.0\\n\",\n+      \"\\n\",\n+      \"Confusion matrix (most certain 0.8652380952380954%):\\n\",\n+      \"H V P M \\n\",\n+      \"[[49  0  0  0]\\n\",\n+      \" [ 0  0  0  0]\\n\",\n+      \" [ 0  0  0  0]\\n\",\n+      \" [ 0  0  0  0]]\\n\",\n+      \"Test accuracy for 'most certain 0.559483820400851% of predictions (total 49)': 0.3673469387755102\\n\",\n+      \"\\n\",\n+      \"Confusion matrix (most certain 0.559483820400851%):\\n\",\n+      \"H V P M \\n\",\n+      \"[[ 0  1  0  0]\\n\",\n+      \" [ 0 18  0  0]\\n\",\n+      \" [ 0 19  0  0]\\n\",\n+      \" [ 0 11  0  0]]\\n\",\n+      \"Test accuracy for 'most certain 8.828180212014134% of predictions (total 49)': 0.3877551020408163\\n\",\n+      \"\\n\",\n+      \"Confusion matrix (most certain 8.828180212014134%):\\n\",\n+      \"H V P M \\n\",\n+      \"[[ 0  0  1  0]\\n\",\n+      \" [ 0  0 16  0]\\n\",\n+      \" [ 0  0 19  0]\\n\",\n+      \" [ 0  0 13  0]]\\n\",\n+      \"Test accuracy for 'most certain 1.0597560975609757% of predictions (total 49)': 0.12244897959183673\\n\",\n+      \"\\n\",\n+      \"Confusion matrix (most certain 1.0597560975609757%):\\n\",\n+      \"H V P M \\n\",\n+      \"[[ 0  0  0  0]\\n\",\n+      \" [ 0  0  0 16]\\n\",\n+      \" [ 0  0  0 27]\\n\",\n+      \" [ 0  0  0  6]]\\n\",\n+      \"Total test accuracy for 'most certain 1.0% of predictions when taking equal numbers of each predicted symbol: 0.4693877551020408\\n\",\n       \"\\n\",\n       \"\\n\",\n-      \"created a json file of the test accuracies at /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev1Distance/result_TEMPEST_20230111-1402.json\\n\",\n+      \"\\n\",\n+      \"created a json file of the test accuracies at /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev1Distance/result_TEMPEST_20230111-1723.json\\n\",\n       \"Loading dataset 4: 4cm\\n\",\n       \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev1Distance/4cm\\n\",\n       \"Cut data in pieces with these shapes: after header:(14095, 500), before header:(5892, 500)\\n\",\n@@ -828,79 +1236,181 @@\n       \"Non-trainable params: 462\\n\",\n       \"_________________________________________________________________\\n\",\n       \"Epoch 1/4\\n\",\n-      \"2811/2811 [==============================] - 28s 10ms/step - loss: 1.2622 - accuracy: 0.3706 - val_loss: 1.2216 - val_accuracy: 0.3882\\n\",\n+      \"2811/2811 [==============================] - 28s 10ms/step - loss: 1.2627 - accuracy: 0.3709 - val_loss: 1.2212 - val_accuracy: 0.3901\\n\",\n       \"Epoch 2/4\\n\",\n-      \"2811/2811 [==============================] - 26s 9ms/step - loss: 1.2356 - accuracy: 0.3831 - val_loss: 1.2171 - val_accuracy: 0.3879\\n\",\n+      \"2811/2811 [==============================] - 26s 9ms/step - loss: 1.2350 - accuracy: 0.3839 - val_loss: 1.2153 - val_accuracy: 0.3880\\n\",\n       \"Epoch 3/4\\n\",\n-      \"2811/2811 [==============================] - 26s 9ms/step - loss: 1.2287 - accuracy: 0.3856 - val_loss: 1.2253 - val_accuracy: 0.3886\\n\",\n+      \"2811/2811 [==============================] - 26s 9ms/step - loss: 1.2268 - accuracy: 0.3876 - val_loss: 1.2159 - val_accuracy: 0.3892\\n\",\n       \"Epoch 4/4\\n\",\n-      \"2811/2811 [==============================] - 26s 9ms/step - loss: 1.2205 - accuracy: 0.3915 - val_loss: 1.2175 - val_accuracy: 0.3911\\n\",\n+      \"2811/2811 [==============================] - 26s 9ms/step - loss: 1.2182 - accuracy: 0.3927 - val_loss: 1.2159 - val_accuracy: 0.3895\\n\",\n       \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev1Distance/4cm\\n\",\n       \"Cut data in pieces with these shapes: after header:(14095, 500), before header:(5892, 500)\\n\",\n       \"Confusion matrix ():\\n\",\n       \"H V P M \\n\",\n-      \"[[3602 1027  199  129]\\n\",\n-      \" [1046 3248  579  228]\\n\",\n-      \" [ 941 3285  553  195]\\n\",\n-      \" [1052 3179  484  240]]\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0101: 0.6098964326812428\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0011: 0.5200880572372042\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0110: 0.6348126282083354\\n\",\n-      \"Test accuracy: 0.3823985590633912\\n\",\n+      \"[[3728  931  216   82]\\n\",\n+      \" [1169 2904  888  140]\\n\",\n+      \" [1045 2830  958  141]\\n\",\n+      \" [1160 2810  845  140]]\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0101: 0.5974383349176965\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0011: 0.5411517486366137\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0110: 0.634912693250613\\n\",\n+      \"Test accuracy: 0.3867513884024616\\n\",\n       \"\\n\",\n-      \"Test accuracy for 'most certain 1.0% of predictions (total 199)': 0.8743718592964824\\n\",\n+      \"Test accuracy for 'most certain 1.0% of predictions (total 199)': 0.4723618090452261\\n\",\n       \"\\n\",\n       \"Confusion matrix (most certain 1.0%):\\n\",\n       \"H V P M \\n\",\n-      \"[[169   2   1   0]\\n\",\n-      \" [  3   0   3   0]\\n\",\n-      \" [  2   2   5   1]\\n\",\n-      \" [  5   4   2   0]]\\n\",\n+      \"[[34  4  4  2]\\n\",\n+      \" [ 0 21 26  1]\\n\",\n+      \" [ 1 14 37  7]\\n\",\n+      \" [ 1 20 25  2]]\\n\",\n+      \"Test accuracy for 'most certain 0.7035694170656154% of predictions (total 49)': 0.9591836734693877\\n\",\n+      \"\\n\",\n+      \"Confusion matrix (most certain 0.7035694170656154%):\\n\",\n+      \"H V P M \\n\",\n+      \"[[47  0  0  0]\\n\",\n+      \" [ 0  0  0  0]\\n\",\n+      \" [ 1  0  0  0]\\n\",\n+      \" [ 1  0  0  0]]\\n\",\n+      \"Test accuracy for 'most certain 0.5273614775725594% of predictions (total 49)': 0.3877551020408163\\n\",\n+      \"\\n\",\n+      \"Confusion matrix (most certain 0.5273614775725594%):\\n\",\n+      \"H V P M \\n\",\n+      \"[[ 0  4  0  0]\\n\",\n+      \" [ 0 19  0  0]\\n\",\n+      \" [ 0 11  0  0]\\n\",\n+      \" [ 0 15  0  0]]\\n\",\n+      \"Test accuracy for 'most certain 1.7188682490540077% of predictions (total 49)': 0.42857142857142855\\n\",\n+      \"\\n\",\n+      \"Confusion matrix (most certain 1.7188682490540077%):\\n\",\n+      \"H V P M \\n\",\n+      \"[[ 0  0  0  0]\\n\",\n+      \" [ 0  0 13  0]\\n\",\n+      \" [ 0  0 21  0]\\n\",\n+      \" [ 0  0 15  0]]\\n\",\n+      \"Test accuracy for 'most certain 9.93389662027833% of predictions (total 49)': 0.40816326530612246\\n\",\n+      \"\\n\",\n+      \"Confusion matrix (most certain 9.93389662027833%):\\n\",\n+      \"H V P M \\n\",\n+      \"[[ 0  0  0  5]\\n\",\n+      \" [ 0  0  0  9]\\n\",\n+      \" [ 0  0  0 15]\\n\",\n+      \" [ 0  0  0 20]]\\n\",\n+      \"Total test accuracy for 'most certain 1.0% of predictions when taking equal numbers of each predicted symbol: 0.5459183673469388\\n\",\n+      \"\\n\",\n       \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev1Distance/4cm\\n\",\n       \"Cut data in pieces with these shapes: after header:(14095, 500), before header:(5892, 500)\\n\",\n       \"Confusion matrix ():\\n\",\n       \"H V P M \\n\",\n-      \"[[3703  902  220  132]\\n\",\n-      \" [1131 3107  607  256]\\n\",\n-      \" [1003 3068  658  245]\\n\",\n-      \" [1087 2979  585  304]]\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0101: 0.6118977335267924\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0011: 0.5320958623105019\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0110: 0.6337119127432831\\n\",\n-      \"Test accuracy: 0.3888527542902887\\n\",\n+      \"[[3828  839  206   84]\\n\",\n+      \" [1267 2725  944  165]\\n\",\n+      \" [1112 2681 1011  170]\\n\",\n+      \" [1181 2730  876  168]]\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0101: 0.5976384650022515\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0011: 0.5445539600740481\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0110: 0.6315104818131786\\n\",\n+      \"Test accuracy: 0.3868514534447391\\n\",\n       \"\\n\",\n-      \"Test accuracy for 'most certain 1.0% of predictions (total 199)': 0.8994974874371859\\n\",\n+      \"Test accuracy for 'most certain 1.0% of predictions (total 199)': 0.542713567839196\\n\",\n       \"\\n\",\n       \"Confusion matrix (most certain 1.0%):\\n\",\n       \"H V P M \\n\",\n-      \"[[175   1   0   0]\\n\",\n-      \" [  4   2   2   0]\\n\",\n-      \" [  0   5   2   0]\\n\",\n-      \" [  5   3   0   0]]\\n\",\n+      \"[[73  3  2  0]\\n\",\n+      \" [ 3 14 20  1]\\n\",\n+      \" [ 1 24 20  2]\\n\",\n+      \" [ 4 14 17  1]]\\n\",\n+      \"Test accuracy for 'most certain 0.6763332430969139% of predictions (total 49)': 0.9387755102040817\\n\",\n+      \"\\n\",\n+      \"Confusion matrix (most certain 0.6763332430969139%):\\n\",\n+      \"H V P M \\n\",\n+      \"[[46  0  0  0]\\n\",\n+      \" [ 2  0  0  0]\\n\",\n+      \" [ 0  0  0  0]\\n\",\n+      \" [ 1  0  0  0]]\\n\",\n+      \"Test accuracy for 'most certain 0.5567409470752089% of predictions (total 49)': 0.22448979591836735\\n\",\n+      \"\\n\",\n+      \"Confusion matrix (most certain 0.5567409470752089%):\\n\",\n+      \"H V P M \\n\",\n+      \"[[ 0  3  0  0]\\n\",\n+      \" [ 0 11  0  0]\\n\",\n+      \" [ 0 24  0  0]\\n\",\n+      \" [ 0 11  0  0]]\\n\",\n+      \"Test accuracy for 'most certain 1.6452914059927561% of predictions (total 49)': 0.3469387755102041\\n\",\n+      \"\\n\",\n+      \"Confusion matrix (most certain 1.6452914059927561%):\\n\",\n+      \"H V P M \\n\",\n+      \"[[ 0  0  1  0]\\n\",\n+      \" [ 0  0 18  0]\\n\",\n+      \" [ 0  0 17  0]\\n\",\n+      \" [ 0  0 13  0]]\\n\",\n+      \"Test accuracy for 'most certain 8.512350936967632% of predictions (total 49)': 0.2653061224489796\\n\",\n+      \"\\n\",\n+      \"Confusion matrix (most certain 8.512350936967632%):\\n\",\n+      \"H V P M \\n\",\n+      \"[[ 0  0  0  4]\\n\",\n+      \" [ 0  0  0 17]\\n\",\n+      \" [ 0  0  0 15]\\n\",\n+      \" [ 0  0  0 13]]\\n\",\n+      \"Total test accuracy for 'most certain 1.0% of predictions when taking equal numbers of each predicted symbol: 0.44387755102040816\\n\",\n+      \"\\n\",\n       \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev1Distance/4cm\\n\",\n       \"Cut data in pieces with these shapes: after header:(14095, 500), before header:(5892, 500)\\n\",\n       \"Confusion matrix ():\\n\",\n       \"H V P M \\n\",\n-      \"[[3502 1083  217  155]\\n\",\n-      \" [ 996 3360  484  261]\\n\",\n-      \" [ 913 3320  496  245]\\n\",\n-      \" [ 995 3214  472  274]]\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0101: 0.6122479611747635\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0011: 0.5217391304347826\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0110: 0.629709311052184\\n\",\n-      \"Test accuracy: 0.38184820133086506\\n\",\n+      \"[[3700  949  226   82]\\n\",\n+      \" [1115 2918  909  159]\\n\",\n+      \" [1050 2842  914  168]\\n\",\n+      \" [1148 2827  833  147]]\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0101: 0.5974383349176965\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0011: 0.5375494071146245\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0110: 0.6334117176164507\\n\",\n+      \"Test accuracy: 0.3841997298243858\\n\",\n       \"\\n\",\n-      \"Test accuracy for 'most certain 1.0% of predictions (total 199)': 0.8743718592964824\\n\",\n+      \"Test accuracy for 'most certain 1.0% of predictions (total 199)': 0.5175879396984925\\n\",\n       \"\\n\",\n       \"Confusion matrix (most certain 1.0%):\\n\",\n       \"H V P M \\n\",\n-      \"[[170   0   0   1]\\n\",\n-      \" [  4   2   4   1]\\n\",\n-      \" [  3   2   2   1]\\n\",\n-      \" [  4   1   4   0]]\\n\",\n+      \"[[50  0  1  0]\\n\",\n+      \" [ 0 17 33  3]\\n\",\n+      \" [ 1 18 29  2]\\n\",\n+      \" [ 2 13 23  7]]\\n\",\n+      \"Test accuracy for 'most certain 0.7124982175958934% of predictions (total 49)': 0.9387755102040817\\n\",\n       \"\\n\",\n+      \"Confusion matrix (most certain 0.7124982175958934%):\\n\",\n+      \"H V P M \\n\",\n+      \"[[46  0  0  0]\\n\",\n+      \" [ 0  0  0  0]\\n\",\n+      \" [ 1  0  0  0]\\n\",\n+      \" [ 2  0  0  0]]\\n\",\n+      \"Test accuracy for 'most certain 0.5239880453020134% of predictions (total 49)': 0.3469387755102041\\n\",\n       \"\\n\",\n-      \"created a json file of the test accuracies at /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev1Distance/result_TEMPEST_20230111-1402.json\\n\",\n+      \"Confusion matrix (most certain 0.5239880453020134%):\\n\",\n+      \"H V P M \\n\",\n+      \"[[ 0  0  0  0]\\n\",\n+      \" [ 0 17  0  0]\\n\",\n+      \" [ 0 19  0  0]\\n\",\n+      \" [ 0 13  0  0]]\\n\",\n+      \"Test accuracy for 'most certain 1.7337786259541985% of predictions (total 49)': 0.40816326530612246\\n\",\n+      \"\\n\",\n+      \"Confusion matrix (most certain 1.7337786259541985%):\\n\",\n+      \"H V P M \\n\",\n+      \"[[ 0  0  0  0]\\n\",\n+      \" [ 0  0 17  0]\\n\",\n+      \" [ 0  0 20  0]\\n\",\n+      \" [ 0  0 12  0]]\\n\",\n+      \"Test accuracy for 'most certain 8.986960431654676% of predictions (total 49)': 0.30612244897959184\\n\",\n+      \"\\n\",\n+      \"Confusion matrix (most certain 8.986960431654676%):\\n\",\n+      \"H V P M \\n\",\n+      \"[[ 0  0  0  8]\\n\",\n+      \" [ 0  0  0 13]\\n\",\n+      \" [ 0  0  0 13]\\n\",\n+      \" [ 0  0  0 15]]\\n\",\n+      \"Total test accuracy for 'most certain 1.0% of predictions when taking equal numbers of each predicted symbol: 0.5\\n\",\n+      \"\\n\",\n+      \"\\n\",\n+      \"\\n\",\n+      \"created a json file of the test accuracies at /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev1Distance/result_TEMPEST_20230111-1723.json\\n\",\n       \"Loading dataset 5: 5cm\\n\",\n       \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev1Distance/5cm\\n\",\n       \"Cut data in pieces with these shapes: after header:(14095, 500), before header:(5892, 500)\\n\",\n@@ -970,79 +1480,181 @@\n       \"Non-trainable params: 462\\n\",\n       \"_________________________________________________________________\\n\",\n       \"Epoch 1/4\\n\",\n-      \"2811/2811 [==============================] - 28s 10ms/step - loss: 1.3267 - accuracy: 0.3345 - val_loss: 1.3043 - val_accuracy: 0.3478\\n\",\n+      \"2811/2811 [==============================] - 28s 10ms/step - loss: 1.3270 - accuracy: 0.3341 - val_loss: 1.3080 - val_accuracy: 0.3503\\n\",\n       \"Epoch 2/4\\n\",\n-      \"2811/2811 [==============================] - 26s 9ms/step - loss: 1.3065 - accuracy: 0.3447 - val_loss: 1.3002 - val_accuracy: 0.3484\\n\",\n+      \"2811/2811 [==============================] - 26s 9ms/step - loss: 1.3070 - accuracy: 0.3456 - val_loss: 1.3027 - val_accuracy: 0.3487\\n\",\n       \"Epoch 3/4\\n\",\n-      \"2811/2811 [==============================] - 26s 9ms/step - loss: 1.3013 - accuracy: 0.3491 - val_loss: 1.3005 - val_accuracy: 0.3473\\n\",\n+      \"2811/2811 [==============================] - 26s 9ms/step - loss: 1.3015 - accuracy: 0.3487 - val_loss: 1.3038 - val_accuracy: 0.3479\\n\",\n       \"Epoch 4/4\\n\",\n-      \"2811/2811 [==============================] - 26s 9ms/step - loss: 1.2959 - accuracy: 0.3517 - val_loss: 1.3009 - val_accuracy: 0.3486\\n\",\n+      \"2811/2811 [==============================] - 26s 9ms/step - loss: 1.2955 - accuracy: 0.3533 - val_loss: 1.3036 - val_accuracy: 0.3505\\n\",\n       \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev1Distance/5cm\\n\",\n       \"Cut data in pieces with these shapes: after header:(14095, 500), before header:(5892, 500)\\n\",\n       \"Confusion matrix ():\\n\",\n       \"H V P M \\n\",\n-      \"[[3589  559   71  738]\\n\",\n-      \" [1792 1315  206 1788]\\n\",\n-      \" [1713 1265  236 1760]\\n\",\n-      \" [1744 1251  233 1727]]\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0101: 0.5848801721118727\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0011: 0.5609145944864161\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0110: 0.5413518787211687\\n\",\n-      \"Test accuracy: 0.34357332265972884\\n\",\n+      \"[[3594  525  256  582]\\n\",\n+      \" [1788 1280  642 1391]\\n\",\n+      \" [1736 1215  664 1359]\\n\",\n+      \" [1763 1224  653 1315]]\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0101: 0.5733726922499625\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0011: 0.5592635212888377\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0110: 0.5531095211887727\\n\",\n+      \"Test accuracy: 0.34287286736378647\\n\",\n       \"\\n\",\n-      \"Test accuracy for 'most certain 1.0% of predictions (total 199)': 0.3768844221105528\\n\",\n+      \"Test accuracy for 'most certain 1.0% of predictions (total 199)': 0.33668341708542715\\n\",\n       \"\\n\",\n       \"Confusion matrix (most certain 1.0%):\\n\",\n       \"H V P M \\n\",\n-      \"[[23  3  9  2]\\n\",\n-      \" [ 4 11 34 12]\\n\",\n-      \" [ 6  6 28  9]\\n\",\n-      \" [ 7  5 27 13]]\\n\",\n+      \"[[17  2  9  2]\\n\",\n+      \" [ 2  0 54  1]\\n\",\n+      \" [ 4  2 48  2]\\n\",\n+      \" [ 5  3 46  2]]\\n\",\n+      \"Test accuracy for 'most certain 0.5626337124197726% of predictions (total 49)': 0.5510204081632653\\n\",\n+      \"\\n\",\n+      \"Confusion matrix (most certain 0.5626337124197726%):\\n\",\n+      \"H V P M \\n\",\n+      \"[[27  0  0  0]\\n\",\n+      \" [ 8  0  0  0]\\n\",\n+      \" [ 7  0  0  0]\\n\",\n+      \" [ 7  0  0  0]]\\n\",\n+      \"Test accuracy for 'most certain 1.1773680490103677% of predictions (total 49)': 0.2857142857142857\\n\",\n+      \"\\n\",\n+      \"Confusion matrix (most certain 1.1773680490103677%):\\n\",\n+      \"H V P M \\n\",\n+      \"[[ 0  7  0  0]\\n\",\n+      \" [ 0 14  0  0]\\n\",\n+      \" [ 0 14  0  0]\\n\",\n+      \" [ 0 14  0  0]]\\n\",\n+      \"Test accuracy for 'most certain 2.2558690744920993% of predictions (total 49)': 0.2857142857142857\\n\",\n+      \"\\n\",\n+      \"Confusion matrix (most certain 2.2558690744920993%):\\n\",\n+      \"H V P M \\n\",\n+      \"[[ 0  0  3  0]\\n\",\n+      \" [ 0  0 16  0]\\n\",\n+      \" [ 0  0 14  0]\\n\",\n+      \" [ 0  0 16  0]]\\n\",\n+      \"Test accuracy for 'most certain 1.075263610931784% of predictions (total 49)': 0.2857142857142857\\n\",\n+      \"\\n\",\n+      \"Confusion matrix (most certain 1.075263610931784%):\\n\",\n+      \"H V P M \\n\",\n+      \"[[ 0  0  0  4]\\n\",\n+      \" [ 0  0  0 16]\\n\",\n+      \" [ 0  0  0 15]\\n\",\n+      \" [ 0  0  0 14]]\\n\",\n+      \"Total test accuracy for 'most certain 1.0% of predictions when taking equal numbers of each predicted symbol: 0.3520408163265306\\n\",\n+      \"\\n\",\n       \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev1Distance/5cm\\n\",\n       \"Cut data in pieces with these shapes: after header:(14095, 500), before header:(5892, 500)\\n\",\n       \"Confusion matrix ():\\n\",\n       \"H V P M \\n\",\n-      \"[[3635  599   60  663]\\n\",\n-      \" [1756 1395  197 1753]\\n\",\n-      \" [1645 1352  241 1736]\\n\",\n-      \" [1760 1358  192 1645]]\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0101: 0.5869815379996998\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0011: 0.5603142042327512\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0110: 0.5447540901586031\\n\",\n-      \"Test accuracy: 0.3460249161955271\\n\",\n+      \"[[3597  604  225  531]\\n\",\n+      \" [1724 1308  651 1418]\\n\",\n+      \" [1638 1283  701 1352]\\n\",\n+      \" [1726 1312  614 1303]]\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0101: 0.5754740581377895\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0011: 0.5605143343173062\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0110: 0.555360984640016\\n\",\n+      \"Test accuracy: 0.3456746885475559\\n\",\n       \"\\n\",\n       \"Test accuracy for 'most certain 1.0% of predictions (total 199)': 0.4221105527638191\\n\",\n       \"\\n\",\n       \"Confusion matrix (most certain 1.0%):\\n\",\n       \"H V P M \\n\",\n-      \"[[21  1  3  2]\\n\",\n-      \" [ 4  5 27 15]\\n\",\n-      \" [ 3  6 44 12]\\n\",\n-      \" [ 8  3 31 14]]\\n\",\n+      \"[[17  1  8  0]\\n\",\n+      \" [ 4  0 44  3]\\n\",\n+      \" [ 3  1 65  2]\\n\",\n+      \" [ 3  3 43  2]]\\n\",\n+      \"Test accuracy for 'most certain 0.5753310305123777% of predictions (total 49)': 0.5918367346938775\\n\",\n+      \"\\n\",\n+      \"Confusion matrix (most certain 0.5753310305123777%):\\n\",\n+      \"H V P M \\n\",\n+      \"[[29  0  0  0]\\n\",\n+      \" [ 8  0  0  0]\\n\",\n+      \" [ 5  0  0  0]\\n\",\n+      \" [ 7  0  0  0]]\\n\",\n+      \"Test accuracy for 'most certain 1.1086642999778125% of predictions (total 49)': 0.20408163265306123\\n\",\n+      \"\\n\",\n+      \"Confusion matrix (most certain 1.1086642999778125%):\\n\",\n+      \"H V P M \\n\",\n+      \"[[ 0  3  0  0]\\n\",\n+      \" [ 0 10  0  0]\\n\",\n+      \" [ 0 21  0  0]\\n\",\n+      \" [ 0 15  0  0]]\\n\",\n+      \"Test accuracy for 'most certain 2.2805796439981747% of predictions (total 49)': 0.4489795918367347\\n\",\n+      \"\\n\",\n+      \"Confusion matrix (most certain 2.2805796439981747%):\\n\",\n+      \"H V P M \\n\",\n+      \"[[ 0  0  0  0]\\n\",\n+      \" [ 0  0 13  0]\\n\",\n+      \" [ 0  0 22  0]\\n\",\n+      \" [ 0  0 14  0]]\\n\",\n+      \"Test accuracy for 'most certain 1.085306255430061% of predictions (total 49)': 0.22448979591836735\\n\",\n+      \"\\n\",\n+      \"Confusion matrix (most certain 1.085306255430061%):\\n\",\n+      \"H V P M \\n\",\n+      \"[[ 0  0  0  2]\\n\",\n+      \" [ 0  0  0 17]\\n\",\n+      \" [ 0  0  0 19]\\n\",\n+      \" [ 0  0  0 11]]\\n\",\n+      \"Total test accuracy for 'most certain 1.0% of predictions when taking equal numbers of each predicted symbol: 0.3673469387755102\\n\",\n+      \"\\n\",\n       \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev1Distance/5cm\\n\",\n       \"Cut data in pieces with these shapes: after header:(14095, 500), before header:(5892, 500)\\n\",\n       \"Confusion matrix ():\\n\",\n       \"H V P M \\n\",\n-      \"[[3524  664   55  714]\\n\",\n-      \" [1709 1499  173 1720]\\n\",\n-      \" [1602 1477  192 1703]\\n\",\n-      \" [1706 1413  173 1663]]\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0101: 0.5837794566468204\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0011: 0.556711862710762\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0110: 0.5477560414269275\\n\",\n-      \"Test accuracy: 0.34412368039225494\\n\",\n+      \"[[3467  703  205  582]\\n\",\n+      \" [1709 1484  513 1395]\\n\",\n+      \" [1588 1484  564 1338]\\n\",\n+      \" [1687 1438  500 1330]]\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0101: 0.5739230499824887\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0011: 0.5551108220343223\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0110: 0.5559113423725421\\n\",\n+      \"Test accuracy: 0.34247260719467654\\n\",\n       \"\\n\",\n-      \"Test accuracy for 'most certain 1.0% of predictions (total 199)': 0.3768844221105528\\n\",\n+      \"Test accuracy for 'most certain 1.0% of predictions (total 199)': 0.37185929648241206\\n\",\n       \"\\n\",\n       \"Confusion matrix (most certain 1.0%):\\n\",\n       \"H V P M \\n\",\n-      \"[[23  3 10  2]\\n\",\n-      \" [ 8  8 29  9]\\n\",\n-      \" [ 4  6 34 12]\\n\",\n-      \" [ 6  5 30 10]]\\n\",\n+      \"[[23  3 14  0]\\n\",\n+      \" [ 5  4 39  2]\\n\",\n+      \" [ 6  1 46  3]\\n\",\n+      \" [ 5  4 43  1]]\\n\",\n+      \"Test accuracy for 'most certain 0.5912613891847118% of predictions (total 49)': 0.5714285714285714\\n\",\n       \"\\n\",\n+      \"Confusion matrix (most certain 0.5912613891847118%):\\n\",\n+      \"H V P M \\n\",\n+      \"[[28  0  0  0]\\n\",\n+      \" [ 8  0  0  0]\\n\",\n+      \" [ 6  0  0  0]\\n\",\n+      \" [ 7  0  0  0]]\\n\",\n+      \"Test accuracy for 'most certain 0.9780289684869837% of predictions (total 49)': 0.24489795918367346\\n\",\n       \"\\n\",\n-      \"created a json file of the test accuracies at /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev1Distance/result_TEMPEST_20230111-1402.json\\n\",\n+      \"Confusion matrix (most certain 0.9780289684869837%):\\n\",\n+      \"H V P M \\n\",\n+      \"[[ 0  6  0  0]\\n\",\n+      \" [ 0 12  0  0]\\n\",\n+      \" [ 0 10  0  0]\\n\",\n+      \" [ 0 21  0  0]]\\n\",\n+      \"Test accuracy for 'most certain 2.8040123456790123% of predictions (total 49)': 0.4489795918367347\\n\",\n+      \"\\n\",\n+      \"Confusion matrix (most certain 2.8040123456790123%):\\n\",\n+      \"H V P M \\n\",\n+      \"[[ 0  0  3  0]\\n\",\n+      \" [ 0  0 10  0]\\n\",\n+      \" [ 0  0 22  0]\\n\",\n+      \" [ 0  0 14  0]]\\n\",\n+      \"Test accuracy for 'most certain 1.0757265877287405% of predictions (total 49)': 0.30612244897959184\\n\",\n+      \"\\n\",\n+      \"Confusion matrix (most certain 1.0757265877287405%):\\n\",\n+      \"H V P M \\n\",\n+      \"[[ 0  0  0  2]\\n\",\n+      \" [ 0  0  0 16]\\n\",\n+      \" [ 0  0  0 16]\\n\",\n+      \" [ 0  0  0 15]]\\n\",\n+      \"Total test accuracy for 'most certain 1.0% of predictions when taking equal numbers of each predicted symbol: 0.3928571428571429\\n\",\n+      \"\\n\",\n+      \"\\n\",\n+      \"\\n\",\n+      \"created a json file of the test accuracies at /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev1Distance/result_TEMPEST_20230111-1723.json\\n\",\n       \"Loading dataset 6: 6cm\\n\",\n       \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev1Distance/6cm\\n\",\n       \"Cut data in pieces with these shapes: after header:(14095, 500), before header:(5892, 500)\\n\",\n@@ -1112,79 +1724,181 @@\n       \"Non-trainable params: 462\\n\",\n       \"_________________________________________________________________\\n\",\n       \"Epoch 1/4\\n\",\n-      \"2811/2811 [==============================] - 28s 10ms/step - loss: 1.3584 - accuracy: 0.3122 - val_loss: 1.3474 - val_accuracy: 0.3179\\n\",\n+      \"2811/2811 [==============================] - 29s 10ms/step - loss: 1.3581 - accuracy: 0.3120 - val_loss: 1.3471 - val_accuracy: 0.3193\\n\",\n       \"Epoch 2/4\\n\",\n-      \"2811/2811 [==============================] - 26s 9ms/step - loss: 1.3452 - accuracy: 0.3200 - val_loss: 1.3481 - val_accuracy: 0.3164\\n\",\n+      \"2811/2811 [==============================] - 26s 9ms/step - loss: 1.3452 - accuracy: 0.3194 - val_loss: 1.3476 - val_accuracy: 0.3196\\n\",\n       \"Epoch 3/4\\n\",\n-      \"2811/2811 [==============================] - 26s 9ms/step - loss: 1.3414 - accuracy: 0.3225 - val_loss: 1.3469 - val_accuracy: 0.3210\\n\",\n+      \"2811/2811 [==============================] - 26s 9ms/step - loss: 1.3418 - accuracy: 0.3215 - val_loss: 1.3463 - val_accuracy: 0.3204\\n\",\n       \"Epoch 4/4\\n\",\n-      \"2811/2811 [==============================] - 26s 9ms/step - loss: 1.3368 - accuracy: 0.3251 - val_loss: 1.3490 - val_accuracy: 0.3172\\n\",\n+      \"2811/2811 [==============================] - 26s 9ms/step - loss: 1.3372 - accuracy: 0.3260 - val_loss: 1.3490 - val_accuracy: 0.3158\\n\",\n       \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev1Distance/6cm\\n\",\n       \"Cut data in pieces with these shapes: after header:(14095, 500), before header:(5892, 500)\\n\",\n       \"Confusion matrix ():\\n\",\n       \"H V P M \\n\",\n-      \"[[2602 1215  849  291]\\n\",\n-      \" [1270 1878 1668  285]\\n\",\n-      \" [1171 1865 1625  313]\\n\",\n-      \" [1229 1812 1610  304]]\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0101: 0.5266423175063791\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0011: 0.5412017811577525\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0110: 0.57347275729224\\n\",\n-      \"Test accuracy: 0.32065842797818583\\n\",\n+      \"[[2820  723 1095  319]\\n\",\n+      \" [1462 1161 2130  348]\\n\",\n+      \" [1408 1145 2055  366]\\n\",\n+      \" [1440 1097 2084  334]]\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0101: 0.5162355531095212\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0011: 0.5506078951318357\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0110: 0.570570871066193\\n\",\n+      \"Test accuracy: 0.31870715965377494\\n\",\n       \"\\n\",\n-      \"Test accuracy for 'most certain 1.0% of predictions (total 199)': 0.3316582914572864\\n\",\n+      \"Test accuracy for 'most certain 1.0% of predictions (total 199)': 0.3015075376884422\\n\",\n       \"\\n\",\n       \"Confusion matrix (most certain 1.0%):\\n\",\n       \"H V P M \\n\",\n-      \"[[ 0  0 10  1]\\n\",\n-      \" [ 1  4 58  3]\\n\",\n-      \" [ 0  1 57  1]\\n\",\n-      \" [ 0  3 55  5]]\\n\",\n+      \"[[ 1  0 12  1]\\n\",\n+      \" [ 1  0 61  0]\\n\",\n+      \" [ 0  1 59  1]\\n\",\n+      \" [ 2  0 60  0]]\\n\",\n+      \"Test accuracy for 'most certain 0.7008064516129032% of predictions (total 49)': 0.5102040816326531\\n\",\n+      \"\\n\",\n+      \"Confusion matrix (most certain 0.7008064516129032%):\\n\",\n+      \"H V P M \\n\",\n+      \"[[25  0  0  0]\\n\",\n+      \" [ 8  0  0  0]\\n\",\n+      \" [ 8  0  0  0]\\n\",\n+      \" [ 8  0  0  0]]\\n\",\n+      \"Test accuracy for 'most certain 1.2110397479398933% of predictions (total 49)': 0.1836734693877551\\n\",\n+      \"\\n\",\n+      \"Confusion matrix (most certain 1.2110397479398933%):\\n\",\n+      \"H V P M \\n\",\n+      \"[[ 0 14  0  0]\\n\",\n+      \" [ 0  9  0  0]\\n\",\n+      \" [ 0 13  0  0]\\n\",\n+      \" [ 0 13  0  0]]\\n\",\n+      \"Test accuracy for 'most certain 0.6785374796306355% of predictions (total 49)': 0.16326530612244897\\n\",\n+      \"\\n\",\n+      \"Confusion matrix (most certain 0.6785374796306355%):\\n\",\n+      \"H V P M \\n\",\n+      \"[[ 0  0  5  0]\\n\",\n+      \" [ 0  0 16  0]\\n\",\n+      \" [ 0  0  8  0]\\n\",\n+      \" [ 0  0 20  0]]\\n\",\n+      \"Test accuracy for 'most certain 3.6552670080468177% of predictions (total 49)': 0.32653061224489793\\n\",\n+      \"\\n\",\n+      \"Confusion matrix (most certain 3.6552670080468177%):\\n\",\n+      \"H V P M \\n\",\n+      \"[[ 0  0  0  4]\\n\",\n+      \" [ 0  0  0 10]\\n\",\n+      \" [ 0  0  0 19]\\n\",\n+      \" [ 0  0  0 16]]\\n\",\n+      \"Total test accuracy for 'most certain 1.0% of predictions when taking equal numbers of each predicted symbol: 0.29591836734693877\\n\",\n+      \"\\n\",\n       \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev1Distance/6cm\\n\",\n       \"Cut data in pieces with these shapes: after header:(14095, 500), before header:(5892, 500)\\n\",\n       \"Confusion matrix ():\\n\",\n       \"H V P M \\n\",\n-      \"[[2699 1137 1008  113]\\n\",\n-      \" [1371 1758 1842  130]\\n\",\n-      \" [1331 1720 1801  122]\\n\",\n-      \" [1397 1701 1731  126]]\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0101: 0.5280432280982639\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0011: 0.5375994396357633\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0110: 0.5731725621654075\\n\",\n-      \"Test accuracy: 0.3194076149497173\\n\",\n+      \"[[2818  695 1275  169]\\n\",\n+      \" [1508 1096 2281  216]\\n\",\n+      \" [1438 1076 2307  153]\\n\",\n+      \" [1509 1042 2212  192]]\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0101: 0.519537699504678\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0011: 0.549407114624506\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0110: 0.5727723019962976\\n\",\n+      \"Test accuracy: 0.3208585580627408\\n\",\n       \"\\n\",\n-      \"Test accuracy for 'most certain 1.0% of predictions (total 199)': 0.3768844221105528\\n\",\n+      \"Test accuracy for 'most certain 1.0% of predictions (total 199)': 0.39195979899497485\\n\",\n       \"\\n\",\n       \"Confusion matrix (most certain 1.0%):\\n\",\n       \"H V P M \\n\",\n-      \"[[ 1  1 18  0]\\n\",\n-      \" [ 0  4 45  0]\\n\",\n-      \" [ 2  4 68  2]\\n\",\n-      \" [ 0  6 46  2]]\\n\",\n+      \"[[ 1  0 30  0]\\n\",\n+      \" [ 0  0 43  0]\\n\",\n+      \" [ 0  0 77  0]\\n\",\n+      \" [ 2  0 46  0]]\\n\",\n+      \"Test accuracy for 'most certain 0.6870273614739447% of predictions (total 49)': 0.40816326530612246\\n\",\n+      \"\\n\",\n+      \"Confusion matrix (most certain 0.6870273614739447%):\\n\",\n+      \"H V P M \\n\",\n+      \"[[20  0  0  0]\\n\",\n+      \" [12  0  0  0]\\n\",\n+      \" [ 7  0  0  0]\\n\",\n+      \" [10  0  0  0]]\\n\",\n+      \"Test accuracy for 'most certain 1.2782680992581223% of predictions (total 49)': 0.3877551020408163\\n\",\n+      \"\\n\",\n+      \"Confusion matrix (most certain 1.2782680992581223%):\\n\",\n+      \"H V P M \\n\",\n+      \"[[ 0 11  0  0]\\n\",\n+      \" [ 0 19  0  0]\\n\",\n+      \" [ 0 11  0  0]\\n\",\n+      \" [ 0  8  0  0]]\\n\",\n+      \"Test accuracy for 'most certain 0.6187925696594427% of predictions (total 49)': 0.4489795918367347\\n\",\n+      \"\\n\",\n+      \"Confusion matrix (most certain 0.6187925696594427%):\\n\",\n+      \"H V P M \\n\",\n+      \"[[ 0  0 10  0]\\n\",\n+      \" [ 0  0  8  0]\\n\",\n+      \" [ 0  0 22  0]\\n\",\n+      \" [ 0  0  9  0]]\\n\",\n+      \"Test accuracy for 'most certain 6.844863013698631% of predictions (total 49)': 0.22448979591836735\\n\",\n+      \"\\n\",\n+      \"Confusion matrix (most certain 6.844863013698631%):\\n\",\n+      \"H V P M \\n\",\n+      \"[[ 0  0  0  8]\\n\",\n+      \" [ 0  0  0 19]\\n\",\n+      \" [ 0  0  0 11]\\n\",\n+      \" [ 0  0  0 11]]\\n\",\n+      \"Total test accuracy for 'most certain 1.0% of predictions when taking equal numbers of each predicted symbol: 0.3673469387755102\\n\",\n+      \"\\n\",\n       \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev1Distance/6cm\\n\",\n       \"Cut data in pieces with these shapes: after header:(14095, 500), before header:(5892, 500)\\n\",\n       \"Confusion matrix ():\\n\",\n       \"H V P M \\n\",\n-      \"[[2553 1382  781  241]\\n\",\n-      \" [1233 2091 1514  263]\\n\",\n-      \" [1235 1942 1545  252]\\n\",\n-      \" [1245 1933 1528  249]]\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0101: 0.532846350127583\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0011: 0.5420023014959724\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0110: 0.5693700905588632\\n\",\n-      \"Test accuracy: 0.3221093710912093\\n\",\n+      \"[[2768  834 1069  286]\\n\",\n+      \" [1418 1357 2009  317]\\n\",\n+      \" [1382 1291 2001  300]\\n\",\n+      \" [1427 1272 1965  291]]\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0101: 0.5231900735478061\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0011: 0.5470555861309851\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0110: 0.5718717166158003\\n\",\n+      \"Test accuracy: 0.32105868814729577\\n\",\n       \"\\n\",\n-      \"Test accuracy for 'most certain 1.0% of predictions (total 199)': 0.2613065326633166\\n\",\n+      \"Test accuracy for 'most certain 1.0% of predictions (total 199)': 0.2663316582914573\\n\",\n       \"\\n\",\n       \"Confusion matrix (most certain 1.0%):\\n\",\n       \"H V P M \\n\",\n-      \"[[ 1  1 15  1]\\n\",\n-      \" [ 0  1 51  3]\\n\",\n-      \" [ 1  4 49  0]\\n\",\n-      \" [ 0  2 69  1]]\\n\",\n+      \"[[ 0  0 24  0]\\n\",\n+      \" [ 0  0 53  0]\\n\",\n+      \" [ 0  0 53  0]\\n\",\n+      \" [ 0  0 69  0]]\\n\",\n+      \"Test accuracy for 'most certain 0.7143316654753396% of predictions (total 49)': 0.46938775510204084\\n\",\n+      \"\\n\",\n+      \"Confusion matrix (most certain 0.7143316654753396%):\\n\",\n+      \"H V P M \\n\",\n+      \"[[23  0  0  0]\\n\",\n+      \" [12  0  0  0]\\n\",\n+      \" [ 7  0  0  0]\\n\",\n+      \" [ 7  0  0  0]]\\n\",\n+      \"Test accuracy for 'most certain 1.051062263357173% of predictions (total 49)': 0.2653061224489796\\n\",\n+      \"\\n\",\n+      \"Confusion matrix (most certain 1.051062263357173%):\\n\",\n+      \"H V P M \\n\",\n+      \"[[ 0 14  0  0]\\n\",\n+      \" [ 0 13  0  0]\\n\",\n+      \" [ 0 14  0  0]\\n\",\n+      \" [ 0  8  0  0]]\\n\",\n+      \"Test accuracy for 'most certain 0.709362578080636% of predictions (total 49)': 0.20408163265306123\\n\",\n+      \"\\n\",\n+      \"Confusion matrix (most certain 0.709362578080636%):\\n\",\n+      \"H V P M \\n\",\n+      \"[[ 0  0  8  0]\\n\",\n+      \" [ 0  0 14  0]\\n\",\n+      \" [ 0  0 10  0]\\n\",\n+      \" [ 0  0 17  0]]\\n\",\n+      \"Test accuracy for 'most certain 4.184882747068676% of predictions (total 49)': 0.20408163265306123\\n\",\n+      \"\\n\",\n+      \"Confusion matrix (most certain 4.184882747068676%):\\n\",\n+      \"H V P M \\n\",\n+      \"[[ 0  0  0 17]\\n\",\n+      \" [ 0  0  0 13]\\n\",\n+      \" [ 0  0  0  9]\\n\",\n+      \" [ 0  0  0 10]]\\n\",\n+      \"Total test accuracy for 'most certain 1.0% of predictions when taking equal numbers of each predicted symbol: 0.2857142857142857\\n\",\n       \"\\n\",\n       \"\\n\",\n-      \"created a json file of the test accuracies at /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev1Distance/result_TEMPEST_20230111-1402.json\\n\",\n+      \"\\n\",\n+      \"created a json file of the test accuracies at /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev1Distance/result_TEMPEST_20230111-1723.json\\n\",\n       \"Loading dataset 7: 7cm\\n\",\n       \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev1Distance/7cm\\n\",\n       \"Cut data in pieces with these shapes: after header:(14095, 500), before header:(5892, 500)\\n\",\n@@ -1254,79 +1968,181 @@\n       \"Non-trainable params: 462\\n\",\n       \"_________________________________________________________________\\n\",\n       \"Epoch 1/4\\n\",\n-      \"2811/2811 [==============================] - 28s 10ms/step - loss: 1.3804 - accuracy: 0.2881 - val_loss: 1.3680 - val_accuracy: 0.3005\\n\",\n+      \"2811/2811 [==============================] - 28s 10ms/step - loss: 1.3804 - accuracy: 0.2878 - val_loss: 1.3689 - val_accuracy: 0.3009\\n\",\n       \"Epoch 2/4\\n\",\n-      \"2811/2811 [==============================] - 26s 9ms/step - loss: 1.3698 - accuracy: 0.2940 - val_loss: 1.3656 - val_accuracy: 0.3021\\n\",\n+      \"2811/2811 [==============================] - 26s 9ms/step - loss: 1.3700 - accuracy: 0.2942 - val_loss: 1.3665 - val_accuracy: 0.2992\\n\",\n       \"Epoch 3/4\\n\",\n-      \"2811/2811 [==============================] - 26s 9ms/step - loss: 1.3671 - accuracy: 0.2973 - val_loss: 1.3663 - val_accuracy: 0.3014\\n\",\n+      \"2811/2811 [==============================] - 26s 9ms/step - loss: 1.3672 - accuracy: 0.2969 - val_loss: 1.3671 - val_accuracy: 0.3019\\n\",\n       \"Epoch 4/4\\n\",\n-      \"2811/2811 [==============================] - 26s 9ms/step - loss: 1.3647 - accuracy: 0.2990 - val_loss: 1.3677 - val_accuracy: 0.3020\\n\",\n+      \"2811/2811 [==============================] - 26s 9ms/step - loss: 1.3647 - accuracy: 0.2989 - val_loss: 1.3688 - val_accuracy: 0.3027\\n\",\n       \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev1Distance/7cm\\n\",\n       \"Cut data in pieces with these shapes: after header:(14095, 500), before header:(5892, 500)\\n\",\n       \"Confusion matrix ():\\n\",\n       \"H V P M \\n\",\n-      \"[[2297 2033  608   19]\\n\",\n-      \" [1439 3022  621   19]\\n\",\n-      \" [1437 2910  598   29]\\n\",\n-      \" [1449 2926  560   20]]\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0101: 0.5467053584830139\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0011: 0.5002251463451244\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0110: 0.5471556511732626\\n\",\n-      \"Test accuracy: 0.29704307800070046\\n\",\n+      \"[[2252 1861  497  347]\\n\",\n+      \" [1383 2816  506  396]\\n\",\n+      \" [1387 2753  462  372]\\n\",\n+      \" [1408 2705  491  351]]\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0101: 0.5436533746935508\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0011: 0.49972482113373695\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0110: 0.5451043178065743\\n\",\n+      \"Test accuracy: 0.29424125681693103\\n\",\n       \"\\n\",\n-      \"Test accuracy for 'most certain 1.0% of predictions (total 199)': 0.5829145728643216\\n\",\n+      \"Test accuracy for 'most certain 1.0% of predictions (total 199)': 0.592964824120603\\n\",\n       \"\\n\",\n       \"Confusion matrix (most certain 1.0%):\\n\",\n       \"H V P M \\n\",\n-      \"[[116   0   0   0]\\n\",\n-      \" [ 27   0   0   0]\\n\",\n-      \" [ 30   0   0   0]\\n\",\n-      \" [ 26   0   0   0]]\\n\",\n+      \"[[118   0   0   0]\\n\",\n+      \" [ 26   0   0   0]\\n\",\n+      \" [ 25   0   0   0]\\n\",\n+      \" [ 30   0   0   0]]\\n\",\n+      \"Test accuracy for 'most certain 0.777099533437014% of predictions (total 49)': 0.673469387755102\\n\",\n+      \"\\n\",\n+      \"Confusion matrix (most certain 0.777099533437014%):\\n\",\n+      \"H V P M \\n\",\n+      \"[[33  0  0  0]\\n\",\n+      \" [ 5  0  0  0]\\n\",\n+      \" [ 6  0  0  0]\\n\",\n+      \" [ 5  0  0  0]]\\n\",\n+      \"Test accuracy for 'most certain 0.4930192402565367% of predictions (total 49)': 0.3673469387755102\\n\",\n+      \"\\n\",\n+      \"Confusion matrix (most certain 0.4930192402565367%):\\n\",\n+      \"H V P M \\n\",\n+      \"[[ 0  8  0  0]\\n\",\n+      \" [ 0 18  0  0]\\n\",\n+      \" [ 0 15  0  0]\\n\",\n+      \" [ 0  8  0  0]]\\n\",\n+      \"Test accuracy for 'most certain 2.554575664621677% of predictions (total 49)': 0.16326530612244897\\n\",\n+      \"\\n\",\n+      \"Confusion matrix (most certain 2.554575664621677%):\\n\",\n+      \"H V P M \\n\",\n+      \"[[ 0  0 15  0]\\n\",\n+      \" [ 0  0 13  0]\\n\",\n+      \" [ 0  0  8  0]\\n\",\n+      \" [ 0  0 13  0]]\\n\",\n+      \"Test accuracy for 'most certain 3.4084242837653482% of predictions (total 49)': 0.2857142857142857\\n\",\n+      \"\\n\",\n+      \"Confusion matrix (most certain 3.4084242837653482%):\\n\",\n+      \"H V P M \\n\",\n+      \"[[ 0  0  0 11]\\n\",\n+      \" [ 0  0  0 12]\\n\",\n+      \" [ 0  0  0 12]\\n\",\n+      \" [ 0  0  0 14]]\\n\",\n+      \"Total test accuracy for 'most certain 1.0% of predictions when taking equal numbers of each predicted symbol: 0.37244897959183676\\n\",\n+      \"\\n\",\n       \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev1Distance/7cm\\n\",\n       \"Cut data in pieces with these shapes: after header:(14095, 500), before header:(5892, 500)\\n\",\n       \"Confusion matrix ():\\n\",\n       \"H V P M \\n\",\n-      \"[[2305 2061  567   24]\\n\",\n-      \" [1428 3094  558   21]\\n\",\n-      \" [1429 2985  545   15]\\n\",\n-      \" [1420 2955  555   25]]\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0101: 0.5474058137789564\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0011: 0.5017261219792866\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0110: 0.5481563015960375\\n\",\n-      \"Test accuracy: 0.29864411867714014\\n\",\n+      \"[[2227 1938  568  224]\\n\",\n+      \" [1357 2902  569  273]\\n\",\n+      \" [1363 2815  531  265]\\n\",\n+      \" [1366 2816  511  262]]\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0101: 0.547455846300095\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0011: 0.4999749837394306\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0110: 0.545154350327713\\n\",\n+      \"Test accuracy: 0.29629259018361936\\n\",\n       \"\\n\",\n-      \"Test accuracy for 'most certain 1.0% of predictions (total 199)': 0.542713567839196\\n\",\n+      \"Test accuracy for 'most certain 1.0% of predictions (total 199)': 0.46733668341708545\\n\",\n       \"\\n\",\n       \"Confusion matrix (most certain 1.0%):\\n\",\n       \"H V P M \\n\",\n-      \"[[107   0   0   0]\\n\",\n-      \" [ 32   0   0   0]\\n\",\n-      \" [ 26   0   1   0]\\n\",\n-      \" [ 33   0   0   0]]\\n\",\n+      \"[[93  0  0  0]\\n\",\n+      \" [40  0  0  0]\\n\",\n+      \" [29  0  0  0]\\n\",\n+      \" [37  0  0  0]]\\n\",\n+      \"Test accuracy for 'most certain 0.7915016632345954% of predictions (total 49)': 0.5510204081632653\\n\",\n+      \"\\n\",\n+      \"Confusion matrix (most certain 0.7915016632345954%):\\n\",\n+      \"H V P M \\n\",\n+      \"[[27  0  0  0]\\n\",\n+      \" [ 9  0  0  0]\\n\",\n+      \" [ 3  0  0  0]\\n\",\n+      \" [10  0  0  0]]\\n\",\n+      \"Test accuracy for 'most certain 0.4771989303791424% of predictions (total 49)': 0.22448979591836735\\n\",\n+      \"\\n\",\n+      \"Confusion matrix (most certain 0.4771989303791424%):\\n\",\n+      \"H V P M \\n\",\n+      \"[[ 0  7  0  0]\\n\",\n+      \" [ 0 11  0  0]\\n\",\n+      \" [ 0 17  0  0]\\n\",\n+      \" [ 0 14  0  0]]\\n\",\n+      \"Test accuracy for 'most certain 2.2931390546122072% of predictions (total 49)': 0.22448979591836735\\n\",\n+      \"\\n\",\n+      \"Confusion matrix (most certain 2.2931390546122072%):\\n\",\n+      \"H V P M \\n\",\n+      \"[[ 0  0  9  0]\\n\",\n+      \" [ 0  0 13  0]\\n\",\n+      \" [ 0  0 11  0]\\n\",\n+      \" [ 0  0 16  0]]\\n\",\n+      \"Test accuracy for 'most certain 4.879638671875% of predictions (total 49)': 0.20408163265306123\\n\",\n+      \"\\n\",\n+      \"Confusion matrix (most certain 4.879638671875%):\\n\",\n+      \"H V P M \\n\",\n+      \"[[ 0  0  0 11]\\n\",\n+      \" [ 0  0  0 13]\\n\",\n+      \" [ 0  0  0 15]\\n\",\n+      \" [ 0  0  0 10]]\\n\",\n+      \"Total test accuracy for 'most certain 1.0% of predictions when taking equal numbers of each predicted symbol: 0.3010204081632653\\n\",\n+      \"\\n\",\n       \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev1Distance/7cm\\n\",\n       \"Cut data in pieces with these shapes: after header:(14095, 500), before header:(5892, 500)\\n\",\n       \"Confusion matrix ():\\n\",\n       \"H V P M \\n\",\n-      \"[[2301 2095  495   66]\\n\",\n-      \" [1469 3048  496   88]\\n\",\n-      \" [1432 2962  499   81]\\n\",\n-      \" [1423 2951  512   69]]\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0101: 0.5445039275529094\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0011: 0.5040276179516686\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0110: 0.5435533096512734\\n\",\n-      \"Test accuracy: 0.29604242757792565\\n\",\n+      \"[[2233 1910  602  212]\\n\",\n+      \" [1369 2901  616  215]\\n\",\n+      \" [1348 2832  567  227]\\n\",\n+      \" [1373 2786  586  210]]\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0101: 0.5434532446089958\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0011: 0.500475308950818\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0110: 0.5475559113423726\\n\",\n+      \"Test accuracy: 0.2957422324510932\\n\",\n       \"\\n\",\n-      \"Test accuracy for 'most certain 1.0% of predictions (total 199)': 0.5527638190954773\\n\",\n+      \"Test accuracy for 'most certain 1.0% of predictions (total 199)': 0.542713567839196\\n\",\n       \"\\n\",\n       \"Confusion matrix (most certain 1.0%):\\n\",\n       \"H V P M \\n\",\n-      \"[[110   0   0   0]\\n\",\n-      \" [ 29   0   0   0]\\n\",\n-      \" [ 27   0   0   0]\\n\",\n-      \" [ 33   0   0   0]]\\n\",\n+      \"[[108   0   0   0]\\n\",\n+      \" [ 24   0   0   0]\\n\",\n+      \" [ 30   0   0   0]\\n\",\n+      \" [ 37   0   0   0]]\\n\",\n+      \"Test accuracy for 'most certain 0.7902498813854183% of predictions (total 49)': 0.5102040816326531\\n\",\n       \"\\n\",\n+      \"Confusion matrix (most certain 0.7902498813854183%):\\n\",\n+      \"H V P M \\n\",\n+      \"[[25  0  0  0]\\n\",\n+      \" [ 9  0  0  0]\\n\",\n+      \" [ 8  0  0  0]\\n\",\n+      \" [ 7  0  0  0]]\\n\",\n+      \"Test accuracy for 'most certain 0.4791207210662575% of predictions (total 49)': 0.2857142857142857\\n\",\n+      \"\\n\",\n+      \"Confusion matrix (most certain 0.4791207210662575%):\\n\",\n+      \"H V P M \\n\",\n+      \"[[ 0  8  0  0]\\n\",\n+      \" [ 0 14  0  0]\\n\",\n+      \" [ 0 14  0  0]\\n\",\n+      \" [ 0 13  0  0]]\\n\",\n+      \"Test accuracy for 'most certain 2.1074441164065796% of predictions (total 49)': 0.32653061224489793\\n\",\n       \"\\n\",\n-      \"created a json file of the test accuracies at /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev1Distance/result_TEMPEST_20230111-1402.json\\n\",\n+      \"Confusion matrix (most certain 2.1074441164065796%):\\n\",\n+      \"H V P M \\n\",\n+      \"[[ 0  0 11  0]\\n\",\n+      \" [ 0  0 12  0]\\n\",\n+      \" [ 0  0 16  0]\\n\",\n+      \" [ 0  0 10  0]]\\n\",\n+      \"Test accuracy for 'most certain 5.783275462962964% of predictions (total 49)': 0.16326530612244897\\n\",\n+      \"\\n\",\n+      \"Confusion matrix (most certain 5.783275462962964%):\\n\",\n+      \"H V P M \\n\",\n+      \"[[ 0  0  0 10]\\n\",\n+      \" [ 0  0  0 14]\\n\",\n+      \" [ 0  0  0 17]\\n\",\n+      \" [ 0  0  0  8]]\\n\",\n+      \"Total test accuracy for 'most certain 1.0% of predictions when taking equal numbers of each predicted symbol: 0.3214285714285714\\n\",\n+      \"\\n\",\n+      \"\\n\",\n+      \"\\n\",\n+      \"created a json file of the test accuracies at /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev1Distance/result_TEMPEST_20230111-1723.json\\n\",\n       \"Loading dataset 8: 8cm\\n\",\n       \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev1Distance/8cm\\n\",\n       \"Cut data in pieces with these shapes: after header:(14095, 500), before header:(5892, 500)\\n\",\n@@ -1396,79 +2212,181 @@\n       \"Non-trainable params: 462\\n\",\n       \"_________________________________________________________________\\n\",\n       \"Epoch 1/4\\n\",\n-      \"2811/2811 [==============================] - 28s 10ms/step - loss: 1.3870 - accuracy: 0.2758 - val_loss: 1.3806 - val_accuracy: 0.2833\\n\",\n+      \"2811/2811 [==============================] - 28s 10ms/step - loss: 1.3869 - accuracy: 0.2766 - val_loss: 1.3785 - val_accuracy: 0.2816\\n\",\n       \"Epoch 2/4\\n\",\n-      \"2811/2811 [==============================] - 26s 9ms/step - loss: 1.3768 - accuracy: 0.2841 - val_loss: 1.3786 - val_accuracy: 0.2832\\n\",\n+      \"2811/2811 [==============================] - 26s 9ms/step - loss: 1.3768 - accuracy: 0.2826 - val_loss: 1.3794 - val_accuracy: 0.2832\\n\",\n       \"Epoch 3/4\\n\",\n-      \"2811/2811 [==============================] - 26s 9ms/step - loss: 1.3748 - accuracy: 0.2867 - val_loss: 1.3788 - val_accuracy: 0.2857\\n\",\n+      \"2811/2811 [==============================] - 26s 9ms/step - loss: 1.3748 - accuracy: 0.2859 - val_loss: 1.3783 - val_accuracy: 0.2883\\n\",\n       \"Epoch 4/4\\n\",\n-      \"2811/2811 [==============================] - 26s 9ms/step - loss: 1.3723 - accuracy: 0.2893 - val_loss: 1.3779 - val_accuracy: 0.2812\\n\",\n+      \"2811/2811 [==============================] - 26s 9ms/step - loss: 1.3723 - accuracy: 0.2887 - val_loss: 1.3789 - val_accuracy: 0.2843\\n\",\n       \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev1Distance/8cm\\n\",\n       \"Cut data in pieces with these shapes: after header:(14095, 500), before header:(5892, 500)\\n\",\n       \"Confusion matrix ():\\n\",\n       \"H V P M \\n\",\n-      \"[[2341    0  133 2483]\\n\",\n-      \" [1670    0  125 3306]\\n\",\n-      \" [1638    0  151 3185]\\n\",\n-      \" [1717    2  128 3108]]\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0101: 0.5342972932406064\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0011: 0.5294941712112874\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0110: 0.4965727723019963\\n\",\n-      \"Test accuracy: 0.280182118376945\\n\",\n+      \"[[2505   38 1033 1381]\\n\",\n+      \" [1824   42 1157 2078]\\n\",\n+      \" [1848   34 1115 1977]\\n\",\n+      \" [1873   30 1102 1950]]\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0101: 0.5303947565917847\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0011: 0.5279931955771251\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0110: 0.50317706509231\\n\",\n+      \"Test accuracy: 0.2807825086306099\\n\",\n       \"\\n\",\n-      \"Test accuracy for 'most certain 1.0% of predictions (total 199)': 0.44221105527638194\\n\",\n+      \"Test accuracy for 'most certain 1.0% of predictions (total 199)': 0.4221105527638191\\n\",\n       \"\\n\",\n       \"Confusion matrix (most certain 1.0%):\\n\",\n       \"H V P M \\n\",\n-      \"[[88  0  0  0]\\n\",\n-      \" [38  0  0  0]\\n\",\n+      \"[[84  0  0  0]\\n\",\n       \" [42  0  0  0]\\n\",\n-      \" [31  0  0  0]]\\n\",\n+      \" [37  0  0  0]\\n\",\n+      \" [36  0  0  0]]\\n\",\n+      \"Test accuracy for 'most certain 0.6207142857142858% of predictions (total 49)': 0.4489795918367347\\n\",\n+      \"\\n\",\n+      \"Confusion matrix (most certain 0.6207142857142858%):\\n\",\n+      \"H V P M \\n\",\n+      \"[[22  0  0  0]\\n\",\n+      \" [ 8  0  0  0]\\n\",\n+      \" [13  0  0  0]\\n\",\n+      \" [ 6  0  0  0]]\\n\",\n+      \"Test accuracy for 'most certain 34.69965277777778% of predictions (total 49)': 0.32653061224489793\\n\",\n+      \"\\n\",\n+      \"Confusion matrix (most certain 34.69965277777778%):\\n\",\n+      \"H V P M \\n\",\n+      \"[[ 0 12  0  0]\\n\",\n+      \" [ 0 16  0  0]\\n\",\n+      \" [ 0 14  0  0]\\n\",\n+      \" [ 0  7  0  0]]\\n\",\n+      \"Test accuracy for 'most certain 1.1338211935557068% of predictions (total 49)': 0.14285714285714285\\n\",\n+      \"\\n\",\n+      \"Confusion matrix (most certain 1.1338211935557068%):\\n\",\n+      \"H V P M \\n\",\n+      \"[[ 0  0 15  0]\\n\",\n+      \" [ 0  0 13  0]\\n\",\n+      \" [ 0  0  7  0]\\n\",\n+      \" [ 0  0 14  0]]\\n\",\n+      \"Test accuracy for 'most certain 0.6765163823449769% of predictions (total 49)': 0.20408163265306123\\n\",\n+      \"\\n\",\n+      \"Confusion matrix (most certain 0.6765163823449769%):\\n\",\n+      \"H V P M \\n\",\n+      \"[[ 0  0  0 17]\\n\",\n+      \" [ 0  0  0 14]\\n\",\n+      \" [ 0  0  0  8]\\n\",\n+      \" [ 0  0  0 10]]\\n\",\n+      \"Total test accuracy for 'most certain 1.0% of predictions when taking equal numbers of each predicted symbol: 0.28061224489795916\\n\",\n+      \"\\n\",\n       \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev1Distance/8cm\\n\",\n       \"Cut data in pieces with these shapes: after header:(14095, 500), before header:(5892, 500)\\n\",\n       \"Confusion matrix ():\\n\",\n       \"H V P M \\n\",\n-      \"[[2364    0  153 2440]\\n\",\n-      \" [1666    0  134 3301]\\n\",\n-      \" [1613    0  153 3208]\\n\",\n-      \" [1688    0  140 3127]]\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0101: 0.5358983339170461\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0011: 0.5332466102966928\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0110: 0.4956221544003602\\n\",\n-      \"Test accuracy: 0.28238354930704956\\n\",\n+      \"[[2518   25 1063 1351]\\n\",\n+      \" [1801   27 1168 2105]\\n\",\n+      \" [1782   32 1213 1947]\\n\",\n+      \" [1784   32 1140 1999]]\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0101: 0.5372992445089309\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0011: 0.5338470005503577\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0110: 0.5049282033321659\\n\",\n+      \"Test accuracy: 0.28803722419572725\\n\",\n       \"\\n\",\n-      \"Test accuracy for 'most certain 1.0% of predictions (total 199)': 0.48743718592964824\\n\",\n+      \"Test accuracy for 'most certain 1.0% of predictions (total 199)': 0.4723618090452261\\n\",\n       \"\\n\",\n       \"Confusion matrix (most certain 1.0%):\\n\",\n       \"H V P M \\n\",\n-      \"[[97  0  0  0]\\n\",\n-      \" [42  0  0  0]\\n\",\n-      \" [28  0  0  0]\\n\",\n-      \" [32  0  0  0]]\\n\",\n+      \"[[94  0  0  0]\\n\",\n+      \" [36  0  0  0]\\n\",\n+      \" [32  0  0  0]\\n\",\n+      \" [37  0  0  0]]\\n\",\n+      \"Test accuracy for 'most certain 0.633703233988586% of predictions (total 49)': 0.46938775510204084\\n\",\n+      \"\\n\",\n+      \"Confusion matrix (most certain 0.633703233988586%):\\n\",\n+      \"H V P M \\n\",\n+      \"[[23  0  0  0]\\n\",\n+      \" [ 7  0  0  0]\\n\",\n+      \" [ 6  0  0  0]\\n\",\n+      \" [13  0  0  0]]\\n\",\n+      \"Test accuracy for 'most certain 43.07543103448276% of predictions (total 49)': 0.24489795918367346\\n\",\n+      \"\\n\",\n+      \"Confusion matrix (most certain 43.07543103448276%):\\n\",\n+      \"H V P M \\n\",\n+      \"[[ 0  6  0  0]\\n\",\n+      \" [ 0 12  0  0]\\n\",\n+      \" [ 0 14  0  0]\\n\",\n+      \" [ 0 17  0  0]]\\n\",\n+      \"Test accuracy for 'most certain 1.0900414485165792% of predictions (total 49)': 0.30612244897959184\\n\",\n+      \"\\n\",\n+      \"Confusion matrix (most certain 1.0900414485165792%):\\n\",\n+      \"H V P M \\n\",\n+      \"[[ 0  0 17  0]\\n\",\n+      \" [ 0  0  4  0]\\n\",\n+      \" [ 0  0 15  0]\\n\",\n+      \" [ 0  0 13  0]]\\n\",\n+      \"Test accuracy for 'most certain 0.6750540394487976% of predictions (total 49)': 0.22448979591836735\\n\",\n+      \"\\n\",\n+      \"Confusion matrix (most certain 0.6750540394487976%):\\n\",\n+      \"H V P M \\n\",\n+      \"[[ 0  0  0 13]\\n\",\n+      \" [ 0  0  0 13]\\n\",\n+      \" [ 0  0  0 12]\\n\",\n+      \" [ 0  0  0 11]]\\n\",\n+      \"Total test accuracy for 'most certain 1.0% of predictions when taking equal numbers of each predicted symbol: 0.3112244897959184\\n\",\n+      \"\\n\",\n       \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev1Distance/8cm\\n\",\n       \"Cut data in pieces with these shapes: after header:(14095, 500), before header:(5892, 500)\\n\",\n       \"Confusion matrix ():\\n\",\n       \"H V P M \\n\",\n-      \"[[2311    0  196 2450]\\n\",\n-      \" [1800    0  146 3155]\\n\",\n-      \" [1643    0  151 3180]\\n\",\n-      \" [1771    0  153 3031]]\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0101: 0.5246910491819683\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0011: 0.5316455696202531\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0110: 0.4933206584279782\\n\",\n-      \"Test accuracy: 0.2748286386150998\\n\",\n+      \"[[2544   10 1037 1366]\\n\",\n+      \" [2001   22 1128 1950]\\n\",\n+      \" [1887   14 1083 1990]\\n\",\n+      \" [2003   14  985 1953]]\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0101: 0.5248411467453845\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0011: 0.529744333816981\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0110: 0.5059788862760795\\n\",\n+      \"Test accuracy: 0.2802821834192225\\n\",\n       \"\\n\",\n-      \"Test accuracy for 'most certain 1.0% of predictions (total 199)': 0.4472361809045226\\n\",\n+      \"Test accuracy for 'most certain 1.0% of predictions (total 199)': 0.457286432160804\\n\",\n       \"\\n\",\n       \"Confusion matrix (most certain 1.0%):\\n\",\n       \"H V P M \\n\",\n-      \"[[89  0  0  0]\\n\",\n-      \" [34  0  0  0]\\n\",\n-      \" [40  0  0  0]\\n\",\n-      \" [36  0  0  0]]\\n\",\n+      \"[[91  0  0  0]\\n\",\n+      \" [33  0  0  0]\\n\",\n+      \" [36  0  0  0]\\n\",\n+      \" [39  0  0  0]]\\n\",\n+      \"Test accuracy for 'most certain 0.5923829282750445% of predictions (total 49)': 0.4489795918367347\\n\",\n       \"\\n\",\n+      \"Confusion matrix (most certain 0.5923829282750445%):\\n\",\n+      \"H V P M \\n\",\n+      \"[[22  0  0  0]\\n\",\n+      \" [ 8  0  0  0]\\n\",\n+      \" [11  0  0  0]\\n\",\n+      \" [ 8  0  0  0]]\\n\",\n+      \"Test accuracy for 'most certain 83.27916666666667% of predictions (total 49)': 0.3469387755102041\\n\",\n       \"\\n\",\n-      \"created a json file of the test accuracies at /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev1Distance/result_TEMPEST_20230111-1402.json\\n\",\n+      \"Confusion matrix (most certain 83.27916666666667%):\\n\",\n+      \"H V P M \\n\",\n+      \"[[ 0  8  0  0]\\n\",\n+      \" [ 0 17  0  0]\\n\",\n+      \" [ 0 12  0  0]\\n\",\n+      \" [ 0 12  0  0]]\\n\",\n+      \"Test accuracy for 'most certain 1.1804275927238366% of predictions (total 49)': 0.22448979591836735\\n\",\n+      \"\\n\",\n+      \"Confusion matrix (most certain 1.1804275927238366%):\\n\",\n+      \"H V P M \\n\",\n+      \"[[ 0  0  9  0]\\n\",\n+      \" [ 0  0 13  0]\\n\",\n+      \" [ 0  0 11  0]\\n\",\n+      \" [ 0  0 16  0]]\\n\",\n+      \"Test accuracy for 'most certain 0.6883523901363825% of predictions (total 49)': 0.2857142857142857\\n\",\n+      \"\\n\",\n+      \"Confusion matrix (most certain 0.6883523901363825%):\\n\",\n+      \"H V P M \\n\",\n+      \"[[ 0  0  0  6]\\n\",\n+      \" [ 0  0  0 17]\\n\",\n+      \" [ 0  0  0 12]\\n\",\n+      \" [ 0  0  0 14]]\\n\",\n+      \"Total test accuracy for 'most certain 1.0% of predictions when taking equal numbers of each predicted symbol: 0.326530612244898\\n\",\n+      \"\\n\",\n+      \"\\n\",\n+      \"\\n\",\n+      \"created a json file of the test accuracies at /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev1Distance/result_TEMPEST_20230111-1723.json\\n\",\n       \"Loading dataset 9: 9cm\\n\",\n       \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev1Distance/9cm\\n\",\n       \"Cut data in pieces with these shapes: after header:(14095, 500), before header:(5892, 500)\\n\",\n@@ -1538,79 +2456,181 @@\n       \"Non-trainable params: 462\\n\",\n       \"_________________________________________________________________\\n\",\n       \"Epoch 1/4\\n\",\n-      \"2811/2811 [==============================] - 27s 9ms/step - loss: 1.3911 - accuracy: 0.2515 - val_loss: 1.3864 - val_accuracy: 0.2531\\n\",\n+      \"2811/2811 [==============================] - 28s 10ms/step - loss: 1.3888 - accuracy: 0.2668 - val_loss: 1.3824 - val_accuracy: 0.2732\\n\",\n       \"Epoch 2/4\\n\",\n-      \"2811/2811 [==============================] - 26s 9ms/step - loss: 1.3864 - accuracy: 0.2519 - val_loss: 1.3866 - val_accuracy: 0.2528\\n\",\n+      \"2811/2811 [==============================] - 26s 9ms/step - loss: 1.3819 - accuracy: 0.2755 - val_loss: 1.3821 - val_accuracy: 0.2721\\n\",\n       \"Epoch 3/4\\n\",\n-      \"2811/2811 [==============================] - 26s 9ms/step - loss: 1.3864 - accuracy: 0.2515 - val_loss: 1.3863 - val_accuracy: 0.2529\\n\",\n+      \"2811/2811 [==============================] - 26s 9ms/step - loss: 1.3801 - accuracy: 0.2788 - val_loss: 1.3820 - val_accuracy: 0.2738\\n\",\n       \"Epoch 4/4\\n\",\n-      \"2811/2811 [==============================] - 26s 9ms/step - loss: 1.3863 - accuracy: 0.2515 - val_loss: 1.3863 - val_accuracy: 0.2529\\n\",\n+      \"2811/2811 [==============================] - 26s 9ms/step - loss: 1.3782 - accuracy: 0.2821 - val_loss: 1.3830 - val_accuracy: 0.2679\\n\",\n       \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev1Distance/9cm\\n\",\n       \"Cut data in pieces with these shapes: after header:(14095, 500), before header:(5892, 500)\\n\",\n       \"Confusion matrix ():\\n\",\n       \"H V P M \\n\",\n-      \"[[   0 4957    0    0]\\n\",\n-      \" [   0 5101    0    0]\\n\",\n-      \" [   0 4974    0    0]\\n\",\n-      \" [   0 4955    0    0]]\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0101: 0.5031270325711713\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0011: 0.5032270976134487\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0110: 0.5040776504728073\\n\",\n-      \"Test accuracy: 0.25521589032871367\\n\",\n+      \"[[3109 1221    2  625]\\n\",\n+      \" [2734 1458    2  907]\\n\",\n+      \" [2659 1452    3  860]\\n\",\n+      \" [2644 1458    6  847]]\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0101: 0.5224896182518637\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0011: 0.512232951418422\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0110: 0.5073297643468254\\n\",\n+      \"Test accuracy: 0.2710261670085556\\n\",\n       \"\\n\",\n-      \"Test accuracy for 'most certain 1.0% of predictions (total 199)': 0.24623115577889448\\n\",\n+      \"Test accuracy for 'most certain 1.0% of predictions (total 199)': 0.2914572864321608\\n\",\n       \"\\n\",\n       \"Confusion matrix (most certain 1.0%):\\n\",\n       \"H V P M \\n\",\n-      \"[[ 0 43  0  0]\\n\",\n-      \" [ 0 49  0  0]\\n\",\n-      \" [ 0 57  0  0]\\n\",\n-      \" [ 0 50  0  0]]\\n\",\n+      \"[[ 0  0  0 30]\\n\",\n+      \" [ 0  1  0 64]\\n\",\n+      \" [ 0  2  0 42]\\n\",\n+      \" [ 0  2  1 57]]\\n\",\n+      \"Test accuracy for 'most certain 0.4482998385070877% of predictions (total 49)': 0.1836734693877551\\n\",\n+      \"\\n\",\n+      \"Confusion matrix (most certain 0.4482998385070877%):\\n\",\n+      \"H V P M \\n\",\n+      \"[[ 9  0  0  0]\\n\",\n+      \" [15  0  0  0]\\n\",\n+      \" [13  0  0  0]\\n\",\n+      \" [12  0  0  0]]\\n\",\n+      \"Test accuracy for 'most certain 0.8940329218106996% of predictions (total 49)': 0.22448979591836735\\n\",\n+      \"\\n\",\n+      \"Confusion matrix (most certain 0.8940329218106996%):\\n\",\n+      \"H V P M \\n\",\n+      \"[[ 0 10  0  0]\\n\",\n+      \" [ 0 11  0  0]\\n\",\n+      \" [ 0 13  0  0]\\n\",\n+      \" [ 0 15  0  0]]\\n\",\n+      \"Test accuracy for 'most certain 384.36538461538464% of predictions (total 13)': 0.23076923076923078\\n\",\n+      \"\\n\",\n+      \"Confusion matrix (most certain 384.36538461538464%):\\n\",\n+      \"H V P M \\n\",\n+      \"[[0 0 2 0]\\n\",\n+      \" [0 0 2 0]\\n\",\n+      \" [0 0 3 0]\\n\",\n+      \" [0 0 6 0]]\\n\",\n+      \"Test accuracy for 'most certain 1.5426829268292683% of predictions (total 49)': 0.24489795918367346\\n\",\n+      \"\\n\",\n+      \"Confusion matrix (most certain 1.5426829268292683%):\\n\",\n+      \"H V P M \\n\",\n+      \"[[ 0  0  0  4]\\n\",\n+      \" [ 0  0  0 20]\\n\",\n+      \" [ 0  0  0 13]\\n\",\n+      \" [ 0  0  0 12]]\\n\",\n+      \"Total test accuracy for 'most certain 1.0% of predictions when taking equal numbers of each predicted symbol: 0.2209576138147567\\n\",\n+      \"\\n\",\n       \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev1Distance/9cm\\n\",\n       \"Cut data in pieces with these shapes: after header:(14095, 500), before header:(5892, 500)\\n\",\n       \"Confusion matrix ():\\n\",\n       \"H V P M \\n\",\n-      \"[[   1 4952    4    0]\\n\",\n-      \" [   0 5095    6    0]\\n\",\n-      \" [   0 4970    4    0]\\n\",\n-      \" [   0 4952    3    0]]\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0101: 0.5031270325711713\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0011: 0.5030770000500325\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0110: 0.5041276829939461\\n\",\n-      \"Test accuracy: 0.25516585780757495\\n\",\n+      \"[[3226 1095    2  634]\\n\",\n+      \" [2844 1324    1  932]\\n\",\n+      \" [2676 1339    5  954]\\n\",\n+      \" [2742 1324    1  888]]\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0101: 0.5191874718567069\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0011: 0.5171861710111573\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0110: 0.5082803822484615\\n\",\n+      \"Test accuracy: 0.27232701255816283\\n\",\n       \"\\n\",\n-      \"Test accuracy for 'most certain 1.0% of predictions (total 199)': 0.2864321608040201\\n\",\n+      \"Test accuracy for 'most certain 1.0% of predictions (total 199)': 0.3015075376884422\\n\",\n       \"\\n\",\n       \"Confusion matrix (most certain 1.0%):\\n\",\n       \"H V P M \\n\",\n-      \"[[ 1 41  4  0]\\n\",\n-      \" [ 0 52  6  0]\\n\",\n-      \" [ 0 46  4  0]\\n\",\n-      \" [ 0 42  3  0]]\\n\",\n+      \"[[ 0  0  0 32]\\n\",\n+      \" [ 0  0  0 50]\\n\",\n+      \" [ 0  0  0 57]\\n\",\n+      \" [ 0  0  0 60]]\\n\",\n+      \"Test accuracy for 'most certain 0.434953864902507% of predictions (total 49)': 0.1836734693877551\\n\",\n+      \"\\n\",\n+      \"Confusion matrix (most certain 0.434953864902507%):\\n\",\n+      \"H V P M \\n\",\n+      \"[[ 9  0  0  0]\\n\",\n+      \" [14  0  0  0]\\n\",\n+      \" [11  0  0  0]\\n\",\n+      \" [15  0  0  0]]\\n\",\n+      \"Test accuracy for 'most certain 0.9832251082251083% of predictions (total 49)': 0.24489795918367346\\n\",\n+      \"\\n\",\n+      \"Confusion matrix (most certain 0.9832251082251083%):\\n\",\n+      \"H V P M \\n\",\n+      \"[[ 0 12  0  0]\\n\",\n+      \" [ 0 12  0  0]\\n\",\n+      \" [ 0 14  0  0]\\n\",\n+      \" [ 0 11  0  0]]\\n\",\n+      \"Test accuracy for 'most certain 555.1944444444445% of predictions (total 9)': 0.5555555555555556\\n\",\n+      \"\\n\",\n+      \"Confusion matrix (most certain 555.1944444444445%):\\n\",\n+      \"H V P M \\n\",\n+      \"[[0 0 2 0]\\n\",\n+      \" [0 0 1 0]\\n\",\n+      \" [0 0 5 0]\\n\",\n+      \" [0 0 1 0]]\\n\",\n+      \"Test accuracy for 'most certain 1.4661825117370892% of predictions (total 49)': 0.30612244897959184\\n\",\n+      \"\\n\",\n+      \"Confusion matrix (most certain 1.4661825117370892%):\\n\",\n+      \"H V P M \\n\",\n+      \"[[ 0  0  0  4]\\n\",\n+      \" [ 0  0  0 18]\\n\",\n+      \" [ 0  0  0 12]\\n\",\n+      \" [ 0  0  0 15]]\\n\",\n+      \"Total test accuracy for 'most certain 1.0% of predictions when taking equal numbers of each predicted symbol: 0.32256235827664403\\n\",\n+      \"\\n\",\n       \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev1Distance/9cm\\n\",\n       \"Cut data in pieces with these shapes: after header:(14095, 500), before header:(5892, 500)\\n\",\n       \"Confusion matrix ():\\n\",\n       \"H V P M \\n\",\n-      \"[[   0 4957    0    0]\\n\",\n-      \" [   0 5101    0    0]\\n\",\n-      \" [   0 4974    0    0]\\n\",\n-      \" [   0 4955    0    0]]\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0101: 0.5031270325711713\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0011: 0.5032270976134487\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0110: 0.5040776504728073\\n\",\n-      \"Test accuracy: 0.25521589032871367\\n\",\n+      \"[[3148 1086    0  723]\\n\",\n+      \" [2676 1307    0 1118]\\n\",\n+      \" [2674 1177    2 1121]\\n\",\n+      \" [2641 1214    0 1100]]\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0101: 0.5284935207885125\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0011: 0.5223395206884475\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0110: 0.5052283984589984\\n\",\n+      \"Test accuracy: 0.2780307199679792\\n\",\n       \"\\n\",\n-      \"Test accuracy for 'most certain 1.0% of predictions (total 199)': 0.24623115577889448\\n\",\n+      \"Test accuracy for 'most certain 1.0% of predictions (total 199)': 0.27638190954773867\\n\",\n       \"\\n\",\n       \"Confusion matrix (most certain 1.0%):\\n\",\n       \"H V P M \\n\",\n-      \"[[ 0 43  0  0]\\n\",\n-      \" [ 0 49  0  0]\\n\",\n-      \" [ 0 58  0  0]\\n\",\n-      \" [ 0 49  0  0]]\\n\",\n+      \"[[ 0  0  0 25]\\n\",\n+      \" [ 0  0  0 69]\\n\",\n+      \" [ 0  0  0 50]\\n\",\n+      \" [ 0  0  0 55]]\\n\",\n+      \"Test accuracy for 'most certain 0.4485815602836879% of predictions (total 49)': 0.20408163265306123\\n\",\n+      \"\\n\",\n+      \"Confusion matrix (most certain 0.4485815602836879%):\\n\",\n+      \"H V P M \\n\",\n+      \"[[10  0  0  0]\\n\",\n+      \" [ 8  0  0  0]\\n\",\n+      \" [17  0  0  0]\\n\",\n+      \" [14  0  0  0]]\\n\",\n+      \"Test accuracy for 'most certain 1.0444711538461537% of predictions (total 49)': 0.2653061224489796\\n\",\n+      \"\\n\",\n+      \"Confusion matrix (most certain 1.0444711538461537%):\\n\",\n+      \"H V P M \\n\",\n+      \"[[ 0 14  0  0]\\n\",\n+      \" [ 0 13  0  0]\\n\",\n+      \" [ 0 10  0  0]\\n\",\n+      \" [ 0 12  0  0]]\\n\",\n+      \"Test accuracy for 'most certain 2498.375% of predictions (total 2)': 1.0\\n\",\n+      \"\\n\",\n+      \"Confusion matrix (most certain 2498.375%):\\n\",\n+      \"H V P M \\n\",\n+      \"[[0 0 0 0]\\n\",\n+      \" [0 0 0 0]\\n\",\n+      \" [0 0 2 0]\\n\",\n+      \" [0 0 0 0]]\\n\",\n+      \"Test accuracy for 'most certain 1.2301206302314132% of predictions (total 49)': 0.32653061224489793\\n\",\n+      \"\\n\",\n+      \"Confusion matrix (most certain 1.2301206302314132%):\\n\",\n+      \"H V P M \\n\",\n+      \"[[ 0  0  0  6]\\n\",\n+      \" [ 0  0  0 10]\\n\",\n+      \" [ 0  0  0 17]\\n\",\n+      \" [ 0  0  0 16]]\\n\",\n+      \"Total test accuracy for 'most certain 1.0% of predictions when taking equal numbers of each predicted symbol: 0.4489795918367347\\n\",\n       \"\\n\",\n       \"\\n\",\n-      \"created a json file of the test accuracies at /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev1Distance/result_TEMPEST_20230111-1402.json\\n\",\n+      \"\\n\",\n+      \"created a json file of the test accuracies at /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev1Distance/result_TEMPEST_20230111-1723.json\\n\",\n       \"Loading dataset 10: 10cm\\n\",\n       \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev1Distance/10cm\\n\",\n       \"Cut data in pieces with these shapes: after header:(14095, 500), before header:(5892, 500)\\n\",\n@@ -1680,13 +2700,13 @@\n       \"Non-trainable params: 462\\n\",\n       \"_________________________________________________________________\\n\",\n       \"Epoch 1/4\\n\",\n-      \"2811/2811 [==============================] - 27s 9ms/step - loss: 1.3913 - accuracy: 0.2512 - val_loss: 1.3863 - val_accuracy: 0.2530\\n\",\n+      \"2811/2811 [==============================] - 28s 10ms/step - loss: 1.3914 - accuracy: 0.2521 - val_loss: 1.3863 - val_accuracy: 0.2531\\n\",\n       \"Epoch 2/4\\n\",\n-      \"2811/2811 [==============================] - 26s 9ms/step - loss: 1.3864 - accuracy: 0.2513 - val_loss: 1.3863 - val_accuracy: 0.2529\\n\",\n+      \"2811/2811 [==============================] - 26s 9ms/step - loss: 1.3864 - accuracy: 0.2518 - val_loss: 1.3863 - val_accuracy: 0.2529\\n\",\n       \"Epoch 3/4\\n\",\n-      \"2811/2811 [==============================] - 26s 9ms/step - loss: 1.3864 - accuracy: 0.2517 - val_loss: 1.3863 - val_accuracy: 0.2529\\n\",\n+      \"2811/2811 [==============================] - 26s 9ms/step - loss: 1.3865 - accuracy: 0.2515 - val_loss: 1.3863 - val_accuracy: 0.2529\\n\",\n       \"Epoch 4/4\\n\",\n-      \"2811/2811 [==============================] - 26s 9ms/step - loss: 1.3863 - accuracy: 0.2516 - val_loss: 1.3863 - val_accuracy: 0.2529\\n\",\n+      \"2811/2811 [==============================] - 26s 9ms/step - loss: 1.3864 - accuracy: 0.2517 - val_loss: 1.3863 - val_accuracy: 0.2529\\n\",\n       \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev1Distance/10cm\\n\",\n       \"Cut data in pieces with these shapes: after header:(14095, 500), before header:(5892, 500)\\n\",\n       \"Confusion matrix ():\\n\",\n@@ -1708,6 +2728,54 @@\n       \" [ 0 47  0  0]\\n\",\n       \" [ 0 58  0  0]\\n\",\n       \" [ 0 49  0  0]]\\n\",\n+      \"Test accuracy for 'most certain 100.0% of predictions (total 0)': nan\\n\",\n+      \"\\n\",\n+      \"Confusion matrix (most certain 100.0%):\\n\",\n+      \"H V P M \\n\",\n+      \"[[0 0 0 0]\\n\",\n+      \" [0 0 0 0]\\n\",\n+      \" [0 0 0 0]\\n\",\n+      \" [0 0 0 0]]\\n\",\n+      \"Test accuracy for 'most certain 0.25% of predictions (total 49)': 0.24489795918367346\\n\",\n+      \"\\n\",\n+      \"Confusion matrix (most certain 0.25%):\\n\",\n+      \"H V P M \\n\",\n+      \"[[ 0 10  0  0]\\n\",\n+      \" [ 0 12  0  0]\\n\",\n+      \" [ 0 15  0  0]\\n\",\n+      \" [ 0 12  0  0]]\\n\",\n+      \"Test accuracy for 'most certain 100.0% of predictions (total 0)': nan\\n\",\n+      \"\\n\",\n+      \"Confusion matrix (most certain 100.0%):\\n\",\n+      \"H V P M \\n\",\n+      \"[[0 0 0 0]\\n\",\n+      \" [0 0 0 0]\\n\",\n+      \" [0 0 0 0]\\n\",\n+      \" [0 0 0 0]]\\n\",\n+      \"Test accuracy for 'most certain 100.0% of predictions (total 0)': nan\\n\",\n+      \"\\n\",\n+      \"Confusion matrix (most certain 100.0%):\\n\",\n+      \"H V P M \\n\",\n+      \"[[0 0 0 0]\\n\",\n+      \" [0 0 0 0]\\n\",\n+      \" [0 0 0 0]\\n\",\n+      \" [0 0 0 0]]\\n\",\n+      \"Total test accuracy for 'most certain 1.0% of predictions when taking equal numbers of each predicted symbol: nan\\n\",\n+      \"\\n\"\n+     ]\n+    },\n+    {\n+     \"name\": \"stderr\",\n+     \"output_type\": \"stream\",\n+     \"text\": [\n+      \"/home/a/A.Baliuka/emissionsecurity/paper/machine_learning.py:392: RuntimeWarning: invalid value encountered in long_scalars\\n\",\n+      \"  test_accuracy = correct_test_samples / total_test_samples\\n\"\n+     ]\n+    },\n+    {\n+     \"name\": \"stdout\",\n+     \"output_type\": \"stream\",\n+     \"text\": [\n       \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev1Distance/10cm\\n\",\n       \"Cut data in pieces with these shapes: after header:(14095, 500), before header:(5892, 500)\\n\",\n       \"Confusion matrix ():\\n\",\n@@ -1729,6 +2797,40 @@\n       \" [ 0 47  0  0]\\n\",\n       \" [ 0 58  0  0]\\n\",\n       \" [ 0 49  0  0]]\\n\",\n+      \"Test accuracy for 'most certain 100.0% of predictions (total 0)': nan\\n\",\n+      \"\\n\",\n+      \"Confusion matrix (most certain 100.0%):\\n\",\n+      \"H V P M \\n\",\n+      \"[[0 0 0 0]\\n\",\n+      \" [0 0 0 0]\\n\",\n+      \" [0 0 0 0]\\n\",\n+      \" [0 0 0 0]]\\n\",\n+      \"Test accuracy for 'most certain 0.25% of predictions (total 49)': 0.24489795918367346\\n\",\n+      \"\\n\",\n+      \"Confusion matrix (most certain 0.25%):\\n\",\n+      \"H V P M \\n\",\n+      \"[[ 0 10  0  0]\\n\",\n+      \" [ 0 12  0  0]\\n\",\n+      \" [ 0 15  0  0]\\n\",\n+      \" [ 0 12  0  0]]\\n\",\n+      \"Test accuracy for 'most certain 100.0% of predictions (total 0)': nan\\n\",\n+      \"\\n\",\n+      \"Confusion matrix (most certain 100.0%):\\n\",\n+      \"H V P M \\n\",\n+      \"[[0 0 0 0]\\n\",\n+      \" [0 0 0 0]\\n\",\n+      \" [0 0 0 0]\\n\",\n+      \" [0 0 0 0]]\\n\",\n+      \"Test accuracy for 'most certain 100.0% of predictions (total 0)': nan\\n\",\n+      \"\\n\",\n+      \"Confusion matrix (most certain 100.0%):\\n\",\n+      \"H V P M \\n\",\n+      \"[[0 0 0 0]\\n\",\n+      \" [0 0 0 0]\\n\",\n+      \" [0 0 0 0]\\n\",\n+      \" [0 0 0 0]]\\n\",\n+      \"Total test accuracy for 'most certain 1.0% of predictions when taking equal numbers of each predicted symbol: nan\\n\",\n+      \"\\n\",\n       \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev1Distance/10cm\\n\",\n       \"Cut data in pieces with these shapes: after header:(14095, 500), before header:(5892, 500)\\n\",\n       \"Confusion matrix ():\\n\",\n@@ -1750,9 +2852,43 @@\n       \" [ 0 47  0  0]\\n\",\n       \" [ 0 58  0  0]\\n\",\n       \" [ 0 49  0  0]]\\n\",\n+      \"Test accuracy for 'most certain 100.0% of predictions (total 0)': nan\\n\",\n+      \"\\n\",\n+      \"Confusion matrix (most certain 100.0%):\\n\",\n+      \"H V P M \\n\",\n+      \"[[0 0 0 0]\\n\",\n+      \" [0 0 0 0]\\n\",\n+      \" [0 0 0 0]\\n\",\n+      \" [0 0 0 0]]\\n\",\n+      \"Test accuracy for 'most certain 0.25% of predictions (total 49)': 0.24489795918367346\\n\",\n+      \"\\n\",\n+      \"Confusion matrix (most certain 0.25%):\\n\",\n+      \"H V P M \\n\",\n+      \"[[ 0 10  0  0]\\n\",\n+      \" [ 0 12  0  0]\\n\",\n+      \" [ 0 15  0  0]\\n\",\n+      \" [ 0 12  0  0]]\\n\",\n+      \"Test accuracy for 'most certain 100.0% of predictions (total 0)': nan\\n\",\n+      \"\\n\",\n+      \"Confusion matrix (most certain 100.0%):\\n\",\n+      \"H V P M \\n\",\n+      \"[[0 0 0 0]\\n\",\n+      \" [0 0 0 0]\\n\",\n+      \" [0 0 0 0]\\n\",\n+      \" [0 0 0 0]]\\n\",\n+      \"Test accuracy for 'most certain 100.0% of predictions (total 0)': nan\\n\",\n+      \"\\n\",\n+      \"Confusion matrix (most certain 100.0%):\\n\",\n+      \"H V P M \\n\",\n+      \"[[0 0 0 0]\\n\",\n+      \" [0 0 0 0]\\n\",\n+      \" [0 0 0 0]\\n\",\n+      \" [0 0 0 0]]\\n\",\n+      \"Total test accuracy for 'most certain 1.0% of predictions when taking equal numbers of each predicted symbol: nan\\n\",\n       \"\\n\",\n       \"\\n\",\n-      \"created a json file of the test accuracies at /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev1Distance/result_TEMPEST_20230111-1402.json\\n\",\n+      \"\\n\",\n+      \"created a json file of the test accuracies at /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev1Distance/result_TEMPEST_20230111-1723.json\\n\",\n       \"Loading dataset 11: 11cm\\n\",\n       \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev1Distance/11cm\\n\",\n       \"Cut data in pieces with these shapes: after header:(14095, 500), before header:(5892, 500)\\n\",\n@@ -1822,13 +2958,13 @@\n       \"Non-trainable params: 462\\n\",\n       \"_________________________________________________________________\\n\",\n       \"Epoch 1/4\\n\",\n-      \"2811/2811 [==============================] - 28s 9ms/step - loss: 1.3908 - accuracy: 0.2516 - val_loss: 1.3863 - val_accuracy: 0.2496\\n\",\n+      \"2811/2811 [==============================] - 28s 10ms/step - loss: 1.3908 - accuracy: 0.2508 - val_loss: 1.3863 - val_accuracy: 0.2502\\n\",\n       \"Epoch 2/4\\n\",\n-      \"2811/2811 [==============================] - 26s 9ms/step - loss: 1.3865 - accuracy: 0.2516 - val_loss: 1.3863 - val_accuracy: 0.2501\\n\",\n+      \"2811/2811 [==============================] - 26s 9ms/step - loss: 1.3864 - accuracy: 0.2517 - val_loss: 1.3863 - val_accuracy: 0.2501\\n\",\n       \"Epoch 3/4\\n\",\n-      \"2811/2811 [==============================] - 26s 9ms/step - loss: 1.3864 - accuracy: 0.2514 - val_loss: 1.3863 - val_accuracy: 0.2501\\n\",\n+      \"2811/2811 [==============================] - 26s 9ms/step - loss: 1.3865 - accuracy: 0.2514 - val_loss: 1.3863 - val_accuracy: 0.2501\\n\",\n       \"Epoch 4/4\\n\",\n-      \"2811/2811 [==============================] - 26s 9ms/step - loss: 1.3864 - accuracy: 0.2516 - val_loss: 1.3863 - val_accuracy: 0.2501\\n\",\n+      \"2811/2811 [==============================] - 26s 9ms/step - loss: 1.3863 - accuracy: 0.2515 - val_loss: 1.3863 - val_accuracy: 0.2501\\n\",\n       \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev1Distance/11cm\\n\",\n       \"Cut data in pieces with these shapes: after header:(14095, 500), before header:(5892, 500)\\n\",\n       \"Confusion matrix ():\\n\",\n@@ -1850,6 +2986,54 @@\n       \" [47  0  0  0]\\n\",\n       \" [58  0  0  0]\\n\",\n       \" [49  0  0  0]]\\n\",\n+      \"Test accuracy for 'most certain 0.25% of predictions (total 49)': 0.20408163265306123\\n\",\n+      \"\\n\",\n+      \"Confusion matrix (most certain 0.25%):\\n\",\n+      \"H V P M \\n\",\n+      \"[[10  0  0  0]\\n\",\n+      \" [12  0  0  0]\\n\",\n+      \" [15  0  0  0]\\n\",\n+      \" [12  0  0  0]]\\n\",\n+      \"Test accuracy for 'most certain 100.0% of predictions (total 0)': nan\\n\",\n+      \"\\n\",\n+      \"Confusion matrix (most certain 100.0%):\\n\",\n+      \"H V P M \\n\",\n+      \"[[0 0 0 0]\\n\",\n+      \" [0 0 0 0]\\n\",\n+      \" [0 0 0 0]\\n\",\n+      \" [0 0 0 0]]\\n\",\n+      \"Test accuracy for 'most certain 100.0% of predictions (total 0)': nan\\n\",\n+      \"\\n\",\n+      \"Confusion matrix (most certain 100.0%):\\n\",\n+      \"H V P M \\n\",\n+      \"[[0 0 0 0]\\n\",\n+      \" [0 0 0 0]\\n\",\n+      \" [0 0 0 0]\\n\",\n+      \" [0 0 0 0]]\\n\",\n+      \"Test accuracy for 'most certain 100.0% of predictions (total 0)': nan\\n\",\n+      \"\\n\",\n+      \"Confusion matrix (most certain 100.0%):\\n\",\n+      \"H V P M \\n\",\n+      \"[[0 0 0 0]\\n\",\n+      \" [0 0 0 0]\\n\",\n+      \" [0 0 0 0]\\n\",\n+      \" [0 0 0 0]]\\n\",\n+      \"Total test accuracy for 'most certain 1.0% of predictions when taking equal numbers of each predicted symbol: nan\\n\",\n+      \"\\n\"\n+     ]\n+    },\n+    {\n+     \"name\": \"stderr\",\n+     \"output_type\": \"stream\",\n+     \"text\": [\n+      \"/home/a/A.Baliuka/emissionsecurity/paper/machine_learning.py:392: RuntimeWarning: invalid value encountered in long_scalars\\n\",\n+      \"  test_accuracy = correct_test_samples / total_test_samples\\n\"\n+     ]\n+    },\n+    {\n+     \"name\": \"stdout\",\n+     \"output_type\": \"stream\",\n+     \"text\": [\n       \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev1Distance/11cm\\n\",\n       \"Cut data in pieces with these shapes: after header:(14095, 500), before header:(5892, 500)\\n\",\n       \"Confusion matrix ():\\n\",\n@@ -1863,14 +3047,48 @@\n       \"Estimated bit prediction accuracy given mapping 0110: 0.49592234952719266\\n\",\n       \"Test accuracy: 0.24801120728473508\\n\",\n       \"\\n\",\n-      \"Test accuracy for 'most certain 1.0% of predictions (total 199)': 0.22613065326633167\\n\",\n+      \"Test accuracy for 'most certain 1.0% of predictions (total 199)': 0.22110552763819097\\n\",\n       \"\\n\",\n       \"Confusion matrix (most certain 1.0%):\\n\",\n       \"H V P M \\n\",\n-      \"[[45  0  0  0]\\n\",\n-      \" [47  0  0  0]\\n\",\n-      \" [58  0  0  0]\\n\",\n-      \" [49  0  0  0]]\\n\",\n+      \"[[44  0  0  0]\\n\",\n+      \" [48  0  0  0]\\n\",\n+      \" [57  0  0  0]\\n\",\n+      \" [50  0  0  0]]\\n\",\n+      \"Test accuracy for 'most certain 0.25% of predictions (total 49)': 0.24489795918367346\\n\",\n+      \"\\n\",\n+      \"Confusion matrix (most certain 0.25%):\\n\",\n+      \"H V P M \\n\",\n+      \"[[12  0  0  0]\\n\",\n+      \" [11  0  0  0]\\n\",\n+      \" [15  0  0  0]\\n\",\n+      \" [11  0  0  0]]\\n\",\n+      \"Test accuracy for 'most certain 100.0% of predictions (total 0)': nan\\n\",\n+      \"\\n\",\n+      \"Confusion matrix (most certain 100.0%):\\n\",\n+      \"H V P M \\n\",\n+      \"[[0 0 0 0]\\n\",\n+      \" [0 0 0 0]\\n\",\n+      \" [0 0 0 0]\\n\",\n+      \" [0 0 0 0]]\\n\",\n+      \"Test accuracy for 'most certain 100.0% of predictions (total 0)': nan\\n\",\n+      \"\\n\",\n+      \"Confusion matrix (most certain 100.0%):\\n\",\n+      \"H V P M \\n\",\n+      \"[[0 0 0 0]\\n\",\n+      \" [0 0 0 0]\\n\",\n+      \" [0 0 0 0]\\n\",\n+      \" [0 0 0 0]]\\n\",\n+      \"Test accuracy for 'most certain 100.0% of predictions (total 0)': nan\\n\",\n+      \"\\n\",\n+      \"Confusion matrix (most certain 100.0%):\\n\",\n+      \"H V P M \\n\",\n+      \"[[0 0 0 0]\\n\",\n+      \" [0 0 0 0]\\n\",\n+      \" [0 0 0 0]\\n\",\n+      \" [0 0 0 0]]\\n\",\n+      \"Total test accuracy for 'most certain 1.0% of predictions when taking equal numbers of each predicted symbol: nan\\n\",\n+      \"\\n\",\n       \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev1Distance/11cm\\n\",\n       \"Cut data in pieces with these shapes: after header:(14095, 500), before header:(5892, 500)\\n\",\n       \"Confusion matrix ():\\n\",\n@@ -1892,9 +3110,43 @@\n       \" [47  0  0  0]\\n\",\n       \" [58  0  0  0]\\n\",\n       \" [49  0  0  0]]\\n\",\n+      \"Test accuracy for 'most certain 0.25% of predictions (total 49)': 0.20408163265306123\\n\",\n       \"\\n\",\n+      \"Confusion matrix (most certain 0.25%):\\n\",\n+      \"H V P M \\n\",\n+      \"[[10  0  0  0]\\n\",\n+      \" [12  0  0  0]\\n\",\n+      \" [15  0  0  0]\\n\",\n+      \" [12  0  0  0]]\\n\",\n+      \"Test accuracy for 'most certain 100.0% of predictions (total 0)': nan\\n\",\n       \"\\n\",\n-      \"created a json file of the test accuracies at /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev1Distance/result_TEMPEST_20230111-1402.json\\n\",\n+      \"Confusion matrix (most certain 100.0%):\\n\",\n+      \"H V P M \\n\",\n+      \"[[0 0 0 0]\\n\",\n+      \" [0 0 0 0]\\n\",\n+      \" [0 0 0 0]\\n\",\n+      \" [0 0 0 0]]\\n\",\n+      \"Test accuracy for 'most certain 100.0% of predictions (total 0)': nan\\n\",\n+      \"\\n\",\n+      \"Confusion matrix (most certain 100.0%):\\n\",\n+      \"H V P M \\n\",\n+      \"[[0 0 0 0]\\n\",\n+      \" [0 0 0 0]\\n\",\n+      \" [0 0 0 0]\\n\",\n+      \" [0 0 0 0]]\\n\",\n+      \"Test accuracy for 'most certain 100.0% of predictions (total 0)': nan\\n\",\n+      \"\\n\",\n+      \"Confusion matrix (most certain 100.0%):\\n\",\n+      \"H V P M \\n\",\n+      \"[[0 0 0 0]\\n\",\n+      \" [0 0 0 0]\\n\",\n+      \" [0 0 0 0]\\n\",\n+      \" [0 0 0 0]]\\n\",\n+      \"Total test accuracy for 'most certain 1.0% of predictions when taking equal numbers of each predicted symbol: nan\\n\",\n+      \"\\n\",\n+      \"\\n\",\n+      \"\\n\",\n+      \"created a json file of the test accuracies at /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev1Distance/result_TEMPEST_20230111-1723.json\\n\",\n       \"Loading dataset 12: 12cm\\n\",\n       \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev1Distance/12cm\\n\",\n       \"Cut data in pieces with these shapes: after header:(14095, 500), before header:(5892, 500)\\n\",\n@@ -1964,81 +3216,11 @@\n       \"Non-trainable params: 462\\n\",\n       \"_________________________________________________________________\\n\",\n       \"Epoch 1/4\\n\",\n-      \"2811/2811 [==============================] - 28s 9ms/step - loss: 1.3909 - accuracy: 0.2511 - val_loss: 1.3863 - val_accuracy: 0.2529\\n\",\n+      \"2811/2811 [==============================] - 28s 10ms/step - loss: 1.3908 - accuracy: 0.2518 - val_loss: 1.3863 - val_accuracy: 0.2528\\n\",\n       \"Epoch 2/4\\n\",\n       \"2811/2811 [==============================] - 26s 9ms/step - loss: 1.3864 - accuracy: 0.2518 - val_loss: 1.3863 - val_accuracy: 0.2529\\n\",\n       \"Epoch 3/4\\n\",\n-      \"2811/2811 [==============================] - 26s 9ms/step - loss: 1.3865 - accuracy: 0.2518 - val_loss: 1.3863 - val_accuracy: 0.2529\\n\",\n-      \"Epoch 4/4\\n\",\n-      \"2811/2811 [==============================] - 26s 9ms/step - loss: 1.3864 - accuracy: 0.2517 - val_loss: 1.3863 - val_accuracy: 0.2529\\n\",\n-      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev1Distance/12cm\\n\",\n-      \"Cut data in pieces with these shapes: after header:(14095, 500), before header:(5892, 500)\\n\",\n-      \"Confusion matrix ():\\n\",\n-      \"H V P M \\n\",\n-      \"[[  86 4860   11    0]\\n\",\n-      \" [ 100 4985   16    0]\\n\",\n-      \" [  69 4890   13    2]\\n\",\n-      \" [  82 4862   11    0]]\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0101: 0.501626056937009\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0011: 0.50317706509231\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0110: 0.5039275529093911\\n\",\n-      \"Test accuracy: 0.2543653374693551\\n\",\n-      \"\\n\",\n-      \"Test accuracy for 'most certain 1.0% of predictions (total 199)': 0.31155778894472363\\n\",\n-      \"\\n\",\n-      \"Confusion matrix (most certain 1.0%):\\n\",\n-      \"H V P M \\n\",\n-      \"[[ 2 41  6  0]\\n\",\n-      \" [ 4 53  4  0]\\n\",\n-      \" [ 2 38  7  0]\\n\",\n-      \" [ 2 34  6  0]]\\n\",\n-      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev1Distance/12cm\\n\",\n-      \"Cut data in pieces with these shapes: after header:(14095, 500), before header:(5892, 500)\\n\",\n-      \"Confusion matrix ():\\n\",\n-      \"H V P M \\n\",\n-      \"[[   0 4957    0    0]\\n\",\n-      \" [   0 5101    0    0]\\n\",\n-      \" [   0 4974    0    0]\\n\",\n-      \" [   0 4955    0    0]]\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0101: 0.5031270325711713\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0011: 0.5032270976134487\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0110: 0.5040776504728073\\n\",\n-      \"Test accuracy: 0.25521589032871367\\n\",\n-      \"\\n\",\n-      \"Test accuracy for 'most certain 1.0% of predictions (total 199)': 0.23618090452261306\\n\",\n-      \"\\n\",\n-      \"Confusion matrix (most certain 1.0%):\\n\",\n-      \"H V P M \\n\",\n-      \"[[ 0 45  0  0]\\n\",\n-      \" [ 0 47  0  0]\\n\",\n-      \" [ 0 58  0  0]\\n\",\n-      \" [ 0 49  0  0]]\\n\",\n-      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev1Distance/12cm\\n\",\n-      \"Cut data in pieces with these shapes: after header:(14095, 500), before header:(5892, 500)\\n\",\n-      \"Confusion matrix ():\\n\",\n-      \"H V P M \\n\",\n-      \"[[  74 4858   25    0]\\n\",\n-      \" [  87 4987   26    1]\\n\",\n-      \" [  88 4868   14    4]\\n\",\n-      \" [ 108 4825   20    2]]\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0101: 0.5011257317256217\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0011: 0.5026267073597839\\n\",\n-      \"Estimated bit prediction accuracy given mapping 0110: 0.5042777805573623\\n\",\n-      \"Test accuracy: 0.2540151098213839\\n\",\n-      \"\\n\",\n-      \"Test accuracy for 'most certain 1.0% of predictions (total 199)': 0.23618090452261306\\n\",\n-      \"\\n\",\n-      \"Confusion matrix (most certain 1.0%):\\n\",\n-      \"H V P M \\n\",\n-      \"[[ 0 50  5  0]\\n\",\n-      \" [ 0 43  6  0]\\n\",\n-      \" [ 0 42  4  0]\\n\",\n-      \" [ 0 45  4  0]]\\n\",\n-      \"\\n\",\n-      \"\\n\",\n-      \"created a json file of the test accuracies at /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev1Distance/result_TEMPEST_20230111-1402.json\\n\",\n-      \"created a json file of the test accuracies at /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev1Distance/result_TEMPEST_20230111-1402.json\\n\",\n-      \" ------------ Done ---------------\\n\"\n+      \"2629/2811 [===========================>..] - ETA: 1s - loss: 1.3863 - accuracy: 0.2518\"\n      ]\n     }\n    ],\n@@ -2066,18 +3248,10 @@\n   },\n   {\n    \"cell_type\": \"code\",\n-   \"execution_count\": 6,\n+   \"execution_count\": null,\n    \"id\": \"6928c4c3-415c-4d79-bbdc-75b289eb3c57\",\n    \"metadata\": {},\n-   \"outputs\": [\n-    {\n-     \"name\": \"stdout\",\n-     \"output_type\": \"stream\",\n-     \"text\": [\n-      \"{'0cm': [{'test_accuracy': 0.9886926502226447, 'best_0.01_percentile': 1.0}, {'test_accuracy': 0.988642617701506, 'best_0.01_percentile': 1.0}, {'test_accuracy': 0.9903937559413619, 'best_0.01_percentile': 1.0}], '1cm': [{'test_accuracy': 0.8323910541852204, 'best_0.01_percentile': 1.0}, {'test_accuracy': 0.8395457047080602, 'best_0.01_percentile': 1.0}, {'test_accuracy': 0.8383449242007305, 'best_0.01_percentile': 1.0}], '2cm': [{'test_accuracy': 0.5544603992595187, 'best_0.01_percentile': 0.6030150753768844}, {'test_accuracy': 0.5536098464001601, 'best_0.01_percentile': 0.6180904522613065}, {'test_accuracy': 0.5503077000050033, 'best_0.01_percentile': 0.542713567839196}], '3cm': [{'test_accuracy': 0.46385150347726023, 'best_0.01_percentile': 0.9949748743718593}, {'test_accuracy': 0.4472907389803372, 'best_0.01_percentile': 0.9899497487437185}, {'test_accuracy': 0.4506429178966328, 'best_0.01_percentile': 1.0}], '4cm': [{'test_accuracy': 0.3823985590633912, 'best_0.01_percentile': 0.8743718592964824}, {'test_accuracy': 0.3888527542902887, 'best_0.01_percentile': 0.8994974874371859}, {'test_accuracy': 0.38184820133086506, 'best_0.01_percentile': 0.8743718592964824}], '5cm': [{'test_accuracy': 0.34357332265972884, 'best_0.01_percentile': 0.3768844221105528}, {'test_accuracy': 0.3460249161955271, 'best_0.01_percentile': 0.4221105527638191}, {'test_accuracy': 0.34412368039225494, 'best_0.01_percentile': 0.3768844221105528}], '6cm': [{'test_accuracy': 0.32065842797818583, 'best_0.01_percentile': 0.3316582914572864}, {'test_accuracy': 0.3194076149497173, 'best_0.01_percentile': 0.3768844221105528}, {'test_accuracy': 0.3221093710912093, 'best_0.01_percentile': 0.2613065326633166}], '7cm': [{'test_accuracy': 0.29704307800070046, 'best_0.01_percentile': 0.5829145728643216}, {'test_accuracy': 0.29864411867714014, 'best_0.01_percentile': 0.542713567839196}, {'test_accuracy': 0.29604242757792565, 'best_0.01_percentile': 0.5527638190954773}], '8cm': [{'test_accuracy': 0.280182118376945, 'best_0.01_percentile': 0.44221105527638194}, {'test_accuracy': 0.28238354930704956, 'best_0.01_percentile': 0.48743718592964824}, {'test_accuracy': 0.2748286386150998, 'best_0.01_percentile': 0.4472361809045226}], '9cm': [{'test_accuracy': 0.25521589032871367, 'best_0.01_percentile': 0.24623115577889448}, {'test_accuracy': 0.25516585780757495, 'best_0.01_percentile': 0.2864321608040201}, {'test_accuracy': 0.25521589032871367, 'best_0.01_percentile': 0.24623115577889448}], '10cm': [{'test_accuracy': 0.25521589032871367, 'best_0.01_percentile': 0.23618090452261306}, {'test_accuracy': 0.25521589032871367, 'best_0.01_percentile': 0.23618090452261306}, {'test_accuracy': 0.25521589032871367, 'best_0.01_percentile': 0.23618090452261306}], '11cm': [{'test_accuracy': 0.24801120728473508, 'best_0.01_percentile': 0.22613065326633167}, {'test_accuracy': 0.24801120728473508, 'best_0.01_percentile': 0.22613065326633167}, {'test_accuracy': 0.24801120728473508, 'best_0.01_percentile': 0.22613065326633167}], '12cm': [{'test_accuracy': 0.2543653374693551, 'best_0.01_percentile': 0.31155778894472363}, {'test_accuracy': 0.25521589032871367, 'best_0.01_percentile': 0.23618090452261306}, {'test_accuracy': 0.2540151098213839, 'best_0.01_percentile': 0.23618090452261306}]}\\n\"\n-     ]\n-    }\n-   ],\n+   \"outputs\": [],\n    \"source\": [\n     \"print(f\\\"{test_accuracy}\\\")\"\n    ]\n@@ -2092,116 +3266,10 @@\n   },\n   {\n    \"cell_type\": \"code\",\n-   \"execution_count\": 7,\n+   \"execution_count\": null,\n    \"id\": \"c93639fe-5cdf-49a4-88f3-109ce37453b5\",\n    \"metadata\": {},\n-   \"outputs\": [\n-    {\n-     \"name\": \"stdout\",\n-     \"output_type\": \"stream\",\n-     \"text\": [\n-      \"dbfa814a03855cf26ca4d94733a80f97abc83fd9\\n\",\n-      \"\\n\",\n-      \"Full git diff (only Python source files!):\\n\",\n-      \"\\n\",\n-      \"paper/machine_learning.py\\n\",\n-      \"=======================================================\\n\",\n-      \"lhs: 100644 | ade810e0766925b336ff84c4ddf1821f68bf3978\\n\",\n-      \"rhs: 100644 | 67f8099e4ed73f4926a0165f2ce1b57c72c295b9\\n\",\n-      \"---@@ -331,15 +331,22 @@ def prepare_datasets_nosplit(data, labels, batch_size=32, label_mapping=pp.trans\\n\",\n-      \" \\n\",\n-      \" \\n\",\n-      \" def test_only_most_certain(predicted_probabilities, true_labels, \\n\",\n-      \"-                           most_certain_percentile=0.01,):\\n\",\n-      \"-    # take the x% that have the least Shannon entropy.\\n\",\n-      \"-    entropies = np.sum(\\n\",\n-      \"-        -predicted_probabilities * np.log2(predicted_probabilities),\\n\",\n-      \"-        axis=1)\\n\",\n-      \"-\\n\",\n-      \"-    sorted_args = np.argsort(entropies)\\n\",\n-      \"+                           most_certain_fraction=0.01, selection_mode='max_probability'):\\n\",\n-      \"+    if selection_mode == 'entropy':\\n\",\n-      \"+        # take the x% that have the least Shannon entropy.\\n\",\n-      \"+        priorities = np.sum(\\n\",\n-      \"+            -predicted_probabilities * np.log2(predicted_probabilities),\\n\",\n-      \"+            axis=1)\\n\",\n-      \"+    elif selection_mode == 'max_probability':\\n\",\n-      \"+        # Take the x% that have the largest single probability\\n\",\n-      \"+        priorities = -np.max(predicted_probabilities, axis=1)\\n\",\n-      \"+    else:\\n\",\n-      \"+        printf(f\\\"Invalid selection mode: {selection_mode}\\\")\\n\",\n-      \"+        return\\n\",\n-      \"+    \\n\",\n-      \"+    sorted_args = np.argsort(priorities)\\n\",\n-      \" \\n\",\n-      \"-    indices_to_evaluate = sorted_args[:int(most_certain_percentile * len(sorted_args))]\\n\",\n-      \"+    indices_to_evaluate = sorted_args[:int(most_certain_fraction * len(sorted_args))]\\n\",\n-      \" \\n\",\n-      \"     test_labels = true_labels[indices_to_evaluate]\\n\",\n-      \"     predicted_labels = np.argmax(predicted_probabilities[indices_to_evaluate], axis=1)\\n\",\n-      \"@@ -351,13 +358,17 @@ def test_only_most_certain(predicted_probabilities, true_labels,\\n\",\n-      \"     # print(predicted_labels == test_labels)\\n\",\n-      \" \\n\",\n-      \"     test_accuracy = correct_test_samples / total_test_samples\\n\",\n-      \"-    print(f\\\"Test accuracy for 'most certain {100 * most_certain_percentile}% \\\"\\n\",\n-      \"+    print(f\\\"Test accuracy for 'most certain {100 * most_certain_fraction}% \\\"\\n\",\n-      \"       f\\\"of predictions (total {len(predicted_labels)})': {test_accuracy}\\\\n\\\")\\n\",\n-      \" \\n\",\n-      \"-    confusion_matrix(test_labels, predicted_labels, comment=f\\\"most certain {100 * most_certain_percentile}%\\\")\\n\",\n-      \"+    confusion_matrix(test_labels, predicted_labels, comment=f\\\"most certain {100 * most_certain_fraction}%\\\")\\n\",\n-      \"+    \\n\",\n-      \"+    return test_accuracy\\n\",\n-      \" \\n\",\n-      \" \\n\",\n-      \"-def test_model(model, test_data, test_labels, test_start, technical_details, time_shift=0, label_mapping=pp.translate_all):\\n\",\n-      \"+def test_model(model, test_data, test_labels, \\n\",\n-      \"+               test_start, technical_details, time_shift=0, label_mapping=pp.translate_all,\\n\",\n-      \"+              most_certain_fraction=None,):\\n\",\n-      \"     \\\"\\\"\\\"\\n\",\n-      \"     This method tests the TensorFlow model.\\n\",\n-      \"     \\\"\\\"\\\"\\n\",\n-      \"@@ -387,9 +398,13 @@ def test_model(model, test_data, test_labels, test_start, technical_details, tim\\n\",\n-      \"              predicted =predicted_probabilities,\\n\",\n-      \"              true=test_labels,)  # TODO delete !!!!\\n\",\n-      \"     \\n\",\n-      \"-    test_only_most_certain(predicted_probabilities, test_labels)\\n\",\n-      \"-\\n\",\n-      \"-    return test_accuracy\\n\",\n-      \"+    \\n\",\n-      \"+    if most_certain_fraction:\\n\",\n-      \"+        limited_test_accuracy = test_only_most_certain(\\n\",\n-      \"+            predicted_probabilities, test_labels, most_certain_fraction=most_certain_fraction)\\n\",\n-      \"+        return {'test_accuracy': test_accuracy, f'best_{most_certain_fraction}_percentile': limited_test_accuracy}\\n\",\n-      \"+    else:\\n\",\n-      \"+        return test_accuracy\\n\",\n-      \" \\n\",\n-      \" \\n\",\n-      \" def test_model_all_displacements(model, test_data, test_labels, test_start, technical_details, time_shift=0, step_samples=1, label_mapping=pp.translate_all):\\n\",\n-      \"@@ -428,7 +443,8 @@ def test_model_all_displacements(model, test_data, test_labels, test_start, tech\\n\",\n-      \" def confusion_matrix(true_labels, predicted_labels, comment=\\\"\\\"):\\n\",\n-      \"     mat = tf.math.confusion_matrix(\\n\",\n-      \"     true_labels,\\n\",\n-      \"-    predicted_labels,)\\n\",\n-      \"+    predicted_labels,\\n\",\n-      \"+    num_classes=4)\\n\",\n-      \"     print(f\\\"Confusion matrix ({comment}):\\\\nH V P M \\\\n{mat}\\\")\\n\",\n-      \"     \\n\",\n-      \"     return mat\\n\",\n-      \"\\n\",\n-      \"---\\n\"\n-     ]\n-    },\n-    {\n-     \"data\": {\n-      \"text/plain\": [\n-       \"[None]\"\n-      ]\n-     },\n-     \"execution_count\": 7,\n-     \"metadata\": {},\n-     \"output_type\": \"execute_result\"\n-    }\n-   ],\n+   \"outputs\": [],\n    \"source\": [\n     \"# repository git information (WARNING: THIS IS ONLY RELIABLE IF NO CHANGES WERE MADE BETWEEN RUNNING DIFFERENT NOTEBOOK CELLS!)\\n\",\n     \"print(git_sha1)\\n\",\n\n---", "paper/Visualize_single_spectrum.ipynb\n=======================================================\nlhs: 100644 | 079c0410b06a180b13e9afceb099cc729558ff6f\nrhs: 100644 | d2d23a2f25463aa39b11a7d9713a10c7b1329486\n---@@ -136,7 +136,7 @@\n   },\n   {\n    \"cell_type\": \"code\",\n-   \"execution_count\": 5,\n+   \"execution_count\": 6,\n    \"id\": \"407dc2a6-6a19-4e8c-9254-f5ffaa626157\",\n    \"metadata\": {},\n    \"outputs\": [\n@@ -154,10 +154,12 @@\n     \"\\n\",\n     \"for i, elem in enumerate(data_signal):\\n\",\n     \"    fft_signal.append(np.abs(fft(elem))**2)\\n\",\n+    \"    break  # only take the first one!\\n\",\n     \"for i, elem in enumerate(data_background):\\n\",\n     \"    fft_background.append(np.abs(fft(elem))**2)\\n\",\n+    \"    break  # only take the first one!\\n\",\n     \"\\n\",\n-    \"print(fft_background[4].shape)\\n\",\n+    \"print(fft_background[0].shape)\\n\",\n     \"\\n\",\n     \"mean_signal = np.mean(np.array(fft_signal), axis=0)\\n\",\n     \"mean_background = np.mean(np.array(fft_background), axis=0)\\n\",\n@@ -166,7 +168,7 @@\n   },\n   {\n    \"cell_type\": \"code\",\n-   \"execution_count\": 6,\n+   \"execution_count\": 7,\n    \"id\": \"65bdc787-56a0-49b6-813e-ab5ea3b6cd2c\",\n    \"metadata\": {},\n    \"outputs\": [\n@@ -181,21 +183,21 @@\n      \"name\": \"stdout\",\n      \"output_type\": \"stream\",\n      \"text\": [\n-      \"65.7053206011301 0.2999852999853\\n\",\n-      \"40.4227385170742 0.14915514915514916\\n\"\n+      \"65.70188979431987 0.2999852999853\\n\",\n+      \"50.048962839888816 0.8487008487008487\\n\"\n      ]\n     },\n     {\n      \"name\": \"stderr\",\n      \"output_type\": \"stream\",\n      \"text\": [\n-      \"/tmp/ipykernel_4170/2471338946.py:13: UserWarning: This figure was using constrained_layout, but that is incompatible with subplots_adjust and/or tight_layout; disabling constrained_layout.\\n\",\n+      \"/scratch-local/slurm-job-tmp-2916059/ipykernel_87/2471338946.py:13: UserWarning: This figure was using constrained_layout, but that is incompatible with subplots_adjust and/or tight_layout; disabling constrained_layout.\\n\",\n       \"  plt.tight_layout()\\n\"\n      ]\n     },\n     {\n      \"data\": {\n-      \"image/png\": \"\\n\",\n+      \"image/png\": \"\\n\",\n       \"text/plain\": [\n        \"<Figure size 432x288 with 2 Axes>\"\n       ]\n@@ -227,7 +229,7 @@\n   },\n   {\n    \"cell_type\": \"code\",\n-   \"execution_count\": 7,\n+   \"execution_count\": 8,\n    \"id\": \"a2771a89\",\n    \"metadata\": {},\n    \"outputs\": [\n@@ -237,7 +239,7 @@\n        \"2000002\"\n       ]\n      },\n-     \"execution_count\": 7,\n+     \"execution_count\": 8,\n      \"metadata\": {},\n      \"output_type\": \"execute_result\"\n     }\n@@ -248,17 +250,17 @@\n   },\n   {\n    \"cell_type\": \"code\",\n-   \"execution_count\": 8,\n+   \"execution_count\": 9,\n    \"id\": \"a4080765\",\n    \"metadata\": {},\n    \"outputs\": [\n     {\n      \"data\": {\n       \"text/plain\": [\n-       \"1176337.8200764395\"\n+       \"1175408.9125467725\"\n       ]\n      },\n-     \"execution_count\": 8,\n+     \"execution_count\": 9,\n      \"metadata\": {},\n      \"output_type\": \"execute_result\"\n     }\n@@ -269,7 +271,7 @@\n   },\n   {\n    \"cell_type\": \"code\",\n-   \"execution_count\": 9,\n+   \"execution_count\": 10,\n    \"id\": \"46132d4f\",\n    \"metadata\": {},\n    \"outputs\": [\n@@ -280,7 +282,7 @@\n        \"       4.99999500e+00, 4.99999750e+00, 5.00000000e+00])\"\n       ]\n      },\n-     \"execution_count\": 9,\n+     \"execution_count\": 10,\n      \"metadata\": {},\n      \"output_type\": \"execute_result\"\n     }\n@@ -291,7 +293,7 @@\n   },\n   {\n    \"cell_type\": \"code\",\n-   \"execution_count\": 10,\n+   \"execution_count\": 11,\n    \"id\": \"fe201870\",\n    \"metadata\": {},\n    \"outputs\": [\n@@ -299,14 +301,14 @@\n      \"name\": \"stdout\",\n      \"output_type\": \"stream\",\n      \"text\": [\n-      \"nan 1.000001000001e-05\\n\"\n+      \"nan 1.5000015000014999e-05\\n\"\n      ]\n     },\n     {\n      \"name\": \"stderr\",\n      \"output_type\": \"stream\",\n      \"text\": [\n-      \"/tmp/ipykernel_4170/1949430944.py:24: RuntimeWarning: invalid value encountered in log10\\n\",\n+      \"/scratch-local/slurm-job-tmp-2916059/ipykernel_87/1949430944.py:24: RuntimeWarning: invalid value encountered in log10\\n\",\n       \"  spectrum = 10*np.log10(signal[1:1_000_001])\\n\"\n      ]\n     }\n@@ -325,7 +327,7 @@\n   },\n   {\n    \"cell_type\": \"code\",\n-   \"execution_count\": 14,\n+   \"execution_count\": 12,\n    \"id\": \"8ce4e819-3006-46c6-b452-e50b531ec44c\",\n    \"metadata\": {},\n    \"outputs\": [\n@@ -333,9 +335,9 @@\n      \"name\": \"stderr\",\n      \"output_type\": \"stream\",\n      \"text\": [\n-      \"/tmp/ipykernel_4170/1949430944.py:24: RuntimeWarning: invalid value encountered in log10\\n\",\n+      \"/scratch-local/slurm-job-tmp-2916059/ipykernel_87/1949430944.py:24: RuntimeWarning: invalid value encountered in log10\\n\",\n       \"  spectrum = 10*np.log10(signal[1:1_000_001])\\n\",\n-      \"/tmp/ipykernel_4170/2811663054.py:12: UserWarning: This figure was using constrained_layout, but that is incompatible with subplots_adjust and/or tight_layout; disabling constrained_layout.\\n\",\n+      \"/scratch-local/slurm-job-tmp-2916059/ipykernel_87/2811663054.py:12: UserWarning: This figure was using constrained_layout, but that is incompatible with subplots_adjust and/or tight_layout; disabling constrained_layout.\\n\",\n       \"  plt.tight_layout()\\n\"\n      ]\n     },\n@@ -343,13 +345,13 @@\n      \"name\": \"stdout\",\n      \"output_type\": \"stream\",\n      \"text\": [\n-      \"nan 1.000001000001e-05\\n\",\n-      \"40.4227385170742 0.14915514915514916\\n\"\n+      \"nan 1.5000015000014999e-05\\n\",\n+      \"50.048962839888816 0.8487008487008487\\n\"\n      ]\n     },\n     {\n      \"data\": {\n-      \"image/png\": \"\\n\",\n+      \"image/png\": \"\\n\",\n       \"text/plain\": [\n        \"<Figure size 432x288 with 2 Axes>\"\n       ]\n@@ -380,18 +382,18 @@\n   },\n   {\n    \"cell_type\": \"code\",\n-   \"execution_count\": 12,\n+   \"execution_count\": 13,\n    \"id\": \"9b08233c-f6ea-4436-9be8-54e05186402b\",\n    \"metadata\": {},\n    \"outputs\": [\n     {\n      \"data\": {\n       \"text/plain\": [\n-       \"array([2.00436842e+05, 1.91516489e+01, 1.17035696e+01, ...,\\n\",\n-       \"       9.28832644e+00, 1.17035696e+01, 1.91516489e+01])\"\n+       \"array([1.97800264e+05, 3.26407855e+01, 2.50837922e+01, ...,\\n\",\n+       \"       5.52762776e+00, 2.50837922e+01, 3.26407855e+01])\"\n       ]\n      },\n-     \"execution_count\": 12,\n+     \"execution_count\": 13,\n      \"metadata\": {},\n      \"output_type\": \"execute_result\"\n     }\n@@ -402,23 +404,23 @@\n   },\n   {\n    \"cell_type\": \"code\",\n-   \"execution_count\": 13,\n+   \"execution_count\": 14,\n    \"id\": \"a517e9b0-5d2b-4b20-bca4-27fdb22ad781\",\n    \"metadata\": {},\n    \"outputs\": [\n     {\n      \"data\": {\n       \"text/plain\": [\n-       \"<matplotlib.collections.PathCollection at 0x7f9da79d4a60>\"\n+       \"<matplotlib.collections.PathCollection at 0x7f76a57bee90>\"\n       ]\n      },\n-     \"execution_count\": 13,\n+     \"execution_count\": 14,\n      \"metadata\": {},\n      \"output_type\": \"execute_result\"\n     },\n     {\n      \"data\": {\n-      \"image/png\": \"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\\n\",\n+      \"image/png\": \"\\n\",\n       \"text/plain\": [\n        \"<Figure size 432x288 with 1 Axes>\"\n       ]\n@@ -443,9 +445,57 @@\n   },\n   {\n    \"cell_type\": \"code\",\n-   \"execution_count\": null,\n+   \"execution_count\": 23,\n    \"id\": \"b0ebc165-d32a-4640-bebc-b6439dec7e04\",\n    \"metadata\": {},\n+   \"outputs\": [\n+    {\n+     \"data\": {\n+      \"text/plain\": [\n+       \"[<matplotlib.lines.Line2D at 0x7f76bb57da80>]\"\n+      ]\n+     },\n+     \"execution_count\": 23,\n+     \"metadata\": {},\n+     \"output_type\": \"execute_result\"\n+    },\n+    {\n+     \"data\": {\n+      \"image/png\": \"\\n\",\n+      \"text/plain\": [\n+       \"<Figure size 432x288 with 1 Axes>\"\n+      ]\n+     },\n+     \"metadata\": {\n+      \"needs_background\": \"light\"\n+     },\n+     \"output_type\": \"display_data\"\n+    }\n+   ],\n+   \"source\": [\n+    \"import scipy\\n\",\n+    \"\\n\",\n+    \"freqs, psd = scipy.signal.welch(data_signal[0], \\n\",\n+    \"                   fs=10e9, \\n\",\n+    \"                   window='hann', \\n\",\n+    \"                   nperseg=None, \\n\",\n+    \"                   noverlap=None, \\n\",\n+    \"                   nfft=None, \\n\",\n+    \"                   detrend='constant', \\n\",\n+    \"                   return_onesided=True, \\n\",\n+    \"                   scaling='density', \\n\",\n+    \"                   axis=-1, \\n\",\n+    \"                   average='mean'\\n\",\n+    \"                  )\\n\",\n+    \"\\n\",\n+    \"plt.semilogy(freqs, psd)\"\n+   ]\n+  },\n+  {\n+   \"cell_type\": \"code\",\n+   \"execution_count\": null,\n+   \"id\": \"a3018b5a-a99d-4cfc-922d-05d37ed07d2a\",\n+   \"metadata\": {},\n    \"outputs\": [],\n    \"source\": []\n   }\n\n---", "paper/machine_learning.py\n=======================================================\nlhs: 100644 | 67f8099e4ed73f4926a0165f2ce1b57c72c295b9\nrhs: 100644 | 8338bb206e98a159c9a51d5cce865ea0561da937\n---@@ -330,6 +330,38 @@ def prepare_datasets_nosplit(data, labels, batch_size=32, label_mapping=pp.trans\n     return ds\n \n \n+def test_only_most_certain_equal_proportions_of_predicted_labels(predicted_probabilities, true_labels, \n+                           most_certain_fraction=0.01, selection_mode='max_probability'):\n+    \n+    classes = [0, 1, 2, 3]\n+    \n+    results = {}\n+    \n+    all_predictions = np.argmax(predicted_probabilities, axis=1)\n+    \n+    for i in classes:\n+        indices_predicted_i = (all_predictions == i).nonzero()\n+        \n+        if np.size(indices_predicted_i) == 0:\n+            fraction_i = 1.  # could also just abort here...\n+        else:\n+            # want to have equal numbers of predictions for each class.\n+            # however, the network is sometimes biased (why??) and predicts one class more often than others.\n+            # compensate for this behaviour and try to take an equal number of each predicted class.\n+            take_n_for_each_symbol = most_certain_fraction * np.size(all_predictions) / len(classes)\n+            fraction_i = take_n_for_each_symbol / np.size(indices_predicted_i)\n+\n+        results[i] = test_only_most_certain(predicted_probabilities[indices_predicted_i],\n+                                            true_labels[indices_predicted_i],\n+                                            most_certain_fraction=fraction_i,\n+                                            selection_mode=selection_mode\n+                                            )\n+    print(f\"Total test accuracy for 'most certain {100 * most_certain_fraction}% \"\n+          f\"of predictions when taking equal numbers of each predicted symbol: {np.mean(list(results.values()))}\\n\") \n+    \n+    return results\n+\n+\n def test_only_most_certain(predicted_probabilities, true_labels, \n                            most_certain_fraction=0.01, selection_mode='max_probability'):\n     if selection_mode == 'entropy':\n@@ -341,7 +373,7 @@ def test_only_most_certain(predicted_probabilities, true_labels,\n         # Take the x% that have the largest single probability\n         priorities = -np.max(predicted_probabilities, axis=1)\n     else:\n-        printf(f\"Invalid selection mode: {selection_mode}\")\n+        print(f\"Invalid selection mode: {selection_mode}\")\n         return\n     \n     sorted_args = np.argsort(priorities)\n@@ -402,7 +434,13 @@ def test_model(model, test_data, test_labels,\n     if most_certain_fraction:\n         limited_test_accuracy = test_only_most_certain(\n             predicted_probabilities, test_labels, most_certain_fraction=most_certain_fraction)\n-        return {'test_accuracy': test_accuracy, f'best_{most_certain_fraction}_percentile': limited_test_accuracy}\n+        \n+        most_certain_with_equal_label_proportions = test_only_most_certain_equal_proportions_of_predicted_labels(\n+            predicted_probabilities, test_labels, most_certain_fraction=most_certain_fraction)\n+        \n+        return {'test_accuracy': test_accuracy, \n+                f'best_{most_certain_fraction}': limited_test_accuracy, \n+                f'best_{most_certain_fraction}_eq_label_proportions': most_certain_with_equal_label_proportions}\n     else:\n         return test_accuracy\n \n\n---"]}