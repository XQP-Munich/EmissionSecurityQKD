{"test_accuracies": {"FPGA2.5cm_2": [0.7106619302546655, 0.7053231939163498, 0.705958873267624, 0.7112623205083304, 0.7064091659578726], "FPGA2.5cm_3": [0.7171661580027018, 0.7142785671402841, 0.7185170360734477, 0.7245209386100966, 0.7209185970881072], "FPGA2.5cm_4": [0.7303247110621904, 0.7219331598959375, 0.7285235403011958, 0.7355280932606194, 0.7305748736678841], "FPGA2.5cm_5": [0.7431330364737079, 0.74069441664999, 0.7437834592485115, 0.7480862560664432, 0.7429829389102917], "FPGA2.5cm_6": [0.7431830689948467, 0.7382429457674605, 0.7431330364737079, 0.7484364837144144, 0.740431280332216], "FPGA2.5cm_7": [0.7460349226997548, 0.7476485891534921, 0.7444839145444538, 0.7511382398559063, 0.7473858007705009], "FPGA2.5cm_8": [0.7578425976884975, 0.7531518911346808, 0.7573422724771102, 0.7683994596487717, 0.7605943863511282], "FPGA2.5cm_9": [0.7462850853054486, 0.7458975385231139, 0.7440336218542052, 0.751588532546155, 0.7464852153900035], "FPGA2.5cm_10": [0.7563416220543353, 0.7505503301981189, 0.7541902236453695, 0.7614949717316255, 0.7606944513934057], "FPGA2.5cm_11": [0.7632461099714815, 0.7594056433860317, 0.760844548956822, 0.7670485815780257, 0.761795166858458], "FPGA2.5cm_12": [0.7563416220543353, 0.7469981989193516, 0.7526892480112073, 0.7600440286186021, 0.7532396057437334], "FPGA2.5cm_13": [0.7660479311552509, 0.7591054632779668, 0.7640466303097013, 0.77045079301546, 0.7634462400560365], "FPGA2.5cm_14": [0.7625956871966778, 0.7594556734040424, 0.760444288787712, 0.7658978335918347, 0.7634962725771751], "FPGA2.5cm_15": [0.760844548956822, 0.7578046828096858, 0.7647971181267824, 0.7659978986341122, 0.7609446139990994], "FPGA2.5cm_16": [0.7645469555210888, 0.7602061236742045, 0.7677490368739681, 0.7689498173812979, 0.7655976384650023], "FPGA2.5cm_17": [0.7719517686496222, 0.7630578347008204, 0.7668484514934708, 0.7743533296642818, 0.768349427127633], "FPGA2.5cm_18": [0.7703006954520438, 0.7669601761056634, 0.7666983539300546, 0.7729023865512583, 0.7662980937609446], "FPGA2.5cm_19": [0.7637964677040076, 0.75620372223334, 0.7626957522389554, 0.7671986791414419, 0.7610446790413768], "FPGA2.5cm_20": [0.7692500125081303, 0.7648589153492096, 0.7672987441837195, 0.7749537199179467, 0.7685495572121879], "FPGA2.5cm_21": [0.7675989393105519, 0.7632079247548529, 0.766998549056887, 0.7734527442837844, 0.7705508580577375], "FPGA2.5cm_22": [0.7712513133536799, 0.7596557934760857, 0.7676489718316906, 0.7737529394106168, 0.7709010857057087], "FPGA2.5cm_23": [0.7661980287186672, 0.7617070242145287, 0.7686996547756041, 0.7726522239455647, 0.772201931255316], "FPGA2.5cm_24": [0.7709511182268475, 0.7683109865919552, 0.7698504027617952, 0.7765547605943863, 0.7715515084805123], "FPGA2.5cm_25": [0.7705508580577375, 0.7671102661596958, 0.7686996547756041, 0.7749036873968079, 0.7744533947065593], "FPGA2.5cm_26": [0.7695502076349627, 0.7657094256553932, 0.7712012808325411, 0.7778055736228549, 0.7742032321008656], "FPGA2.5cm_27": [0.7755541101716116, 0.7660096057634581, 0.7766548256366639, 0.7794566468204333, 0.774503427227698], "FPGA2.5cm_28": [0.7685495572121879, 0.7642085251150691, 0.7700005003252114, 0.7739530694951718, 0.7716015410016511]}, "train_accuracies": {"FPGA2.5cm_2": 0.7277730703353882, "FPGA2.5cm_3": 0.7192925214767456, "FPGA2.5cm_4": 0.7308583855628967, "FPGA2.5cm_5": 0.7380297183990479, "FPGA2.5cm_6": 0.7511382102966309, "FPGA2.5cm_7": 0.7436167001724243, "FPGA2.5cm_8": 0.7591363191604614, "FPGA2.5cm_9": 0.7438585162162781, "FPGA2.5cm_10": 0.7601107358932495, "FPGA2.5cm_11": 0.7612510323524475, "FPGA2.5cm_12": 0.7468650341033936, "FPGA2.5cm_13": 0.766887903213501, "FPGA2.5cm_14": 0.7612466216087341, "FPGA2.5cm_15": 0.7651704549789429, "FPGA2.5cm_16": 0.7598955035209656, "FPGA2.5cm_17": 0.7696141600608826, "FPGA2.5cm_18": 0.7655490040779114, "FPGA2.5cm_19": 0.7576910853385925, "FPGA2.5cm_20": 0.76650470495224, "FPGA2.5cm_21": 0.765139102935791, "FPGA2.5cm_22": 0.7655659317970276, "FPGA2.5cm_23": 0.7728766202926636, "FPGA2.5cm_24": 0.7675639986991882, "FPGA2.5cm_25": 0.775149941444397, "FPGA2.5cm_26": 0.7709679007530212, "FPGA2.5cm_27": 0.7694705724716187, "FPGA2.5cm_28": 0.7705093622207642}, "validation_accuracies": {"FPGA2.5cm_2": 0.7181668281555176, "FPGA2.5cm_3": 0.7226697206497192, "FPGA2.5cm_4": 0.7362785935401917, "FPGA2.5cm_5": 0.7526892423629761, "FPGA2.5cm_6": 0.752789318561554, "FPGA2.5cm_7": 0.7571921944618225, "FPGA2.5cm_8": 0.7674488425254822, "FPGA2.5cm_9": 0.7582929134368896, "FPGA2.5cm_10": 0.7674488425254822, "FPGA2.5cm_11": 0.7738530039787292, "FPGA2.5cm_12": 0.7652474045753479, "FPGA2.5cm_13": 0.7791564464569092, "FPGA2.5cm_14": 0.7747035622596741, "FPGA2.5cm_15": 0.7730024456977844, "FPGA2.5cm_16": 0.7756041288375854, "FPGA2.5cm_17": 0.7826587557792664, "FPGA2.5cm_18": 0.7784059643745422, "FPGA2.5cm_19": 0.7744534015655518, "FPGA2.5cm_20": 0.7814579606056213, "FPGA2.5cm_21": 0.7818582057952881, "FPGA2.5cm_22": 0.7826587557792664, "FPGA2.5cm_23": 0.7838094830513, "FPGA2.5cm_24": 0.7853104472160339, "FPGA2.5cm_25": 0.7899634838104248, "FPGA2.5cm_26": 0.7869114875793457, "FPGA2.5cm_27": 0.7866613268852234, "FPGA2.5cm_28": 0.7822084426879883}, "measurement_metadata": {"GIT_SHA1": "1367af96771d41dbef895cd0bdc94477e7bbdca2", "GIT_DIFF": ["remote_control_oscilloscope/Measure_TEMPEST_Windows.py\n=======================================================\nlhs: 100644 | 42c8b3e9e5a7f18ae2f5f310cb708d0736ce2282\nrhs: 100644 | 91740473ba09a3da553138cb9fea04c4287df7e2\n---@@ -74,6 +74,7 @@ def measure_train_validation_test(\n         test_suffixes = [1, 2]\n \n     def map_file_name(prefix, osci_file_name, suffix_):\n+        osci_file_name = osci_file_name.replace(\"-\", \"\")\n         if osci_file_name == \"C1adomas00000.txt\":\n             return f\"{prefix}_{suffix_}_clock_debug_signal.txt\"\n         elif osci_file_name == \"C2adomas00000.txt\":\n\n---"], "DATASET_HASH_VERSION": "v0.2.0", "description": "Measurement of electromagnetic emissions from Quantum key distribution electronics. Contains measurement setup description and sha256 file hashes of measurement results.", "comments": "Measurement of a big dataset in 2.5cm height above the FPGA.", "dataset_name": "__GLOB_PATTERN__=..\\paper\\Data2D\\Rev130meas2.5cm\\**", "probe": "XF R 400-1", "amplifier": "TRF37C73EVM", "FILE_SHA256": {"FPGA2.5cm/test_0_data.txt": "a1ed319fd3478ef7d1ea58f7318aaa60e31cf593a62c41d3699be6c2b58f1e59", "FPGA2.5cm/test_0_synch_debug_signal.txt": "fbc9e5cd9ab1bb79eb29a4928d50ee6e4e4165de54547feeacbc903c0974b52d", "FPGA2.5cm/test_1_data.txt": "74cb764fb147edfb06f40f3d142ffae64b20b5a69d1f4ccc68bb65fdc95ca0e4", "FPGA2.5cm/test_1_synch_debug_signal.txt": "42abaab9d3f953632957efa4fcb32951fe588d4540885a85706e222b1b790a5e", "FPGA2.5cm/test_2_data.txt": "e06aee86817c5d0dc50b5b96e6f7c59786be977daf7127a932eb776e695604c1", "FPGA2.5cm/test_2_synch_debug_signal.txt": "a9ec4ff2704db311d4d1ee7d748861a63746130b53c7a9966c5cf492d55e8f07", "FPGA2.5cm/test_3_data.txt": "cd34b2e36546d46989f88b3675e52606213b84f9fdf868a0929d40c873eab39c", "FPGA2.5cm/test_3_synch_debug_signal.txt": "5578c41ce88b7c2b573864927918f4364924fb2e23393b159427fb816521c5e2", "FPGA2.5cm/test_4_data.txt": "1cc291ca2d32ca2cbbf421efd29faf099d07684d7ae801a50c6ee887eda720b8", "FPGA2.5cm/test_4_synch_debug_signal.txt": "1f8489b56e9b6bb09db802d64d9dbf17f3cb0c7a7efced7fcbc6b42d6ad64dc9", "FPGA2.5cm/test_labels.txt": "d49a07e40fb198c86dc04a8d7e71ce4328d46807b1ac82523868045461926a6f", "FPGA2.5cm/training_labels.txt": "9f7900ecf822b645cfc58ba5e0cd54d0f4ba08a1e956ec4ec0a47eeb3ae0fdd7", "FPGA2.5cm/train_0_data.txt": "9ea55fdcbe5c644b6494e8b3da6120f642a5197cdfbacecff80fe1f3caaf3254", "FPGA2.5cm/train_0_synch_debug_signal.txt": "91e75d7e4e3d0ce114589ed4eaa08cff64d94123e42a1e0fc36c91f547cd36e2", "FPGA2.5cm/train_10_data.txt": "a95ee32d87e27ea94ed890113ff867ca1b07dd8502c422e3e304801e7617aaf1", "FPGA2.5cm/train_10_synch_debug_signal.txt": "e5453b4fd987b3ddac820d1e697703a3f308bb1dd2e18178fa9d6e9b6935b434", "FPGA2.5cm/train_11_data.txt": "284c279576142ae41cfa269f4b03599228243f0768125fa2caec7b16e9f8f388", "FPGA2.5cm/train_11_synch_debug_signal.txt": "c16133d08cc4ef316acc679f35ebb08d0cebf68d6795c768d68e6175bb6e364e", "FPGA2.5cm/train_12_data.txt": "7cb2df87f526dffdf59cefd4f0c474cc3bd2a4cebe55adcaea88e48a4f37253e", "FPGA2.5cm/train_12_synch_debug_signal.txt": "0dc92426eb642d24e69a8639f08a92f08ef673113b536c2aa69e98851033bd08", "FPGA2.5cm/train_13_data.txt": "37f4561ecfb98212ddc0ef00a5ba7f47ab2dbe32f45a85029197335af3d08841", "FPGA2.5cm/train_13_synch_debug_signal.txt": "0929131821a9e6481c75d86af0289e2b89a8e8fb1b661125d31d96dc254c1106", "FPGA2.5cm/train_14_data.txt": "5a029b7cf33ffe7eae3228e98ee5fefa6ed4cbd6c04611bb26875539dba8012a", "FPGA2.5cm/train_14_synch_debug_signal.txt": "fc59a2e5d8ac499d97440f8c155161bcb8ace4941ed314ada5df8434f31a8940", "FPGA2.5cm/train_15_data.txt": "0047ef5219043fd3821a23dc2d3ad37bfe0cc4d965fd3c50de3321c2736fad19", "FPGA2.5cm/train_15_synch_debug_signal.txt": "909ec11c3e9416c5916747e6eb6cbd4f9be33b8f06a3bc1de3c63bcea9f3e36f", "FPGA2.5cm/train_16_data.txt": "d0c33bea076ece58b18f38c55ff1b1345edec1ac5cf7476b881165b33b422f82", "FPGA2.5cm/train_16_synch_debug_signal.txt": "bc2ec6e6c977a1ebe827aca7d55af2abe081cdd07695d21a843748c5e5245267", "FPGA2.5cm/train_17_data.txt": "40af3b8d1398d4643cfd7be00673dbdaab450e9ae33bf6c2a941d6c7be979dc8", "FPGA2.5cm/train_17_synch_debug_signal.txt": "ac61aa1313836295d187bfce27c7f242d6a90a593e2f28c78ffa8ccb17250116", "FPGA2.5cm/train_18_data.txt": "02ceff2bb2cf6ae989977cfad05ee99e119f55f85bc8c29fc5ba31a7d8d9cad1", "FPGA2.5cm/train_18_synch_debug_signal.txt": "d673c11ead4d11c2e45a33dad41a6341ed22fbb97133a3aa694be7389ae43c12", "FPGA2.5cm/train_19_data.txt": "48a739332c7b5122fbbd0e797a37f62d133510fe93c5855809334f9544f2296e", "FPGA2.5cm/train_19_synch_debug_signal.txt": "8dba56c2ac43829774ae86e8dede8e0415fc19f127be0fb964897f882d81b76d", "FPGA2.5cm/train_1_data.txt": "388726977254e8031b738ffaa5a49c4d4803acccca2dd0235a17d7518e689f25", "FPGA2.5cm/train_1_synch_debug_signal.txt": "f6c1a68ef0f8b25b3debad119763e1b8734ff19430ad33e6c566524add6e0c21", "FPGA2.5cm/train_20_data.txt": "fcad51c28505a5909b4db44dbb6b25506b40fdb2f9a7f5edface5d600dd85af7", "FPGA2.5cm/train_20_synch_debug_signal.txt": "4d042281b518aa365a991fc2caf99081d805240af2e4b254aa80ef15497b331d", "FPGA2.5cm/train_21_data.txt": "f67713d9e6bc16661cfccde1a0ef5e6c3a4997ee2dba5485dd7c87b321969602", "FPGA2.5cm/train_21_synch_debug_signal.txt": "24a04ff809bff41d10e4ca6b978c4ef014648b5379272ad2a14d3a0e43fae6f6", "FPGA2.5cm/train_22_data.txt": "5b7b5364e05f26a4f06391c9ea01c0e2f03edeaef83e23b915989e8400f1870a", "FPGA2.5cm/train_22_synch_debug_signal.txt": "fd8e96dc9ef50cbfab1ab56ecdef73ae52ff5415e8523a8a43b7259d6eb4ce8c", "FPGA2.5cm/train_23_data.txt": "d2c99f76d835e1cc4df61fb0a97c368e6bcadcfa9ad9ffb45a3f682518302c04", "FPGA2.5cm/train_23_synch_debug_signal.txt": "c565686834aed6b63b0cf45010a8faefdbb280d69ad7c032b68714f49294c865", "FPGA2.5cm/train_24_data.txt": "8b573871587b61cadb70eb2f9bacd6a251285f962e60a37b0253933d83dd1cef", "FPGA2.5cm/train_24_synch_debug_signal.txt": "447087c8e491e60877b69dc04bfd06fa07d0daa89f38d28efa7113b6ec164866", "FPGA2.5cm/train_25_data.txt": "fda33bc91f49a66e9fb1a0c2f0f7c5c51084c973a9860b0aa789c7bf3d2adb3b", "FPGA2.5cm/train_25_synch_debug_signal.txt": "3ffb86f8d0f08713f2a8bde4ba2e61492c40704f3edcdf1663b905218d39b063", "FPGA2.5cm/train_26_data.txt": "4863c71b297209e7f9ed84e0f512cebe039a2981f70837166c33a301ad8df172", "FPGA2.5cm/train_26_synch_debug_signal.txt": "262a0e7e90e18dc0867f8a07fe7e503be6d3c70fbaef936b9990a11f3d58aa82", "FPGA2.5cm/train_27_data.txt": "e6ee097ced0de569a6a47e805c65d3780c1c43a6fe1a5ea3db4900313b747157", "FPGA2.5cm/train_27_synch_debug_signal.txt": "bb6da09a5d384ec7f0ea8351881a8c78755793ab1dde9e5f5631e08ed695d44a", "FPGA2.5cm/train_28_data.txt": "488bd0a3549429aad3d4c17cd0f2d23136de7b006a963b6ea683977698d0032b", "FPGA2.5cm/train_28_synch_debug_signal.txt": "31143b996ae1db19f70770e40a85126caa4763f8a2b7d7350df6d688cc27aaaa", "FPGA2.5cm/train_29_data.txt": "249dadf2117945433e651bab3476c89752321dc06ba3252f3f1b436fcccf3263", "FPGA2.5cm/train_29_synch_debug_signal.txt": "36cc27d7299b64b15674459ebd6c82562019107e916a5fecf41acb1b609d288c", "FPGA2.5cm/train_2_data.txt": "c49b5bb922c975896d2d2fb3af0cc4e0334070b95411174fc543174e93d7b123", "FPGA2.5cm/train_2_synch_debug_signal.txt": "a5da85e1bc99060d36ee897b712ca4e78249214c036349934bf15e46f100320a", "FPGA2.5cm/train_3_data.txt": "df800ed6650cb132cc5b098539a9a420daa4b3bb74ccad7e0699d1f754d68ce5", "FPGA2.5cm/train_3_synch_debug_signal.txt": "d245868e0fbd891738a6300c190ed7339454c2c2854a4cbfc433f30d3a119969", "FPGA2.5cm/train_4_data.txt": "504b9f2742f6396a324c2442d9727ee75ebdb8e60c721c1f94c29316a3a07611", "FPGA2.5cm/train_4_synch_debug_signal.txt": "329b84bd54ccf5659486f330663112793379c230f54438e7a1f2b54f9b67568e", "FPGA2.5cm/train_5_data.txt": "ae58836690db2c175f5f0caf825491ac1a157aba164e60d1e0cc24b067fea4d7", "FPGA2.5cm/train_5_synch_debug_signal.txt": "a1ac123cda121036dc08083508af6f1c2bbd71cfb6084ad885184d97e858cc3a", "FPGA2.5cm/train_6_data.txt": "87e747f91aabd70f8620b20450eae4335aeac83965cf289702cf59117e36eef2", "FPGA2.5cm/train_6_synch_debug_signal.txt": "84377741a2deaf7fbe0a38b64342f61f7603288523c0164da520acbc6101aa87", "FPGA2.5cm/train_7_data.txt": "4e6b6c63d9f609657daadc4bcdeefe856173ab29b7e1f48d36be5a09d5888c90", "FPGA2.5cm/train_7_synch_debug_signal.txt": "3f6a6d4013ad61b6c3a8f3242199f09b84504e1bb6b488c44d0d36911168b692", "FPGA2.5cm/train_8_data.txt": "5e01c5dd4a0e12cebba25c8fb7797558d688ec3c8a71c74f0f43e28064b89461", "FPGA2.5cm/train_8_synch_debug_signal.txt": "c329795ecf6107846cf21a6092479c34b4ca868afc66fdb7a21e121d213c89ca", "FPGA2.5cm/train_9_data.txt": "bb83c4289fe0923886e3fca94de23aa0a0c232c3800a929f77cc31efb27fe48c", "FPGA2.5cm/train_9_synch_debug_signal.txt": "9cc9878645a919625a826cc4b4dfd7b4f26eccb5fcbb4ef2de88c6cdff61cf6b"}, "alice_control_args": "-c -1 -m 0 -b 0 -da 100 -db 150", "laser_driver_enabled": false, "time_measurement_end": "20220701-15:20"}, "n_classes": 4, "data_augmentation_halflength": 0, "GIT_SHA1_ONSAVING": "28a5f59dea44a163755805f55c0b56fca7b8e4e1", "GIT_DIFF_ONSAVING": ["paper/DataOverview.md\n=======================================================\nlhs: 100644 | 4d0aa9f693c2eb7ee166d91623849d50e2a226da\nrhs: 100644 | 95c07bc08c6762f6174af88d42aa8b04a087f46e\n---@@ -3,86 +3,139 @@\n \n ## pictures  \n Folder with photos\n+TODO\n+- upload all photos\n+- select which to use in paper (Appendix?)\n \n ## Background\n \n-### BackgroundTuesday \n-### BackgroundSaturday    \n-\n-\n-\n-\n-## Rev1\n+### BackgroundTuesday & BackgroundSaturday\n+TODO\n+- plot together with raw probe spectrum\n \n \n+## ---------------------------------------------------- Rev1\n \n ### TEMPEST\n \n ### Rev130meas2.5cm\n+TODO\n+- How much training data do we need? DO 15 EPOCHS (Appendix!)\n+Do two lines in plot, one with data augmentation, one without.\n+\n ### Rev1Rotation10deg\n+TODO\n+- Plot results (Appendix)\n \n ### Rev12D\n+TODO\n+- plot (PAPER!)\n ### Rev1Distance\n+TODO\n+- plot (PAPER!)\n+- Think about how to underlay schematic\n \n ### Rev1TEMPESTShieldingUSBHole\n-### Rev1TEMPESTShieldingFPGA\n+TODO\n+- Evaluate\n \n+### Rev1TEMPESTShieldingFPGA\n+TODO\n+- Evaluate\n \n \n ### AB\n \n ### Rev1AntennaAB4m\n+TODO\n+- Evaluate. Preliminary result: 50/50\n+\n ### Rev1ABShieldingUSBHole\n+TODO\n+- Evaluate\n \n ### Rev1ABShieldingFPGA   \n-\n-\n+TODO\n+- Evaluate\n \n ### Other\n \n ### AntennaSpectra\n+TODO\n+- Plot in paper??? Measure more to have more confidence in results?\n \n \n-\n-\n-\n-## Rev2\n-\n+## ---------------------------------------------------- Rev2\n \n \n ### TEMPEST\n \n-### TestRev2Pre2D  \n-DELETE???\n+### TestRev2Pre2D\n+TODO\n+- Move to parent folder? Do not need for paper!\n \n ### Rev230meas2.5cm\n-### Rev2Rotation10deg\n+TODO\n+- Hyperparem Optimization (Appendix?)\n+- How much training data do we need? DO 15 EPOCHS (Appendix!)\n+Do two lines in plot, one with data augmentation, one without.\n \n-### Rev22D\n-### Rev22Dstart_7_0\n-### Rev2Distance\n \n+### Rev2Rotation10deg\n+TODO\n+- Plot results (Appendix)\n+\n+### Rev22D & Rev22Dstart_7_0\n+TODO\n+- plot (PAPER!)\n+- Think about how to underlay schematic\n \n+### Rev2Distance\n+TODO\n+- plot (PAPER!)\n+- Think about how to underlay schematic\n \n ### AB\n \n ### ABVeryFarAwayProbeRev2\n+TODO\n+- Verify expected 50/50 performance\n+- NO PLOT\n+\n ### Rev2ABShielding\n+TODO\n+- What is this data?\n \n ### Rev2AntennaAB\n+TODO\n+- Evaluate\n \n ### Rev2ProbeABShieldungBig\n+TODO\n+- Evaluate. If result, mention in paper.\n \n ### rev2NoShieldABAntennaFar\n+TODO\n+- Evaluate. Probably no result!\n \n ### Rev2AB7cm\n+TODO\n+- plot AB measurement (Appendix?)\n \n ### Rev2AntennaOnOff\n-\n+TODO\n+- What is this data?\n \n \n ### Other\n \n ### Rev2FarAway\n+TODO\n+- what is this data?\n \n ### Rev2ShieldingAntenna\n+TODO\n+- What is this data?\n+\n+\n+\n\n---", "paper/TEMPEST_ATTACK_VARY_TRAINING_DATA.ipynb\n=======================================================\nlhs: 100644 | 856e70c6c0def4b38a45cb1e07a06ad45afc121e\nrhs: 100644 | ce7f6f79813d311c438f3e22419e695fce5b1858\n---@@ -10,7 +10,7 @@\n   },\n   {\n    \"cell_type\": \"code\",\n-   \"execution_count\": null,\n+   \"execution_count\": 1,\n    \"id\": \"ca8f60de-7398-49a9-a734-3f19e817e32a\",\n    \"metadata\": {\n     \"pycharm\": {\n@@ -43,7 +43,7 @@\n   },\n   {\n    \"cell_type\": \"code\",\n-   \"execution_count\": null,\n+   \"execution_count\": 2,\n    \"id\": \"e320dcf4-a857-47e0-8de6-99a0ce4eb17e\",\n    \"metadata\": {\n     \"pycharm\": {\n@@ -71,7 +71,7 @@\n   },\n   {\n    \"cell_type\": \"code\",\n-   \"execution_count\": null,\n+   \"execution_count\": 3,\n    \"id\": \"91866f75-1bcb-4089-839f-5b80ca993610\",\n    \"metadata\": {\n     \"pycharm\": {\n@@ -122,7 +122,7 @@\n   },\n   {\n    \"cell_type\": \"code\",\n-   \"execution_count\": null,\n+   \"execution_count\": 4,\n    \"id\": \"d9e4a0d8-97e0-4ac7-b635-b1209cef0bc4\",\n    \"metadata\": {\n     \"pycharm\": {\n@@ -135,7 +135,7 @@\n     \"    print(f\\\"Evaluating datasets: {positions}\\\")\\n\",\n     \"    \\n\",\n     \"    for i, elem in enumerate(positions):\\n\",\n-    \"        for max_train_files in range(20, 29, 1):\\n\",\n+    \"        for max_train_files in range(2, 29, 1):\\n\",\n     \"            print(f\\\"------------- dataset {i}: {elem} with {max_train_files=} ----------------------------------\\\")\\n\",\n     \"            training_data, training_labels, validation_data, validation_labels = pp.get_datasets(\\n\",\n     \"                os.path.join(data_directory, elem), technical_details, offset_header=offset_header,\\n\",\n@@ -187,7 +187,2708 @@\n     },\n     \"tags\": []\n    },\n-   \"outputs\": [],\n+   \"outputs\": [\n+    {\n+     \"name\": \"stdout\",\n+     \"output_type\": \"stream\",\n+     \"text\": [\n+      \"Evaluating datasets: ['FPGA2.5cm']\\n\",\n+      \"------------- dataset 0: FPGA2.5cm with max_train_files=2 ----------------------------------\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13996, 500), before header:(5991, 500)\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13996, 500), before header:(5991, 500)\\n\"\n+     ]\n+    },\n+    {\n+     \"name\": \"stderr\",\n+     \"output_type\": \"stream\",\n+     \"text\": [\n+      \"2022-07-05 11:12:15.380428: I tensorflow/core/platform/cpu_feature_guard.cc:142] This TensorFlow binary is optimized with oneAPI Deep Neural Network Library (oneDNN) to use the following CPU instructions in performance-critical operations:  SSE4.1 SSE4.2 AVX AVX2 FMA\\n\",\n+      \"To enable them in other operations, rebuild TensorFlow with the appropriate compiler flags.\\n\",\n+      \"2022-07-05 11:12:15.804929: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1510] Created device /job:localhost/replica:0/task:0/device:GPU:0 with 43614 MB memory:  -> device: 0, name: NVIDIA A40, pci bus id: 0000:81:00.0, compute capability: 8.6\\n\"\n+     ]\n+    },\n+    {\n+     \"name\": \"stdout\",\n+     \"output_type\": \"stream\",\n+     \"text\": [\n+      \"Model: \\\"sequential\\\"\\n\",\n+      \"_________________________________________________________________\\n\",\n+      \"Layer (type)                 Output Shape              Param #   \\n\",\n+      \"=================================================================\\n\",\n+      \"reshape (Reshape)            (None, 500, 1)            0         \\n\",\n+      \"_________________________________________________________________\\n\",\n+      \"gaussian_noise (GaussianNois (None, 500, 1)            0         \\n\",\n+      \"_________________________________________________________________\\n\",\n+      \"conv1d (Conv1D)              (None, 500, 13)           52        \\n\",\n+      \"_________________________________________________________________\\n\",\n+      \"max_pooling1d (MaxPooling1D) (None, 250, 13)           0         \\n\",\n+      \"_________________________________________________________________\\n\",\n+      \"spatial_dropout1d (SpatialDr (None, 250, 13)           0         \\n\",\n+      \"_________________________________________________________________\\n\",\n+      \"batch_normalization (BatchNo (None, 250, 13)           52        \\n\",\n+      \"_________________________________________________________________\\n\",\n+      \"conv1d_1 (Conv1D)            (None, 250, 118)          23128     \\n\",\n+      \"_________________________________________________________________\\n\",\n+      \"max_pooling1d_1 (MaxPooling1 (None, 250, 118)          0         \\n\",\n+      \"_________________________________________________________________\\n\",\n+      \"spatial_dropout1d_1 (Spatial (None, 250, 118)          0         \\n\",\n+      \"_________________________________________________________________\\n\",\n+      \"batch_normalization_1 (Batch (None, 250, 118)          472       \\n\",\n+      \"_________________________________________________________________\\n\",\n+      \"conv1d_2 (Conv1D)            (None, 250, 100)          59100     \\n\",\n+      \"_________________________________________________________________\\n\",\n+      \"max_pooling1d_2 (MaxPooling1 (None, 62, 100)           0         \\n\",\n+      \"_________________________________________________________________\\n\",\n+      \"batch_normalization_2 (Batch (None, 62, 100)           400       \\n\",\n+      \"_________________________________________________________________\\n\",\n+      \"spatial_dropout1d_2 (Spatial (None, 62, 100)           0         \\n\",\n+      \"_________________________________________________________________\\n\",\n+      \"flatten (Flatten)            (None, 6200)              0         \\n\",\n+      \"_________________________________________________________________\\n\",\n+      \"dense (Dense)                (None, 224)               1389024   \\n\",\n+      \"_________________________________________________________________\\n\",\n+      \"dense_1 (Dense)              (None, 4)                 900       \\n\",\n+      \"=================================================================\\n\",\n+      \"Total params: 1,473,128\\n\",\n+      \"Trainable params: 1,472,666\\n\",\n+      \"Non-trainable params: 462\\n\",\n+      \"_________________________________________________________________\\n\",\n+      \"Epoch 1/15\\n\"\n+     ]\n+    },\n+    {\n+     \"name\": \"stderr\",\n+     \"output_type\": \"stream\",\n+     \"text\": [\n+      \"2022-07-05 11:12:17.588290: I tensorflow/compiler/mlir/mlir_graph_optimization_pass.cc:185] None of the MLIR Optimization Passes are enabled (registered 2)\\n\",\n+      \"2022-07-05 11:12:18.292066: I tensorflow/stream_executor/cuda/cuda_dnn.cc:369] Loaded cuDNN version 8201\\n\",\n+      \"2022-07-05 11:12:19.716785: I tensorflow/stream_executor/cuda/cuda_blas.cc:1760] TensorFloat-32 will be used for the matrix multiplication. This will only be logged once.\\n\"\n+     ]\n+    },\n+    {\n+     \"name\": \"stdout\",\n+     \"output_type\": \"stream\",\n+     \"text\": [\n+      \"157/157 [==============================] - 6s 15ms/step - loss: 1.1785 - accuracy: 0.4720 - val_loss: 1.0697 - val_accuracy: 0.5406\\n\",\n+      \"Epoch 2/15\\n\",\n+      \"157/157 [==============================] - 2s 12ms/step - loss: 0.8855 - accuracy: 0.5942 - val_loss: 0.8218 - val_accuracy: 0.6382\\n\",\n+      \"Epoch 3/15\\n\",\n+      \"157/157 [==============================] - 2s 13ms/step - loss: 0.8203 - accuracy: 0.6270 - val_loss: 0.7667 - val_accuracy: 0.6590\\n\",\n+      \"Epoch 4/15\\n\",\n+      \"157/157 [==============================] - 2s 13ms/step - loss: 0.7834 - accuracy: 0.6495 - val_loss: 0.7576 - val_accuracy: 0.6573\\n\",\n+      \"Epoch 5/15\\n\",\n+      \"157/157 [==============================] - 2s 12ms/step - loss: 0.7542 - accuracy: 0.6646 - val_loss: 0.7313 - val_accuracy: 0.6771\\n\",\n+      \"Epoch 6/15\\n\",\n+      \"157/157 [==============================] - 2s 13ms/step - loss: 0.7306 - accuracy: 0.6782 - val_loss: 0.6904 - val_accuracy: 0.6965\\n\",\n+      \"Epoch 7/15\\n\",\n+      \"157/157 [==============================] - 2s 12ms/step - loss: 0.7103 - accuracy: 0.6854 - val_loss: 0.6877 - val_accuracy: 0.6962\\n\",\n+      \"Epoch 8/15\\n\",\n+      \"157/157 [==============================] - 2s 12ms/step - loss: 0.6967 - accuracy: 0.6955 - val_loss: 0.6715 - val_accuracy: 0.7071\\n\",\n+      \"Epoch 9/15\\n\",\n+      \"157/157 [==============================] - 2s 12ms/step - loss: 0.6839 - accuracy: 0.7046 - val_loss: 0.6696 - val_accuracy: 0.7054\\n\",\n+      \"Epoch 10/15\\n\",\n+      \"157/157 [==============================] - 2s 12ms/step - loss: 0.6667 - accuracy: 0.7079 - val_loss: 0.6464 - val_accuracy: 0.7202\\n\",\n+      \"Epoch 11/15\\n\",\n+      \"157/157 [==============================] - 2s 12ms/step - loss: 0.6530 - accuracy: 0.7190 - val_loss: 0.6579 - val_accuracy: 0.7125\\n\",\n+      \"Epoch 12/15\\n\",\n+      \"157/157 [==============================] - 2s 12ms/step - loss: 0.6513 - accuracy: 0.7193 - val_loss: 0.6522 - val_accuracy: 0.7145\\n\",\n+      \"Epoch 13/15\\n\",\n+      \"157/157 [==============================] - 2s 12ms/step - loss: 0.6408 - accuracy: 0.7206 - val_loss: 0.6475 - val_accuracy: 0.7151\\n\",\n+      \"Epoch 14/15\\n\",\n+      \"157/157 [==============================] - 2s 12ms/step - loss: 0.6266 - accuracy: 0.7287 - val_loss: 0.6454 - val_accuracy: 0.7203\\n\",\n+      \"Epoch 15/15\\n\",\n+      \"157/157 [==============================] - 2s 12ms/step - loss: 0.6243 - accuracy: 0.7278 - val_loss: 0.6466 - val_accuracy: 0.7182\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13996, 500), before header:(5991, 500)\\n\",\n+      \"Confusion matrix:\\n\",\n+      \"H V P M \\n\",\n+      \"[[4729   20   30  175]\\n\",\n+      \" [  49 3519  838  692]\\n\",\n+      \" [  73 1529 2864  508]\\n\",\n+      \" [ 231 1218  420 3092]]\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0101: 0.8113773953069495\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0011: 0.7605443538299895\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0110: 0.8494021113723921\\n\",\n+      \"Test accuracy: 0.7106619302546655\\n\",\n+      \"\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13996, 500), before header:(5992, 500)\\n\",\n+      \"Confusion matrix:\\n\",\n+      \"H V P M \\n\",\n+      \"[[4783   14   33  124]\\n\",\n+      \" [  77 3131 1034  857]\\n\",\n+      \" [ 114 1337 2981  542]\\n\",\n+      \" [ 343  996  419 3203]]\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0101: 0.8053832299379627\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0011: 0.7579547728637183\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0110: 0.8473083850310186\\n\",\n+      \"Test accuracy: 0.7053231939163498\\n\",\n+      \"\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13996, 500), before header:(5991, 500)\\n\",\n+      \"Confusion matrix:\\n\",\n+      \"H V P M \\n\",\n+      \"[[4780   22   21  131]\\n\",\n+      \" [  67 3325  923  783]\\n\",\n+      \" [  99 1459 2829  587]\\n\",\n+      \" [ 321 1069  395 3176]]\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0101: 0.8046230049532196\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0011: 0.7595437034072147\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0110: 0.8477510381748137\\n\",\n+      \"Test accuracy: 0.705958873267624\\n\",\n+      \"\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13996, 500), before header:(5991, 500)\\n\",\n+      \"Confusion matrix:\\n\",\n+      \"H V P M \\n\",\n+      \"[[4737   26   33  158]\\n\",\n+      \" [  39 3516  877  666]\\n\",\n+      \" [  59 1545 2918  452]\\n\",\n+      \" [ 210 1248  458 3045]]\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0101: 0.8116275579126432\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0011: 0.7600440286186021\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0110: 0.8508530544854155\\n\",\n+      \"Test accuracy: 0.7112623205083304\\n\",\n+      \"\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13996, 500), before header:(5991, 500)\\n\",\n+      \"Confusion matrix:\\n\",\n+      \"H V P M \\n\",\n+      \"[[4747   25   28  154]\\n\",\n+      \" [  59 3450  854  735]\\n\",\n+      \" [  76 1586 2816  496]\\n\",\n+      \" [ 238 1198  419 3106]]\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0101: 0.8083254115174864\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0011: 0.7563916545754741\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0110: 0.8481012658227848\\n\",\n+      \"Test accuracy: 0.7064091659578726\\n\",\n+      \"\\n\",\n+      \"\\n\",\n+      \"\\n\",\n+      \"created a json file of the test accuracies at /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/result_vary_raining_data_20220705-1112.json\\n\",\n+      \"------------- dataset 0: FPGA2.5cm with max_train_files=3 ----------------------------------\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13996, 500), before header:(5991, 500)\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13996, 500), before header:(5991, 500)\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13996, 500), before header:(5991, 500)\\n\",\n+      \"Model: \\\"sequential_1\\\"\\n\",\n+      \"_________________________________________________________________\\n\",\n+      \"Layer (type)                 Output Shape              Param #   \\n\",\n+      \"=================================================================\\n\",\n+      \"reshape_1 (Reshape)          (None, 500, 1)            0         \\n\",\n+      \"_________________________________________________________________\\n\",\n+      \"gaussian_noise_1 (GaussianNo (None, 500, 1)            0         \\n\",\n+      \"_________________________________________________________________\\n\",\n+      \"conv1d_3 (Conv1D)            (None, 500, 13)           52        \\n\",\n+      \"_________________________________________________________________\\n\",\n+      \"max_pooling1d_3 (MaxPooling1 (None, 250, 13)           0         \\n\",\n+      \"_________________________________________________________________\\n\",\n+      \"spatial_dropout1d_3 (Spatial (None, 250, 13)           0         \\n\",\n+      \"_________________________________________________________________\\n\",\n+      \"batch_normalization_3 (Batch (None, 250, 13)           52        \\n\",\n+      \"_________________________________________________________________\\n\",\n+      \"conv1d_4 (Conv1D)            (None, 250, 118)          23128     \\n\",\n+      \"_________________________________________________________________\\n\",\n+      \"max_pooling1d_4 (MaxPooling1 (None, 250, 118)          0         \\n\",\n+      \"_________________________________________________________________\\n\",\n+      \"spatial_dropout1d_4 (Spatial (None, 250, 118)          0         \\n\",\n+      \"_________________________________________________________________\\n\",\n+      \"batch_normalization_4 (Batch (None, 250, 118)          472       \\n\",\n+      \"_________________________________________________________________\\n\",\n+      \"conv1d_5 (Conv1D)            (None, 250, 100)          59100     \\n\",\n+      \"_________________________________________________________________\\n\",\n+      \"max_pooling1d_5 (MaxPooling1 (None, 62, 100)           0         \\n\",\n+      \"_________________________________________________________________\\n\",\n+      \"batch_normalization_5 (Batch (None, 62, 100)           400       \\n\",\n+      \"_________________________________________________________________\\n\",\n+      \"spatial_dropout1d_5 (Spatial (None, 62, 100)           0         \\n\",\n+      \"_________________________________________________________________\\n\",\n+      \"flatten_1 (Flatten)          (None, 6200)              0         \\n\",\n+      \"_________________________________________________________________\\n\",\n+      \"dense_2 (Dense)              (None, 224)               1389024   \\n\",\n+      \"_________________________________________________________________\\n\",\n+      \"dense_3 (Dense)              (None, 4)                 900       \\n\",\n+      \"=================================================================\\n\",\n+      \"Total params: 1,473,128\\n\",\n+      \"Trainable params: 1,472,666\\n\",\n+      \"Non-trainable params: 462\\n\",\n+      \"_________________________________________________________________\\n\",\n+      \"Epoch 1/15\\n\",\n+      \"313/313 [==============================] - 4s 12ms/step - loss: 1.0520 - accuracy: 0.5210 - val_loss: 0.8314 - val_accuracy: 0.6235\\n\",\n+      \"Epoch 2/15\\n\",\n+      \"313/313 [==============================] - 3s 11ms/step - loss: 0.8210 - accuracy: 0.6308 - val_loss: 0.7551 - val_accuracy: 0.6716\\n\",\n+      \"Epoch 3/15\\n\",\n+      \"313/313 [==============================] - 3s 11ms/step - loss: 0.7680 - accuracy: 0.6602 - val_loss: 0.7215 - val_accuracy: 0.6853\\n\",\n+      \"Epoch 4/15\\n\",\n+      \"313/313 [==============================] - 3s 11ms/step - loss: 0.7398 - accuracy: 0.6738 - val_loss: 0.7294 - val_accuracy: 0.6865\\n\",\n+      \"Epoch 5/15\\n\",\n+      \"313/313 [==============================] - 3s 11ms/step - loss: 0.7162 - accuracy: 0.6856 - val_loss: 0.6627 - val_accuracy: 0.7133\\n\",\n+      \"Epoch 6/15\\n\",\n+      \"313/313 [==============================] - 3s 11ms/step - loss: 0.7006 - accuracy: 0.6918 - val_loss: 0.6940 - val_accuracy: 0.7001\\n\",\n+      \"Epoch 7/15\\n\",\n+      \"313/313 [==============================] - 3s 11ms/step - loss: 0.6896 - accuracy: 0.6969 - val_loss: 0.6682 - val_accuracy: 0.7112\\n\",\n+      \"Epoch 8/15\\n\",\n+      \"313/313 [==============================] - 3s 11ms/step - loss: 0.6784 - accuracy: 0.7020 - val_loss: 0.6593 - val_accuracy: 0.7144\\n\",\n+      \"Epoch 9/15\\n\",\n+      \"313/313 [==============================] - 3s 11ms/step - loss: 0.6675 - accuracy: 0.7063 - val_loss: 0.6268 - val_accuracy: 0.7224\\n\",\n+      \"Epoch 10/15\\n\",\n+      \"313/313 [==============================] - 3s 11ms/step - loss: 0.6620 - accuracy: 0.7099 - val_loss: 0.6509 - val_accuracy: 0.7152\\n\",\n+      \"Epoch 11/15\\n\",\n+      \"313/313 [==============================] - 3s 10ms/step - loss: 0.6525 - accuracy: 0.7149 - val_loss: 0.6299 - val_accuracy: 0.7237\\n\",\n+      \"Epoch 12/15\\n\",\n+      \"313/313 [==============================] - 3s 11ms/step - loss: 0.6486 - accuracy: 0.7167 - val_loss: 0.6407 - val_accuracy: 0.7226\\n\",\n+      \"Epoch 13/15\\n\",\n+      \"313/313 [==============================] - 3s 11ms/step - loss: 0.6431 - accuracy: 0.7193 - val_loss: 0.6375 - val_accuracy: 0.7227\\n\",\n+      \"Epoch 00013: early stopping\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13996, 500), before header:(5991, 500)\\n\",\n+      \"Confusion matrix:\\n\",\n+      \"H V P M \\n\",\n+      \"[[4663    8   43  240]\\n\",\n+      \" [  28 2657 1497  916]\\n\",\n+      \" [  46  835 3631  462]\\n\",\n+      \" [ 163  716  699 3383]]\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0101: 0.8032721268824736\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0011: 0.7770550858057738\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0110: 0.8540051033171562\\n\",\n+      \"Test accuracy: 0.7171661580027018\\n\",\n+      \"\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13996, 500), before header:(5992, 500)\\n\",\n+      \"Confusion matrix:\\n\",\n+      \"H V P M \\n\",\n+      \"[[4661    5   66  222]\\n\",\n+      \" [  32 2639 1637  791]\\n\",\n+      \" [  26  793 3759  396]\\n\",\n+      \" [ 137  825  781 3218]]\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0101: 0.7997298379027417\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0011: 0.7750150090054032\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0110: 0.8538122873724234\\n\",\n+      \"Test accuracy: 0.7142785671402841\\n\",\n+      \"\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13996, 500), before header:(5991, 500)\\n\",\n+      \"Confusion matrix:\\n\",\n+      \"H V P M \\n\",\n+      \"[[4654    4   53  243]\\n\",\n+      \" [  37 2665 1585  811]\\n\",\n+      \" [  44  732 3755  443]\\n\",\n+      \" [ 165  767  742 3287]]\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0101: 0.8023215089808375\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0011: 0.7798569069895432\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0110: 0.8548556561765147\\n\",\n+      \"Test accuracy: 0.7185170360734477\\n\",\n+      \"\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13996, 500), before header:(5991, 500)\\n\",\n+      \"Confusion matrix:\\n\",\n+      \"H V P M \\n\",\n+      \"[[4675    4   60  215]\\n\",\n+      \" [  32 2724 1494  848]\\n\",\n+      \" [  39  768 3726  441]\\n\",\n+      \" [ 129  732  744 3356]]\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0101: 0.8085255416020414\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0011: 0.7856106469204983\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0110: 0.8549056886976535\\n\",\n+      \"Test accuracy: 0.7245209386100966\\n\",\n+      \"\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13996, 500), before header:(5991, 500)\\n\",\n+      \"Confusion matrix:\\n\",\n+      \"H V P M \\n\",\n+      \"[[4688    8   41  217]\\n\",\n+      \" [  33 2686 1451  928]\\n\",\n+      \" [  45  818 3658  453]\\n\",\n+      \" [ 155  699  730 3377]]\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0101: 0.8066243057987692\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0011: 0.7821584029619253\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0110: 0.8530544854155201\\n\",\n+      \"Test accuracy: 0.7209185970881072\\n\",\n+      \"\\n\",\n+      \"\\n\",\n+      \"\\n\",\n+      \"created a json file of the test accuracies at /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/result_vary_raining_data_20220705-1112.json\\n\",\n+      \"------------- dataset 0: FPGA2.5cm with max_train_files=4 ----------------------------------\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13996, 500), before header:(5991, 500)\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13996, 500), before header:(5991, 500)\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13996, 500), before header:(5991, 500)\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13996, 500), before header:(5991, 500)\\n\",\n+      \"Model: \\\"sequential_2\\\"\\n\",\n+      \"_________________________________________________________________\\n\",\n+      \"Layer (type)                 Output Shape              Param #   \\n\",\n+      \"=================================================================\\n\",\n+      \"reshape_2 (Reshape)          (None, 500, 1)            0         \\n\",\n+      \"_________________________________________________________________\\n\",\n+      \"gaussian_noise_2 (GaussianNo (None, 500, 1)            0         \\n\",\n+      \"_________________________________________________________________\\n\",\n+      \"conv1d_6 (Conv1D)            (None, 500, 13)           52        \\n\",\n+      \"_________________________________________________________________\\n\",\n+      \"max_pooling1d_6 (MaxPooling1 (None, 250, 13)           0         \\n\",\n+      \"_________________________________________________________________\\n\",\n+      \"spatial_dropout1d_6 (Spatial (None, 250, 13)           0         \\n\",\n+      \"_________________________________________________________________\\n\",\n+      \"batch_normalization_6 (Batch (None, 250, 13)           52        \\n\",\n+      \"_________________________________________________________________\\n\",\n+      \"conv1d_7 (Conv1D)            (None, 250, 118)          23128     \\n\",\n+      \"_________________________________________________________________\\n\",\n+      \"max_pooling1d_7 (MaxPooling1 (None, 250, 118)          0         \\n\",\n+      \"_________________________________________________________________\\n\",\n+      \"spatial_dropout1d_7 (Spatial (None, 250, 118)          0         \\n\",\n+      \"_________________________________________________________________\\n\",\n+      \"batch_normalization_7 (Batch (None, 250, 118)          472       \\n\",\n+      \"_________________________________________________________________\\n\",\n+      \"conv1d_8 (Conv1D)            (None, 250, 100)          59100     \\n\",\n+      \"_________________________________________________________________\\n\",\n+      \"max_pooling1d_8 (MaxPooling1 (None, 62, 100)           0         \\n\",\n+      \"_________________________________________________________________\\n\",\n+      \"batch_normalization_8 (Batch (None, 62, 100)           400       \\n\",\n+      \"_________________________________________________________________\\n\",\n+      \"spatial_dropout1d_8 (Spatial (None, 62, 100)           0         \\n\",\n+      \"_________________________________________________________________\\n\",\n+      \"flatten_2 (Flatten)          (None, 6200)              0         \\n\",\n+      \"_________________________________________________________________\\n\",\n+      \"dense_4 (Dense)              (None, 224)               1389024   \\n\",\n+      \"_________________________________________________________________\\n\",\n+      \"dense_5 (Dense)              (None, 4)                 900       \\n\",\n+      \"=================================================================\\n\",\n+      \"Total params: 1,473,128\\n\",\n+      \"Trainable params: 1,472,666\\n\",\n+      \"Non-trainable params: 462\\n\",\n+      \"_________________________________________________________________\\n\",\n+      \"Epoch 1/15\\n\",\n+      \"469/469 [==============================] - 6s 11ms/step - loss: 1.0162 - accuracy: 0.5250 - val_loss: 0.8139 - val_accuracy: 0.6324\\n\",\n+      \"Epoch 2/15\\n\",\n+      \"469/469 [==============================] - 5s 10ms/step - loss: 0.8056 - accuracy: 0.6406 - val_loss: 0.7283 - val_accuracy: 0.6877\\n\",\n+      \"Epoch 3/15\\n\",\n+      \"469/469 [==============================] - 5s 10ms/step - loss: 0.7588 - accuracy: 0.6671 - val_loss: 0.7022 - val_accuracy: 0.6975\\n\",\n+      \"Epoch 4/15\\n\",\n+      \"469/469 [==============================] - 5s 10ms/step - loss: 0.7312 - accuracy: 0.6798 - val_loss: 0.6655 - val_accuracy: 0.7169\\n\",\n+      \"Epoch 5/15\\n\",\n+      \"469/469 [==============================] - 5s 10ms/step - loss: 0.7090 - accuracy: 0.6903 - val_loss: 0.6493 - val_accuracy: 0.7223\\n\",\n+      \"Epoch 6/15\\n\",\n+      \"469/469 [==============================] - 5s 10ms/step - loss: 0.6938 - accuracy: 0.6975 - val_loss: 0.6428 - val_accuracy: 0.7212\\n\",\n+      \"Epoch 7/15\\n\",\n+      \"469/469 [==============================] - 5s 10ms/step - loss: 0.6834 - accuracy: 0.7046 - val_loss: 0.6459 - val_accuracy: 0.7170\\n\",\n+      \"Epoch 8/15\\n\",\n+      \"469/469 [==============================] - 5s 10ms/step - loss: 0.6694 - accuracy: 0.7107 - val_loss: 0.6239 - val_accuracy: 0.7311\\n\",\n+      \"Epoch 9/15\\n\",\n+      \"469/469 [==============================] - 5s 10ms/step - loss: 0.6603 - accuracy: 0.7147 - val_loss: 0.6195 - val_accuracy: 0.7288\\n\",\n+      \"Epoch 10/15\\n\",\n+      \"469/469 [==============================] - 5s 10ms/step - loss: 0.6522 - accuracy: 0.7186 - val_loss: 0.6209 - val_accuracy: 0.7299\\n\",\n+      \"Epoch 11/15\\n\",\n+      \"469/469 [==============================] - 5s 10ms/step - loss: 0.6419 - accuracy: 0.7233 - val_loss: 0.6080 - val_accuracy: 0.7375\\n\",\n+      \"Epoch 12/15\\n\",\n+      \"469/469 [==============================] - 5s 10ms/step - loss: 0.6346 - accuracy: 0.7252 - val_loss: 0.6141 - val_accuracy: 0.7302\\n\",\n+      \"Epoch 13/15\\n\",\n+      \"469/469 [==============================] - 5s 10ms/step - loss: 0.6268 - accuracy: 0.7288 - val_loss: 0.6060 - val_accuracy: 0.7346\\n\",\n+      \"Epoch 14/15\\n\",\n+      \"469/469 [==============================] - 5s 10ms/step - loss: 0.6220 - accuracy: 0.7298 - val_loss: 0.6049 - val_accuracy: 0.7362\\n\",\n+      \"Epoch 15/15\\n\",\n+      \"469/469 [==============================] - 5s 10ms/step - loss: 0.6214 - accuracy: 0.7309 - val_loss: 0.6073 - val_accuracy: 0.7363\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13996, 500), before header:(5991, 500)\\n\",\n+      \"Confusion matrix:\\n\",\n+      \"H V P M \\n\",\n+      \"[[4677   16   55  206]\\n\",\n+      \" [  19 3396 1007  676]\\n\",\n+      \" [  41 1262 3302  369]\\n\",\n+      \" [ 126 1060  553 3222]]\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0101: 0.8219842897883625\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0011: 0.7782058337919647\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0110: 0.8604592985440537\\n\",\n+      \"Test accuracy: 0.7303247110621904\\n\",\n+      \"\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13996, 500), before header:(5992, 500)\\n\",\n+      \"Confusion matrix:\\n\",\n+      \"H V P M \\n\",\n+      \"[[4636   13   94  211]\\n\",\n+      \" [  23 3243 1133  700]\\n\",\n+      \" [  31 1265 3346  332]\\n\",\n+      \" [ 124 1046  586 3205]]\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0101: 0.8155393235941565\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0011: 0.769661797078247\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0110: 0.8586651991194717\\n\",\n+      \"Test accuracy: 0.7219331598959375\\n\",\n+      \"\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13996, 500), before header:(5991, 500)\\n\",\n+      \"Confusion matrix:\\n\",\n+      \"H V P M \\n\",\n+      \"[[4685   20   64  185]\\n\",\n+      \" [  26 3296 1084  692]\\n\",\n+      \" [  42 1189 3366  377]\\n\",\n+      \" [ 153 1030  564 3214]]\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0101: 0.8199829889428129\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0011: 0.7779056386651323\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0110: 0.8591584529944464\\n\",\n+      \"Test accuracy: 0.7285235403011958\\n\",\n+      \"\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13996, 500), before header:(5991, 500)\\n\",\n+      \"Confusion matrix:\\n\",\n+      \"H V P M \\n\",\n+      \"[[4689   21   59  185]\\n\",\n+      \" [  14 3488  941  655]\\n\",\n+      \" [  27 1330 3296  321]\\n\",\n+      \" [ 109 1098  526 3228]]\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0101: 0.8275378996347625\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0011: 0.7796567769049882\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0110: 0.8638615099814879\\n\",\n+      \"Test accuracy: 0.7355280932606194\\n\",\n+      \"\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13996, 500), before header:(5991, 500)\\n\",\n+      \"Confusion matrix:\\n\",\n+      \"H V P M \\n\",\n+      \"[[4702   11   62  179]\\n\",\n+      \" [  25 3373  968  732]\\n\",\n+      \" [  36 1314 3290  334]\\n\",\n+      \" [ 143 1030  551 3237]]\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0101: 0.8236353629859409\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0011: 0.7766548256366639\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0110: 0.8608595587131636\\n\",\n+      \"Test accuracy: 0.7305748736678841\\n\",\n+      \"\\n\",\n+      \"\\n\",\n+      \"\\n\",\n+      \"created a json file of the test accuracies at /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/result_vary_raining_data_20220705-1112.json\\n\",\n+      \"------------- dataset 0: FPGA2.5cm with max_train_files=5 ----------------------------------\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13996, 500), before header:(5991, 500)\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13996, 500), before header:(5991, 500)\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13996, 500), before header:(5991, 500)\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13996, 500), before header:(5991, 500)\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13996, 500), before header:(5991, 500)\\n\",\n+      \"Model: \\\"sequential_3\\\"\\n\",\n+      \"_________________________________________________________________\\n\",\n+      \"Layer (type)                 Output Shape              Param #   \\n\",\n+      \"=================================================================\\n\",\n+      \"reshape_3 (Reshape)          (None, 500, 1)            0         \\n\",\n+      \"_________________________________________________________________\\n\",\n+      \"gaussian_noise_3 (GaussianNo (None, 500, 1)            0         \\n\",\n+      \"_________________________________________________________________\\n\",\n+      \"conv1d_9 (Conv1D)            (None, 500, 13)           52        \\n\",\n+      \"_________________________________________________________________\\n\",\n+      \"max_pooling1d_9 (MaxPooling1 (None, 250, 13)           0         \\n\",\n+      \"_________________________________________________________________\\n\",\n+      \"spatial_dropout1d_9 (Spatial (None, 250, 13)           0         \\n\",\n+      \"_________________________________________________________________\\n\",\n+      \"batch_normalization_9 (Batch (None, 250, 13)           52        \\n\",\n+      \"_________________________________________________________________\\n\",\n+      \"conv1d_10 (Conv1D)           (None, 250, 118)          23128     \\n\",\n+      \"_________________________________________________________________\\n\",\n+      \"max_pooling1d_10 (MaxPooling (None, 250, 118)          0         \\n\",\n+      \"_________________________________________________________________\\n\",\n+      \"spatial_dropout1d_10 (Spatia (None, 250, 118)          0         \\n\",\n+      \"_________________________________________________________________\\n\",\n+      \"batch_normalization_10 (Batc (None, 250, 118)          472       \\n\",\n+      \"_________________________________________________________________\\n\",\n+      \"conv1d_11 (Conv1D)           (None, 250, 100)          59100     \\n\",\n+      \"_________________________________________________________________\\n\",\n+      \"max_pooling1d_11 (MaxPooling (None, 62, 100)           0         \\n\",\n+      \"_________________________________________________________________\\n\",\n+      \"batch_normalization_11 (Batc (None, 62, 100)           400       \\n\",\n+      \"_________________________________________________________________\\n\",\n+      \"spatial_dropout1d_11 (Spatia (None, 62, 100)           0         \\n\",\n+      \"_________________________________________________________________\\n\",\n+      \"flatten_3 (Flatten)          (None, 6200)              0         \\n\",\n+      \"_________________________________________________________________\\n\",\n+      \"dense_6 (Dense)              (None, 224)               1389024   \\n\",\n+      \"_________________________________________________________________\\n\",\n+      \"dense_7 (Dense)              (None, 4)                 900       \\n\",\n+      \"=================================================================\\n\",\n+      \"Total params: 1,473,128\\n\",\n+      \"Trainable params: 1,472,666\\n\",\n+      \"Non-trainable params: 462\\n\",\n+      \"_________________________________________________________________\\n\",\n+      \"Epoch 1/15\\n\",\n+      \"625/625 [==============================] - 7s 10ms/step - loss: 1.0020 - accuracy: 0.5435 - val_loss: 0.8024 - val_accuracy: 0.6384\\n\",\n+      \"Epoch 2/15\\n\",\n+      \"625/625 [==============================] - 6s 10ms/step - loss: 0.8083 - accuracy: 0.6351 - val_loss: 0.7393 - val_accuracy: 0.6682\\n\",\n+      \"Epoch 3/15\\n\",\n+      \"625/625 [==============================] - 6s 10ms/step - loss: 0.7543 - accuracy: 0.6620 - val_loss: 0.6894 - val_accuracy: 0.6945\\n\",\n+      \"Epoch 4/15\\n\",\n+      \"625/625 [==============================] - 6s 10ms/step - loss: 0.7264 - accuracy: 0.6761 - val_loss: 0.6730 - val_accuracy: 0.7052\\n\",\n+      \"Epoch 5/15\\n\",\n+      \"625/625 [==============================] - 6s 10ms/step - loss: 0.7081 - accuracy: 0.6879 - val_loss: 0.6605 - val_accuracy: 0.7085\\n\",\n+      \"Epoch 6/15\\n\",\n+      \"625/625 [==============================] - 6s 10ms/step - loss: 0.6905 - accuracy: 0.6969 - val_loss: 0.6452 - val_accuracy: 0.7205\\n\",\n+      \"Epoch 7/15\\n\",\n+      \"625/625 [==============================] - 6s 10ms/step - loss: 0.6800 - accuracy: 0.7014 - val_loss: 0.6398 - val_accuracy: 0.7209\\n\",\n+      \"Epoch 8/15\\n\",\n+      \"625/625 [==============================] - 6s 10ms/step - loss: 0.6671 - accuracy: 0.7102 - val_loss: 0.6238 - val_accuracy: 0.7318\\n\",\n+      \"Epoch 9/15\\n\",\n+      \"625/625 [==============================] - 6s 10ms/step - loss: 0.6547 - accuracy: 0.7155 - val_loss: 0.6207 - val_accuracy: 0.7288\\n\",\n+      \"Epoch 10/15\\n\",\n+      \"625/625 [==============================] - 6s 10ms/step - loss: 0.6424 - accuracy: 0.7222 - val_loss: 0.6036 - val_accuracy: 0.7415\\n\",\n+      \"Epoch 11/15\\n\",\n+      \"625/625 [==============================] - 6s 10ms/step - loss: 0.6335 - accuracy: 0.7261 - val_loss: 0.5951 - val_accuracy: 0.7449\\n\",\n+      \"Epoch 12/15\\n\",\n+      \"625/625 [==============================] - 6s 10ms/step - loss: 0.6237 - accuracy: 0.7321 - val_loss: 0.5917 - val_accuracy: 0.7484\\n\",\n+      \"Epoch 13/15\\n\",\n+      \"625/625 [==============================] - 6s 10ms/step - loss: 0.6187 - accuracy: 0.7363 - val_loss: 0.5837 - val_accuracy: 0.7508\\n\",\n+      \"Epoch 14/15\\n\",\n+      \"625/625 [==============================] - 6s 10ms/step - loss: 0.6121 - accuracy: 0.7376 - val_loss: 0.5882 - val_accuracy: 0.7476\\n\",\n+      \"Epoch 15/15\\n\",\n+      \"625/625 [==============================] - 6s 10ms/step - loss: 0.6069 - accuracy: 0.7380 - val_loss: 0.5805 - val_accuracy: 0.7527\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13996, 500), before header:(5991, 500)\\n\",\n+      \"Confusion matrix:\\n\",\n+      \"H V P M \\n\",\n+      \"[[4759   20   47  128]\\n\",\n+      \" [  22 3072 1207  797]\\n\",\n+      \" [  42  891 3624  417]\\n\",\n+      \" [ 215  790  558 3398]]\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0101: 0.8269875419022364\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0011: 0.7940161104718066\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0110: 0.8652624205733727\\n\",\n+      \"Test accuracy: 0.7431330364737079\\n\",\n+      \"\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13996, 500), before header:(5992, 500)\\n\",\n+      \"Confusion matrix:\\n\",\n+      \"H V P M \\n\",\n+      \"[[4728   22   70  134]\\n\",\n+      \" [  30 3068 1220  781]\\n\",\n+      \" [  31  938 3626  379]\\n\",\n+      \" [ 188  848  542 3383]]\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0101: 0.8272463478086852\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0011: 0.7893736241745047\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0110: 0.8647688613167901\\n\",\n+      \"Test accuracy: 0.74069441664999\\n\",\n+      \"\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13996, 500), before header:(5991, 500)\\n\",\n+      \"Confusion matrix:\\n\",\n+      \"H V P M \\n\",\n+      \"[[4761   16   50  127]\\n\",\n+      \" [  26 3121 1196  755]\\n\",\n+      \" [  36  930 3578  430]\\n\",\n+      \" [ 214  816  525 3406]]\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0101: 0.826687346775404\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0011: 0.7936658828238355\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0110: 0.8672136888977836\\n\",\n+      \"Test accuracy: 0.7437834592485115\\n\",\n+      \"\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13996, 500), before header:(5991, 500)\\n\",\n+      \"Confusion matrix:\\n\",\n+      \"H V P M \\n\",\n+      \"[[4761   25   42  126]\\n\",\n+      \" [  18 3108 1187  785]\\n\",\n+      \" [  38  864 3690  382]\\n\",\n+      \" [ 173  827  568 3393]]\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0101: 0.8327412818331916\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0011: 0.7977685495572122\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0110: 0.8656626807424826\\n\",\n+      \"Test accuracy: 0.7480862560664432\\n\",\n+      \"\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13996, 500), before header:(5991, 500)\\n\",\n+      \"Confusion matrix:\\n\",\n+      \"H V P M \\n\",\n+      \"[[4771   22   46  115]\\n\",\n+      \" [  39 3038 1162  859]\\n\",\n+      \" [  36  929 3600  409]\\n\",\n+      \" [ 206  799  515 3441]]\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0101: 0.8300395256916996\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0011: 0.7922649722319508\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0110: 0.863661379896933\\n\",\n+      \"Test accuracy: 0.7429829389102917\\n\",\n+      \"\\n\",\n+      \"\\n\",\n+      \"\\n\",\n+      \"created a json file of the test accuracies at /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/result_vary_raining_data_20220705-1112.json\\n\",\n+      \"------------- dataset 0: FPGA2.5cm with max_train_files=6 ----------------------------------\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13996, 500), before header:(5991, 500)\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13996, 500), before header:(5991, 500)\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13996, 500), before header:(5991, 500)\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13996, 500), before header:(5991, 500)\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13996, 500), before header:(5991, 500)\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13996, 500), before header:(5991, 500)\\n\",\n+      \"Model: \\\"sequential_4\\\"\\n\",\n+      \"_________________________________________________________________\\n\",\n+      \"Layer (type)                 Output Shape              Param #   \\n\",\n+      \"=================================================================\\n\",\n+      \"reshape_4 (Reshape)          (None, 500, 1)            0         \\n\",\n+      \"_________________________________________________________________\\n\",\n+      \"gaussian_noise_4 (GaussianNo (None, 500, 1)            0         \\n\",\n+      \"_________________________________________________________________\\n\",\n+      \"conv1d_12 (Conv1D)           (None, 500, 13)           52        \\n\",\n+      \"_________________________________________________________________\\n\",\n+      \"max_pooling1d_12 (MaxPooling (None, 250, 13)           0         \\n\",\n+      \"_________________________________________________________________\\n\",\n+      \"spatial_dropout1d_12 (Spatia (None, 250, 13)           0         \\n\",\n+      \"_________________________________________________________________\\n\",\n+      \"batch_normalization_12 (Batc (None, 250, 13)           52        \\n\",\n+      \"_________________________________________________________________\\n\",\n+      \"conv1d_13 (Conv1D)           (None, 250, 118)          23128     \\n\",\n+      \"_________________________________________________________________\\n\",\n+      \"max_pooling1d_13 (MaxPooling (None, 250, 118)          0         \\n\",\n+      \"_________________________________________________________________\\n\",\n+      \"spatial_dropout1d_13 (Spatia (None, 250, 118)          0         \\n\",\n+      \"_________________________________________________________________\\n\",\n+      \"batch_normalization_13 (Batc (None, 250, 118)          472       \\n\",\n+      \"_________________________________________________________________\\n\",\n+      \"conv1d_14 (Conv1D)           (None, 250, 100)          59100     \\n\",\n+      \"_________________________________________________________________\\n\",\n+      \"max_pooling1d_14 (MaxPooling (None, 62, 100)           0         \\n\",\n+      \"_________________________________________________________________\\n\",\n+      \"batch_normalization_14 (Batc (None, 62, 100)           400       \\n\",\n+      \"_________________________________________________________________\\n\",\n+      \"spatial_dropout1d_14 (Spatia (None, 62, 100)           0         \\n\",\n+      \"_________________________________________________________________\\n\",\n+      \"flatten_4 (Flatten)          (None, 6200)              0         \\n\",\n+      \"_________________________________________________________________\\n\",\n+      \"dense_8 (Dense)              (None, 224)               1389024   \\n\",\n+      \"_________________________________________________________________\\n\",\n+      \"dense_9 (Dense)              (None, 4)                 900       \\n\",\n+      \"=================================================================\\n\",\n+      \"Total params: 1,473,128\\n\",\n+      \"Trainable params: 1,472,666\\n\",\n+      \"Non-trainable params: 462\\n\",\n+      \"_________________________________________________________________\\n\",\n+      \"Epoch 1/15\\n\",\n+      \"781/781 [==============================] - 9s 10ms/step - loss: 0.9166 - accuracy: 0.5879 - val_loss: 0.7065 - val_accuracy: 0.6928\\n\",\n+      \"Epoch 2/15\\n\",\n+      \"781/781 [==============================] - 7s 10ms/step - loss: 0.7321 - accuracy: 0.6797 - val_loss: 0.6602 - val_accuracy: 0.7160\\n\",\n+      \"Epoch 3/15\\n\",\n+      \"781/781 [==============================] - 8s 10ms/step - loss: 0.6967 - accuracy: 0.6952 - val_loss: 0.6553 - val_accuracy: 0.7153\\n\",\n+      \"Epoch 4/15\\n\",\n+      \"781/781 [==============================] - 8s 10ms/step - loss: 0.6748 - accuracy: 0.7052 - val_loss: 0.6371 - val_accuracy: 0.7294\\n\",\n+      \"Epoch 5/15\\n\",\n+      \"781/781 [==============================] - 8s 10ms/step - loss: 0.6611 - accuracy: 0.7132 - val_loss: 0.6220 - val_accuracy: 0.7303\\n\",\n+      \"Epoch 6/15\\n\",\n+      \"781/781 [==============================] - 8s 10ms/step - loss: 0.6479 - accuracy: 0.7194 - val_loss: 0.6093 - val_accuracy: 0.7393\\n\",\n+      \"Epoch 7/15\\n\",\n+      \"781/781 [==============================] - 8s 10ms/step - loss: 0.6375 - accuracy: 0.7240 - val_loss: 0.6043 - val_accuracy: 0.7418\\n\",\n+      \"Epoch 8/15\\n\",\n+      \"781/781 [==============================] - 8s 10ms/step - loss: 0.6244 - accuracy: 0.7307 - val_loss: 0.5901 - val_accuracy: 0.7459\\n\",\n+      \"Epoch 9/15\\n\",\n+      \"781/781 [==============================] - 8s 10ms/step - loss: 0.6154 - accuracy: 0.7341 - val_loss: 0.5946 - val_accuracy: 0.7466\\n\",\n+      \"Epoch 10/15\\n\",\n+      \"781/781 [==============================] - 8s 10ms/step - loss: 0.6057 - accuracy: 0.7401 - val_loss: 0.5844 - val_accuracy: 0.7476\\n\",\n+      \"Epoch 11/15\\n\",\n+      \"781/781 [==============================] - 8s 10ms/step - loss: 0.5990 - accuracy: 0.7414 - val_loss: 0.5676 - val_accuracy: 0.7563\\n\",\n+      \"Epoch 12/15\\n\",\n+      \"781/781 [==============================] - 8s 10ms/step - loss: 0.5957 - accuracy: 0.7440 - val_loss: 0.5732 - val_accuracy: 0.7531\\n\",\n+      \"Epoch 13/15\\n\",\n+      \"781/781 [==============================] - 8s 10ms/step - loss: 0.5874 - accuracy: 0.7463 - val_loss: 0.5786 - val_accuracy: 0.7560\\n\",\n+      \"Epoch 14/15\\n\",\n+      \"781/781 [==============================] - 8s 10ms/step - loss: 0.5871 - accuracy: 0.7465 - val_loss: 0.5729 - val_accuracy: 0.7545\\n\",\n+      \"Epoch 15/15\\n\",\n+      \"781/781 [==============================] - 8s 10ms/step - loss: 0.5811 - accuracy: 0.7511 - val_loss: 0.5754 - val_accuracy: 0.7528\\n\",\n+      \"Epoch 00015: early stopping\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13996, 500), before header:(5991, 500)\\n\",\n+      \"Confusion matrix:\\n\",\n+      \"H V P M \\n\",\n+      \"[[4803   28   22  101]\\n\",\n+      \" [  20 3531  961  586]\\n\",\n+      \" [  60 1159 3452  303]\\n\",\n+      \" [ 243 1098  552 3068]]\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0101: 0.8315405013258618\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0011: 0.788362435583129\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0110: 0.8664632010807024\\n\",\n+      \"Test accuracy: 0.7431830689948467\\n\",\n+      \"\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13996, 500), before header:(5992, 500)\\n\",\n+      \"Confusion matrix:\\n\",\n+      \"H V P M \\n\",\n+      \"[[4793   22   35  104]\\n\",\n+      \" [  35 3410 1050  604]\\n\",\n+      \" [  55 1173 3476  270]\\n\",\n+      \" [ 229 1136  519 3077]]\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0101: 0.8297978787272363\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0011: 0.7805683410046028\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0110: 0.8661196718030818\\n\",\n+      \"Test accuracy: 0.7382429457674605\\n\",\n+      \"\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13996, 500), before header:(5991, 500)\\n\",\n+      \"Confusion matrix:\\n\",\n+      \"H V P M \\n\",\n+      \"[[4821   26   21   86]\\n\",\n+      \" [  28 3505  986  579]\\n\",\n+      \" [  65 1171 3418  320]\\n\",\n+      \" [ 249 1091  512 3109]]\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0101: 0.8309901435933357\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0011: 0.7874618502026317\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0110: 0.8678140791514485\\n\",\n+      \"Test accuracy: 0.7431330364737079\\n\",\n+      \"\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13996, 500), before header:(5991, 500)\\n\",\n+      \"Confusion matrix:\\n\",\n+      \"H V P M \\n\",\n+      \"[[4801   43   23   87]\\n\",\n+      \" [  23 3560  955  560]\\n\",\n+      \" [  46 1132 3520  276]\\n\",\n+      \" [ 194 1144  545 3078]]\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0101: 0.8371441436934007\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0011: 0.7928153299644769\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0110: 0.8669134937709512\\n\",\n+      \"Test accuracy: 0.7484364837144144\\n\",\n+      \"\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13996, 500), before header:(5991, 500)\\n\",\n+      \"Confusion matrix:\\n\",\n+      \"H V P M \\n\",\n+      \"[[4808   28   16  102]\\n\",\n+      \" [  37 3486  946  629]\\n\",\n+      \" [  65 1206 3439  264]\\n\",\n+      \" [ 221 1131  543 3066]]\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0101: 0.8325411517486366\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0011: 0.7840596387651974\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0110: 0.8642617701505979\\n\",\n+      \"Test accuracy: 0.740431280332216\\n\",\n+      \"\\n\",\n+      \"\\n\",\n+      \"\\n\",\n+      \"created a json file of the test accuracies at /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/result_vary_raining_data_20220705-1112.json\\n\",\n+      \"------------- dataset 0: FPGA2.5cm with max_train_files=7 ----------------------------------\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13996, 500), before header:(5991, 500)\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13996, 500), before header:(5991, 500)\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13996, 500), before header:(5991, 500)\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13996, 500), before header:(5991, 500)\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13996, 500), before header:(5991, 500)\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13996, 500), before header:(5991, 500)\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13996, 500), before header:(5991, 500)\\n\",\n+      \"Model: \\\"sequential_5\\\"\\n\",\n+      \"_________________________________________________________________\\n\",\n+      \"Layer (type)                 Output Shape              Param #   \\n\",\n+      \"=================================================================\\n\",\n+      \"reshape_5 (Reshape)          (None, 500, 1)            0         \\n\",\n+      \"_________________________________________________________________\\n\",\n+      \"gaussian_noise_5 (GaussianNo (None, 500, 1)            0         \\n\",\n+      \"_________________________________________________________________\\n\",\n+      \"conv1d_15 (Conv1D)           (None, 500, 13)           52        \\n\",\n+      \"_________________________________________________________________\\n\",\n+      \"max_pooling1d_15 (MaxPooling (None, 250, 13)           0         \\n\",\n+      \"_________________________________________________________________\\n\",\n+      \"spatial_dropout1d_15 (Spatia (None, 250, 13)           0         \\n\",\n+      \"_________________________________________________________________\\n\",\n+      \"batch_normalization_15 (Batc (None, 250, 13)           52        \\n\",\n+      \"_________________________________________________________________\\n\",\n+      \"conv1d_16 (Conv1D)           (None, 250, 118)          23128     \\n\",\n+      \"_________________________________________________________________\\n\",\n+      \"max_pooling1d_16 (MaxPooling (None, 250, 118)          0         \\n\",\n+      \"_________________________________________________________________\\n\",\n+      \"spatial_dropout1d_16 (Spatia (None, 250, 118)          0         \\n\",\n+      \"_________________________________________________________________\\n\",\n+      \"batch_normalization_16 (Batc (None, 250, 118)          472       \\n\",\n+      \"_________________________________________________________________\\n\",\n+      \"conv1d_17 (Conv1D)           (None, 250, 100)          59100     \\n\",\n+      \"_________________________________________________________________\\n\",\n+      \"max_pooling1d_17 (MaxPooling (None, 62, 100)           0         \\n\",\n+      \"_________________________________________________________________\\n\",\n+      \"batch_normalization_17 (Batc (None, 62, 100)           400       \\n\",\n+      \"_________________________________________________________________\\n\",\n+      \"spatial_dropout1d_17 (Spatia (None, 62, 100)           0         \\n\",\n+      \"_________________________________________________________________\\n\",\n+      \"flatten_5 (Flatten)          (None, 6200)              0         \\n\",\n+      \"_________________________________________________________________\\n\",\n+      \"dense_10 (Dense)             (None, 224)               1389024   \\n\",\n+      \"_________________________________________________________________\\n\",\n+      \"dense_11 (Dense)             (None, 4)                 900       \\n\",\n+      \"=================================================================\\n\",\n+      \"Total params: 1,473,128\\n\",\n+      \"Trainable params: 1,472,666\\n\",\n+      \"Non-trainable params: 462\\n\",\n+      \"_________________________________________________________________\\n\",\n+      \"Epoch 1/15\\n\",\n+      \"937/937 [==============================] - 10s 10ms/step - loss: 0.9022 - accuracy: 0.5947 - val_loss: 0.7093 - val_accuracy: 0.6907\\n\",\n+      \"Epoch 2/15\\n\",\n+      \"937/937 [==============================] - 9s 9ms/step - loss: 0.7443 - accuracy: 0.6701 - val_loss: 0.6740 - val_accuracy: 0.7050\\n\",\n+      \"Epoch 3/15\\n\",\n+      \"937/937 [==============================] - 9s 10ms/step - loss: 0.7097 - accuracy: 0.6880 - val_loss: 0.6529 - val_accuracy: 0.7121\\n\",\n+      \"Epoch 4/15\\n\",\n+      \"937/937 [==============================] - 9s 10ms/step - loss: 0.6903 - accuracy: 0.6978 - val_loss: 0.6437 - val_accuracy: 0.7154\\n\",\n+      \"Epoch 5/15\\n\",\n+      \"937/937 [==============================] - 9s 10ms/step - loss: 0.6772 - accuracy: 0.7026 - val_loss: 0.6296 - val_accuracy: 0.7245\\n\",\n+      \"Epoch 6/15\\n\",\n+      \"937/937 [==============================] - 9s 10ms/step - loss: 0.6633 - accuracy: 0.7099 - val_loss: 0.6185 - val_accuracy: 0.7330\\n\",\n+      \"Epoch 7/15\\n\",\n+      \"937/937 [==============================] - 9s 9ms/step - loss: 0.6545 - accuracy: 0.7159 - val_loss: 0.6238 - val_accuracy: 0.7284\\n\",\n+      \"Epoch 8/15\\n\",\n+      \"937/937 [==============================] - 9s 10ms/step - loss: 0.6467 - accuracy: 0.7181 - val_loss: 0.6004 - val_accuracy: 0.7417\\n\",\n+      \"Epoch 9/15\\n\",\n+      \"937/937 [==============================] - 9s 10ms/step - loss: 0.6371 - accuracy: 0.7228 - val_loss: 0.6122 - val_accuracy: 0.7334\\n\",\n+      \"Epoch 10/15\\n\",\n+      \"937/937 [==============================] - 9s 10ms/step - loss: 0.6315 - accuracy: 0.7257 - val_loss: 0.5933 - val_accuracy: 0.7452\\n\",\n+      \"Epoch 11/15\\n\",\n+      \"937/937 [==============================] - 9s 10ms/step - loss: 0.6259 - accuracy: 0.7274 - val_loss: 0.5906 - val_accuracy: 0.7473\\n\",\n+      \"Epoch 12/15\\n\",\n+      \"937/937 [==============================] - 9s 9ms/step - loss: 0.6194 - accuracy: 0.7324 - val_loss: 0.5837 - val_accuracy: 0.7488\\n\",\n+      \"Epoch 13/15\\n\",\n+      \"937/937 [==============================] - 9s 10ms/step - loss: 0.6108 - accuracy: 0.7372 - val_loss: 0.5782 - val_accuracy: 0.7530\\n\",\n+      \"Epoch 14/15\\n\",\n+      \"937/937 [==============================] - 9s 10ms/step - loss: 0.6026 - accuracy: 0.7410 - val_loss: 0.5748 - val_accuracy: 0.7541\\n\",\n+      \"Epoch 15/15\\n\",\n+      \"937/937 [==============================] - 9s 10ms/step - loss: 0.5959 - accuracy: 0.7436 - val_loss: 0.5678 - val_accuracy: 0.7572\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13996, 500), before header:(5991, 500)\\n\",\n+      \"Confusion matrix:\\n\",\n+      \"H V P M \\n\",\n+      \"[[4810   13   17  114]\\n\",\n+      \" [  26 3149  858 1065]\\n\",\n+      \" [  51 1109 3194  620]\\n\",\n+      \" [ 235  639  329 3758]]\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0101: 0.8346925501576025\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0011: 0.7954670535848302\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0110: 0.8619102416570771\\n\",\n+      \"Test accuracy: 0.7460349226997548\\n\",\n+      \"\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13996, 500), before header:(5992, 500)\\n\",\n+      \"Confusion matrix:\\n\",\n+      \"H V P M \\n\",\n+      \"[[4793    8   33  120]\\n\",\n+      \" [  35 3117  914 1033]\\n\",\n+      \" [  39 1115 3217  603]\\n\",\n+      \" [ 213  640  291 3817]]\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0101: 0.8349509705823495\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0011: 0.7945267160296178\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0110: 0.865819491695017\\n\",\n+      \"Test accuracy: 0.7476485891534921\\n\",\n+      \"\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13996, 500), before header:(5991, 500)\\n\",\n+      \"Confusion matrix:\\n\",\n+      \"H V P M \\n\",\n+      \"[[4811   13   16  114]\\n\",\n+      \" [  27 3145  934  992]\\n\",\n+      \" [  56 1120 3148  650]\\n\",\n+      \" [ 234  635  316 3776]]\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0101: 0.8294891679591735\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0011: 0.7948166308100265\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0110: 0.8646620303197078\\n\",\n+      \"Test accuracy: 0.7444839145444538\\n\",\n+      \"\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13996, 500), before header:(5991, 500)\\n\",\n+      \"Confusion matrix:\\n\",\n+      \"H V P M \\n\",\n+      \"[[4805   15   18  116]\\n\",\n+      \" [  19 3240  844  995]\\n\",\n+      \" [  47 1144 3221  562]\\n\",\n+      \" [ 194  689  331 3747]]\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0101: 0.8386451193275629\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0011: 0.7975183869515184\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0110: 0.8661129734327313\\n\",\n+      \"Test accuracy: 0.7511382398559063\\n\",\n+      \"\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13996, 500), before header:(5991, 500)\\n\",\n+      \"Confusion matrix:\\n\",\n+      \"H V P M \\n\",\n+      \"[[4807   12   15  120]\\n\",\n+      \" [  33 3108  817 1140]\\n\",\n+      \" [  44 1144 3229  557]\\n\",\n+      \" [ 224  636  307 3794]]\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0101: 0.839195477060089\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0011: 0.7928653624856157\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0110: 0.862710761995297\\n\",\n+      \"Test accuracy: 0.7473858007705009\\n\",\n+      \"\\n\",\n+      \"\\n\",\n+      \"\\n\",\n+      \"created a json file of the test accuracies at /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/result_vary_raining_data_20220705-1112.json\\n\",\n+      \"------------- dataset 0: FPGA2.5cm with max_train_files=8 ----------------------------------\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13996, 500), before header:(5991, 500)\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13996, 500), before header:(5991, 500)\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13996, 500), before header:(5991, 500)\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13996, 500), before header:(5991, 500)\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13996, 500), before header:(5991, 500)\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13996, 500), before header:(5991, 500)\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13996, 500), before header:(5991, 500)\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13996, 500), before header:(5991, 500)\\n\",\n+      \"Model: \\\"sequential_6\\\"\\n\",\n+      \"_________________________________________________________________\\n\",\n+      \"Layer (type)                 Output Shape              Param #   \\n\",\n+      \"=================================================================\\n\",\n+      \"reshape_6 (Reshape)          (None, 500, 1)            0         \\n\",\n+      \"_________________________________________________________________\\n\",\n+      \"gaussian_noise_6 (GaussianNo (None, 500, 1)            0         \\n\",\n+      \"_________________________________________________________________\\n\",\n+      \"conv1d_18 (Conv1D)           (None, 500, 13)           52        \\n\",\n+      \"_________________________________________________________________\\n\",\n+      \"max_pooling1d_18 (MaxPooling (None, 250, 13)           0         \\n\",\n+      \"_________________________________________________________________\\n\",\n+      \"spatial_dropout1d_18 (Spatia (None, 250, 13)           0         \\n\",\n+      \"_________________________________________________________________\\n\",\n+      \"batch_normalization_18 (Batc (None, 250, 13)           52        \\n\",\n+      \"_________________________________________________________________\\n\",\n+      \"conv1d_19 (Conv1D)           (None, 250, 118)          23128     \\n\",\n+      \"_________________________________________________________________\\n\",\n+      \"max_pooling1d_19 (MaxPooling (None, 250, 118)          0         \\n\",\n+      \"_________________________________________________________________\\n\",\n+      \"spatial_dropout1d_19 (Spatia (None, 250, 118)          0         \\n\",\n+      \"_________________________________________________________________\\n\",\n+      \"batch_normalization_19 (Batc (None, 250, 118)          472       \\n\",\n+      \"_________________________________________________________________\\n\",\n+      \"conv1d_20 (Conv1D)           (None, 250, 100)          59100     \\n\",\n+      \"_________________________________________________________________\\n\",\n+      \"max_pooling1d_20 (MaxPooling (None, 62, 100)           0         \\n\",\n+      \"_________________________________________________________________\\n\",\n+      \"batch_normalization_20 (Batc (None, 62, 100)           400       \\n\",\n+      \"_________________________________________________________________\\n\",\n+      \"spatial_dropout1d_20 (Spatia (None, 62, 100)           0         \\n\",\n+      \"_________________________________________________________________\\n\",\n+      \"flatten_6 (Flatten)          (None, 6200)              0         \\n\",\n+      \"_________________________________________________________________\\n\",\n+      \"dense_12 (Dense)             (None, 224)               1389024   \\n\",\n+      \"_________________________________________________________________\\n\",\n+      \"dense_13 (Dense)             (None, 4)                 900       \\n\",\n+      \"=================================================================\\n\",\n+      \"Total params: 1,473,128\\n\",\n+      \"Trainable params: 1,472,666\\n\",\n+      \"Non-trainable params: 462\\n\",\n+      \"_________________________________________________________________\\n\",\n+      \"Epoch 1/15\\n\",\n+      \"1094/1094 [==============================] - 12s 10ms/step - loss: 0.8657 - accuracy: 0.6130 - val_loss: 0.6833 - val_accuracy: 0.7013\\n\",\n+      \"Epoch 2/15\\n\",\n+      \"1094/1094 [==============================] - 10s 10ms/step - loss: 0.7053 - accuracy: 0.6930 - val_loss: 0.6423 - val_accuracy: 0.7206\\n\",\n+      \"Epoch 3/15\\n\",\n+      \"1094/1094 [==============================] - 10s 10ms/step - loss: 0.6703 - accuracy: 0.7094 - val_loss: 0.6114 - val_accuracy: 0.7370\\n\",\n+      \"Epoch 4/15\\n\",\n+      \"1094/1094 [==============================] - 10s 9ms/step - loss: 0.6493 - accuracy: 0.7178 - val_loss: 0.5956 - val_accuracy: 0.7420\\n\",\n+      \"Epoch 5/15\\n\",\n+      \"1094/1094 [==============================] - 10s 9ms/step - loss: 0.6334 - accuracy: 0.7250 - val_loss: 0.5855 - val_accuracy: 0.7482\\n\",\n+      \"Epoch 6/15\\n\",\n+      \"1094/1094 [==============================] - 10s 9ms/step - loss: 0.6217 - accuracy: 0.7302 - val_loss: 0.5755 - val_accuracy: 0.7525\\n\",\n+      \"Epoch 7/15\\n\",\n+      \"1094/1094 [==============================] - 10s 9ms/step - loss: 0.6082 - accuracy: 0.7381 - val_loss: 0.5671 - val_accuracy: 0.7575\\n\",\n+      \"Epoch 8/15\\n\",\n+      \"1094/1094 [==============================] - 10s 9ms/step - loss: 0.5996 - accuracy: 0.7408 - val_loss: 0.5611 - val_accuracy: 0.7588\\n\",\n+      \"Epoch 9/15\\n\",\n+      \"1094/1094 [==============================] - 10s 9ms/step - loss: 0.5923 - accuracy: 0.7441 - val_loss: 0.5578 - val_accuracy: 0.7605\\n\",\n+      \"Epoch 10/15\\n\",\n+      \"1094/1094 [==============================] - 10s 9ms/step - loss: 0.5857 - accuracy: 0.7468 - val_loss: 0.5515 - val_accuracy: 0.7638\\n\",\n+      \"Epoch 11/15\\n\",\n+      \"1094/1094 [==============================] - 10s 9ms/step - loss: 0.5799 - accuracy: 0.7504 - val_loss: 0.5500 - val_accuracy: 0.7640\\n\",\n+      \"Epoch 12/15\\n\",\n+      \"1094/1094 [==============================] - 11s 10ms/step - loss: 0.5745 - accuracy: 0.7543 - val_loss: 0.5474 - val_accuracy: 0.7641\\n\",\n+      \"Epoch 13/15\\n\",\n+      \"1094/1094 [==============================] - 10s 9ms/step - loss: 0.5704 - accuracy: 0.7558 - val_loss: 0.5422 - val_accuracy: 0.7662\\n\",\n+      \"Epoch 14/15\\n\",\n+      \"1094/1094 [==============================] - 10s 9ms/step - loss: 0.5651 - accuracy: 0.7582 - val_loss: 0.5383 - val_accuracy: 0.7683\\n\",\n+      \"Epoch 15/15\\n\",\n+      \"1094/1094 [==============================] - 10s 10ms/step - loss: 0.5609 - accuracy: 0.7591 - val_loss: 0.5405 - val_accuracy: 0.7674\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13996, 500), before header:(5991, 500)\\n\",\n+      \"Confusion matrix:\\n\",\n+      \"H V P M \\n\",\n+      \"[[4813   12   22  107]\\n\",\n+      \" [  13 3170 1190  725]\\n\",\n+      \" [  45  851 3704  374]\\n\",\n+      \" [ 185  831  485 3460]]\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0101: 0.8390453794966728\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0011: 0.8020713463751439\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0110: 0.8745684695051784\\n\",\n+      \"Test accuracy: 0.7578425976884975\\n\",\n+      \"\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13996, 500), before header:(5992, 500)\\n\",\n+      \"Confusion matrix:\\n\",\n+      \"H V P M \\n\",\n+      \"[[4828    8   37   81]\\n\",\n+      \" [  26 2989 1255  829]\\n\",\n+      \" [  40  834 3705  395]\\n\",\n+      \" [ 189  776  464 3532]]\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0101: 0.8373023814288573\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0011: 0.797828697218331\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0110: 0.8711727036221733\\n\",\n+      \"Test accuracy: 0.7531518911346808\\n\",\n+      \"\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13996, 500), before header:(5991, 500)\\n\",\n+      \"Confusion matrix:\\n\",\n+      \"H V P M \\n\",\n+      \"[[4834   11   23   86]\\n\",\n+      \" [  23 3107 1226  742]\\n\",\n+      \" [  38  787 3737  412]\\n\",\n+      \" [ 208  824  470 3459]]\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0101: 0.8387451843698404\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0011: 0.8031720618401961\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0110: 0.8727672987441837\\n\",\n+      \"Test accuracy: 0.7573422724771102\\n\",\n+      \"\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13996, 500), before header:(5991, 500)\\n\",\n+      \"Confusion matrix:\\n\",\n+      \"H V P M \\n\",\n+      \"[[4843   13   19   79]\\n\",\n+      \" [  21 3227 1166  684]\\n\",\n+      \" [  33  782 3793  366]\\n\",\n+      \" [ 174  807  485 3495]]\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0101: 0.8455996397658478\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0011: 0.8126782408565567\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0110: 0.8785210386751389\\n\",\n+      \"Test accuracy: 0.7683994596487717\\n\",\n+      \"\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13996, 500), before header:(5991, 500)\\n\",\n+      \"Confusion matrix:\\n\",\n+      \"H V P M \\n\",\n+      \"[[4838   14   21   81]\\n\",\n+      \" [  29 3169 1114  786]\\n\",\n+      \" [  38  861 3739  336]\\n\",\n+      \" [ 180  831  494 3456]]\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0101: 0.8444488917796568\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0011: 0.8042727773052484\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0110: 0.8724671036173512\\n\",\n+      \"Test accuracy: 0.7605943863511282\\n\",\n+      \"\\n\",\n+      \"\\n\",\n+      \"\\n\",\n+      \"created a json file of the test accuracies at /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/result_vary_raining_data_20220705-1112.json\\n\",\n+      \"------------- dataset 0: FPGA2.5cm with max_train_files=9 ----------------------------------\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13996, 500), before header:(5991, 500)\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13996, 500), before header:(5991, 500)\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13996, 500), before header:(5991, 500)\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13996, 500), before header:(5991, 500)\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13996, 500), before header:(5991, 500)\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13996, 500), before header:(5991, 500)\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13996, 500), before header:(5991, 500)\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13996, 500), before header:(5991, 500)\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13996, 500), before header:(5991, 500)\\n\",\n+      \"Model: \\\"sequential_7\\\"\\n\",\n+      \"_________________________________________________________________\\n\",\n+      \"Layer (type)                 Output Shape              Param #   \\n\",\n+      \"=================================================================\\n\",\n+      \"reshape_7 (Reshape)          (None, 500, 1)            0         \\n\",\n+      \"_________________________________________________________________\\n\",\n+      \"gaussian_noise_7 (GaussianNo (None, 500, 1)            0         \\n\",\n+      \"_________________________________________________________________\\n\",\n+      \"conv1d_21 (Conv1D)           (None, 500, 13)           52        \\n\",\n+      \"_________________________________________________________________\\n\",\n+      \"max_pooling1d_21 (MaxPooling (None, 250, 13)           0         \\n\",\n+      \"_________________________________________________________________\\n\",\n+      \"spatial_dropout1d_21 (Spatia (None, 250, 13)           0         \\n\",\n+      \"_________________________________________________________________\\n\",\n+      \"batch_normalization_21 (Batc (None, 250, 13)           52        \\n\",\n+      \"_________________________________________________________________\\n\",\n+      \"conv1d_22 (Conv1D)           (None, 250, 118)          23128     \\n\",\n+      \"_________________________________________________________________\\n\",\n+      \"max_pooling1d_22 (MaxPooling (None, 250, 118)          0         \\n\",\n+      \"_________________________________________________________________\\n\",\n+      \"spatial_dropout1d_22 (Spatia (None, 250, 118)          0         \\n\",\n+      \"_________________________________________________________________\\n\",\n+      \"batch_normalization_22 (Batc (None, 250, 118)          472       \\n\",\n+      \"_________________________________________________________________\\n\",\n+      \"conv1d_23 (Conv1D)           (None, 250, 100)          59100     \\n\",\n+      \"_________________________________________________________________\\n\",\n+      \"max_pooling1d_23 (MaxPooling (None, 62, 100)           0         \\n\",\n+      \"_________________________________________________________________\\n\",\n+      \"batch_normalization_23 (Batc (None, 62, 100)           400       \\n\",\n+      \"_________________________________________________________________\\n\",\n+      \"spatial_dropout1d_23 (Spatia (None, 62, 100)           0         \\n\",\n+      \"_________________________________________________________________\\n\",\n+      \"flatten_7 (Flatten)          (None, 6200)              0         \\n\",\n+      \"_________________________________________________________________\\n\",\n+      \"dense_14 (Dense)             (None, 224)               1389024   \\n\",\n+      \"_________________________________________________________________\\n\",\n+      \"dense_15 (Dense)             (None, 4)                 900       \\n\",\n+      \"=================================================================\\n\",\n+      \"Total params: 1,473,128\\n\",\n+      \"Trainable params: 1,472,666\\n\",\n+      \"Non-trainable params: 462\\n\",\n+      \"_________________________________________________________________\\n\",\n+      \"Epoch 1/15\\n\",\n+      \"1250/1250 [==============================] - 13s 10ms/step - loss: 0.8774 - accuracy: 0.6115 - val_loss: 0.7162 - val_accuracy: 0.6903\\n\",\n+      \"Epoch 2/15\\n\",\n+      \"1250/1250 [==============================] - 12s 9ms/step - loss: 0.7403 - accuracy: 0.6757 - val_loss: 0.6751 - val_accuracy: 0.7040\\n\",\n+      \"Epoch 3/15\\n\",\n+      \"1250/1250 [==============================] - 12s 9ms/step - loss: 0.7023 - accuracy: 0.6908 - val_loss: 0.6457 - val_accuracy: 0.7197\\n\",\n+      \"Epoch 4/15\\n\",\n+      \"1250/1250 [==============================] - 12s 9ms/step - loss: 0.6797 - accuracy: 0.7022 - val_loss: 0.6319 - val_accuracy: 0.7271\\n\",\n+      \"Epoch 5/15\\n\",\n+      \"1250/1250 [==============================] - 12s 9ms/step - loss: 0.6649 - accuracy: 0.7080 - val_loss: 0.6203 - val_accuracy: 0.7310\\n\",\n+      \"Epoch 6/15\\n\",\n+      \"1250/1250 [==============================] - 12s 9ms/step - loss: 0.6555 - accuracy: 0.7142 - val_loss: 0.6161 - val_accuracy: 0.7337\\n\",\n+      \"Epoch 7/15\\n\",\n+      \"1250/1250 [==============================] - 12s 9ms/step - loss: 0.6461 - accuracy: 0.7182 - val_loss: 0.6017 - val_accuracy: 0.7396\\n\",\n+      \"Epoch 8/15\\n\",\n+      \"1250/1250 [==============================] - 12s 9ms/step - loss: 0.6349 - accuracy: 0.7253 - val_loss: 0.5964 - val_accuracy: 0.7405\\n\",\n+      \"Epoch 9/15\\n\",\n+      \"1250/1250 [==============================] - 12s 9ms/step - loss: 0.6283 - accuracy: 0.7284 - val_loss: 0.5841 - val_accuracy: 0.7479\\n\",\n+      \"Epoch 10/15\\n\",\n+      \"1250/1250 [==============================] - 12s 9ms/step - loss: 0.6212 - accuracy: 0.7314 - val_loss: 0.5836 - val_accuracy: 0.7496\\n\",\n+      \"Epoch 11/15\\n\",\n+      \"1250/1250 [==============================] - 12s 9ms/step - loss: 0.6163 - accuracy: 0.7337 - val_loss: 0.5812 - val_accuracy: 0.7488\\n\",\n+      \"Epoch 12/15\\n\",\n+      \"1250/1250 [==============================] - 12s 9ms/step - loss: 0.6107 - accuracy: 0.7374 - val_loss: 0.5766 - val_accuracy: 0.7518\\n\",\n+      \"Epoch 13/15\\n\",\n+      \"1250/1250 [==============================] - 12s 9ms/step - loss: 0.6053 - accuracy: 0.7396 - val_loss: 0.5730 - val_accuracy: 0.7534\\n\",\n+      \"Epoch 14/15\\n\",\n+      \"1250/1250 [==============================] - 12s 9ms/step - loss: 0.6025 - accuracy: 0.7405 - val_loss: 0.5683 - val_accuracy: 0.7554\\n\",\n+      \"Epoch 15/15\\n\",\n+      \"1250/1250 [==============================] - 12s 9ms/step - loss: 0.5963 - accuracy: 0.7439 - val_loss: 0.5630 - val_accuracy: 0.7583\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13996, 500), before header:(5991, 500)\\n\",\n+      \"Confusion matrix:\\n\",\n+      \"H V P M \\n\",\n+      \"[[4743   14   45  152]\\n\",\n+      \" [  19 3377  982  720]\\n\",\n+      \" [  25 1170 3367  412]\\n\",\n+      \" [ 154  913  465 3429]]\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0101: 0.8314904688047231\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0011: 0.7918146795417021\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0110: 0.8692650222644719\\n\",\n+      \"Test accuracy: 0.7462850853054486\\n\",\n+      \"\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13996, 500), before header:(5992, 500)\\n\",\n+      \"Confusion matrix:\\n\",\n+      \"H V P M \\n\",\n+      \"[[4744    8   60  142]\\n\",\n+      \" [  23 3358 1003  715]\\n\",\n+      \" [  25 1244 3333  372]\\n\",\n+      \" [ 149  900  438 3474]]\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0101: 0.8309485691414848\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0011: 0.7879727836702021\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0110: 0.8728737242345407\\n\",\n+      \"Test accuracy: 0.7458975385231139\\n\",\n+      \"\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13996, 500), before header:(5991, 500)\\n\",\n+      \"Confusion matrix:\\n\",\n+      \"H V P M \\n\",\n+      \"[[4748    9   43  154]\\n\",\n+      \" [  21 3370  986  721]\\n\",\n+      \" [  20 1220 3313  421]\\n\",\n+      \" [ 162  902  457 3440]]\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0101: 0.8283884524941212\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0011: 0.7894631510481813\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0110: 0.870215640166108\\n\",\n+      \"Test accuracy: 0.7440336218542052\\n\",\n+      \"\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13996, 500), before header:(5991, 500)\\n\",\n+      \"Confusion matrix:\\n\",\n+      \"H V P M \\n\",\n+      \"[[4754   16   32  152]\\n\",\n+      \" [  14 3489  950  645]\\n\",\n+      \" [  20 1213 3365  376]\\n\",\n+      \" [ 142  946  459 3414]]\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0101: 0.8337919647771052\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0011: 0.7948666633311653\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0110: 0.8745184369840396\\n\",\n+      \"Test accuracy: 0.751588532546155\\n\",\n+      \"\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13996, 500), before header:(5991, 500)\\n\",\n+      \"Confusion matrix:\\n\",\n+      \"H V P M \\n\",\n+      \"[[4751   17   39  147]\\n\",\n+      \" [  23 3360  924  791]\\n\",\n+      \" [  31 1231 3352  360]\\n\",\n+      \" [ 140  901  463 3457]]\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0101: 0.8346425176364637\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0011: 0.7896632811327363\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0110: 0.868664632010807\\n\",\n+      \"Test accuracy: 0.7464852153900035\\n\",\n+      \"\\n\",\n+      \"\\n\",\n+      \"\\n\",\n+      \"created a json file of the test accuracies at /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/result_vary_raining_data_20220705-1112.json\\n\",\n+      \"------------- dataset 0: FPGA2.5cm with max_train_files=10 ----------------------------------\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13996, 500), before header:(5991, 500)\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13996, 500), before header:(5991, 500)\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13996, 500), before header:(5991, 500)\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13996, 500), before header:(5991, 500)\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13996, 500), before header:(5991, 500)\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13996, 500), before header:(5991, 500)\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13996, 500), before header:(5991, 500)\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13996, 500), before header:(5991, 500)\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13996, 500), before header:(5991, 500)\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13996, 500), before header:(5991, 500)\\n\",\n+      \"Model: \\\"sequential_8\\\"\\n\",\n+      \"_________________________________________________________________\\n\",\n+      \"Layer (type)                 Output Shape              Param #   \\n\",\n+      \"=================================================================\\n\",\n+      \"reshape_8 (Reshape)          (None, 500, 1)            0         \\n\",\n+      \"_________________________________________________________________\\n\",\n+      \"gaussian_noise_8 (GaussianNo (None, 500, 1)            0         \\n\",\n+      \"_________________________________________________________________\\n\",\n+      \"conv1d_24 (Conv1D)           (None, 500, 13)           52        \\n\",\n+      \"_________________________________________________________________\\n\",\n+      \"max_pooling1d_24 (MaxPooling (None, 250, 13)           0         \\n\",\n+      \"_________________________________________________________________\\n\",\n+      \"spatial_dropout1d_24 (Spatia (None, 250, 13)           0         \\n\",\n+      \"_________________________________________________________________\\n\",\n+      \"batch_normalization_24 (Batc (None, 250, 13)           52        \\n\",\n+      \"_________________________________________________________________\\n\",\n+      \"conv1d_25 (Conv1D)           (None, 250, 118)          23128     \\n\",\n+      \"_________________________________________________________________\\n\",\n+      \"max_pooling1d_25 (MaxPooling (None, 250, 118)          0         \\n\",\n+      \"_________________________________________________________________\\n\",\n+      \"spatial_dropout1d_25 (Spatia (None, 250, 118)          0         \\n\",\n+      \"_________________________________________________________________\\n\",\n+      \"batch_normalization_25 (Batc (None, 250, 118)          472       \\n\",\n+      \"_________________________________________________________________\\n\",\n+      \"conv1d_26 (Conv1D)           (None, 250, 100)          59100     \\n\",\n+      \"_________________________________________________________________\\n\",\n+      \"max_pooling1d_26 (MaxPooling (None, 62, 100)           0         \\n\",\n+      \"_________________________________________________________________\\n\",\n+      \"batch_normalization_26 (Batc (None, 62, 100)           400       \\n\",\n+      \"_________________________________________________________________\\n\",\n+      \"spatial_dropout1d_26 (Spatia (None, 62, 100)           0         \\n\",\n+      \"_________________________________________________________________\\n\",\n+      \"flatten_8 (Flatten)          (None, 6200)              0         \\n\",\n+      \"_________________________________________________________________\\n\",\n+      \"dense_16 (Dense)             (None, 224)               1389024   \\n\",\n+      \"_________________________________________________________________\\n\",\n+      \"dense_17 (Dense)             (None, 4)                 900       \\n\",\n+      \"=================================================================\\n\",\n+      \"Total params: 1,473,128\\n\",\n+      \"Trainable params: 1,472,666\\n\",\n+      \"Non-trainable params: 462\\n\",\n+      \"_________________________________________________________________\\n\",\n+      \"Epoch 1/15\\n\",\n+      \"1406/1406 [==============================] - 15s 10ms/step - loss: 0.8444 - accuracy: 0.6208 - val_loss: 0.6730 - val_accuracy: 0.7068\\n\",\n+      \"Epoch 2/15\\n\",\n+      \"1406/1406 [==============================] - 13s 9ms/step - loss: 0.6978 - accuracy: 0.6958 - val_loss: 0.6197 - val_accuracy: 0.7316\\n\",\n+      \"Epoch 3/15\\n\",\n+      \"1406/1406 [==============================] - 13s 9ms/step - loss: 0.6561 - accuracy: 0.7147 - val_loss: 0.6046 - val_accuracy: 0.7374\\n\",\n+      \"Epoch 4/15\\n\",\n+      \"1406/1406 [==============================] - 13s 9ms/step - loss: 0.6333 - accuracy: 0.7259 - val_loss: 0.5842 - val_accuracy: 0.7462\\n\",\n+      \"Epoch 5/15\\n\",\n+      \"1406/1406 [==============================] - 13s 9ms/step - loss: 0.6192 - accuracy: 0.7331 - val_loss: 0.5734 - val_accuracy: 0.7548\\n\",\n+      \"Epoch 6/15\\n\",\n+      \"1406/1406 [==============================] - 13s 9ms/step - loss: 0.6055 - accuracy: 0.7398 - val_loss: 0.5770 - val_accuracy: 0.7532\\n\",\n+      \"Epoch 7/15\\n\",\n+      \"1406/1406 [==============================] - 13s 9ms/step - loss: 0.5980 - accuracy: 0.7421 - val_loss: 0.5679 - val_accuracy: 0.7561\\n\",\n+      \"Epoch 8/15\\n\",\n+      \"1406/1406 [==============================] - 13s 9ms/step - loss: 0.5933 - accuracy: 0.7444 - val_loss: 0.5643 - val_accuracy: 0.7567\\n\",\n+      \"Epoch 9/15\\n\",\n+      \"1406/1406 [==============================] - 13s 9ms/step - loss: 0.5867 - accuracy: 0.7478 - val_loss: 0.5666 - val_accuracy: 0.7554\\n\",\n+      \"Epoch 10/15\\n\",\n+      \"1406/1406 [==============================] - 13s 9ms/step - loss: 0.5810 - accuracy: 0.7501 - val_loss: 0.5618 - val_accuracy: 0.7591\\n\",\n+      \"Epoch 11/15\\n\",\n+      \"1406/1406 [==============================] - 13s 9ms/step - loss: 0.5766 - accuracy: 0.7520 - val_loss: 0.5674 - val_accuracy: 0.7572\\n\",\n+      \"Epoch 12/15\\n\",\n+      \"1406/1406 [==============================] - 13s 9ms/step - loss: 0.5716 - accuracy: 0.7550 - val_loss: 0.5607 - val_accuracy: 0.7574\\n\",\n+      \"Epoch 13/15\\n\",\n+      \"1406/1406 [==============================] - 13s 9ms/step - loss: 0.5696 - accuracy: 0.7555 - val_loss: 0.5692 - val_accuracy: 0.7564\\n\",\n+      \"Epoch 14/15\\n\",\n+      \"1406/1406 [==============================] - 13s 9ms/step - loss: 0.5644 - accuracy: 0.7592 - val_loss: 0.5536 - val_accuracy: 0.7609\\n\",\n+      \"Epoch 15/15\\n\",\n+      \"1406/1406 [==============================] - 13s 9ms/step - loss: 0.5605 - accuracy: 0.7601 - val_loss: 0.5450 - val_accuracy: 0.7674\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13996, 500), before header:(5991, 500)\\n\",\n+      \"Confusion matrix:\\n\",\n+      \"H V P M \\n\",\n+      \"[[4737    9   36  172]\\n\",\n+      \" [  15 3035  962 1086]\\n\",\n+      \" [  37 1005 3351  581]\\n\",\n+      \" [ 119  495  353 3994]]\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0101: 0.8390954120178116\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0011: 0.8042727773052484\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0110: 0.8693150547856107\\n\",\n+      \"Test accuracy: 0.7563416220543353\\n\",\n+      \"\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13996, 500), before header:(5992, 500)\\n\",\n+      \"Confusion matrix:\\n\",\n+      \"H V P M \\n\",\n+      \"[[4757    9   40  148]\\n\",\n+      \" [   9 2849 1055 1186]\\n\",\n+      \" [  27  986 3369  592]\\n\",\n+      \" [ 137  506  291 4027]]\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0101: 0.8385531318791275\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0011: 0.7956273764258555\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0110: 0.8669201520912547\\n\",\n+      \"Test accuracy: 0.7505503301981189\\n\",\n+      \"\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13996, 500), before header:(5991, 500)\\n\",\n+      \"Confusion matrix:\\n\",\n+      \"H V P M \\n\",\n+      \"[[4759    9   35  151]\\n\",\n+      \" [  14 2934 1015 1135]\\n\",\n+      \" [  27  919 3390  638]\\n\",\n+      \" [ 133  521  316 3991]]\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0101: 0.8401460949617251\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0011: 0.8030719967979186\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0110: 0.8651623555310952\\n\",\n+      \"Test accuracy: 0.7541902236453695\\n\",\n+      \"\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13996, 500), before header:(5991, 500)\\n\",\n+      \"Confusion matrix:\\n\",\n+      \"H V P M \\n\",\n+      \"[[4771   14   20  149]\\n\",\n+      \" [  13 3088  965 1032]\\n\",\n+      \" [  24  977 3405  568]\\n\",\n+      \" [ 105  537  363 3956]]\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0101: 0.8421974283284135\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0011: 0.8094261269825387\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0110: 0.8713663881522989\\n\",\n+      \"Test accuracy: 0.7614949717316255\\n\",\n+      \"\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13996, 500), before header:(5991, 500)\\n\",\n+      \"Confusion matrix:\\n\",\n+      \"H V P M \\n\",\n+      \"[[4752   10   38  154]\\n\",\n+      \" [  20 3076  877 1125]\\n\",\n+      \" [  28 1004 3386  556]\\n\",\n+      \" [ 110  528  333 3990]]\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0101: 0.8467003552309\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0011: 0.806674338319908\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0110: 0.8680142092360034\\n\",\n+      \"Test accuracy: 0.7606944513934057\\n\",\n+      \"\\n\",\n+      \"\\n\",\n+      \"\\n\",\n+      \"created a json file of the test accuracies at /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/result_vary_raining_data_20220705-1112.json\\n\",\n+      \"------------- dataset 0: FPGA2.5cm with max_train_files=11 ----------------------------------\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13996, 500), before header:(5991, 500)\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13996, 500), before header:(5991, 500)\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13996, 500), before header:(5991, 500)\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13996, 500), before header:(5991, 500)\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13996, 500), before header:(5991, 500)\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13996, 500), before header:(5991, 500)\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13996, 500), before header:(5991, 500)\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13996, 500), before header:(5991, 500)\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13996, 500), before header:(5991, 500)\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13996, 500), before header:(5991, 500)\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13996, 500), before header:(5992, 500)\\n\",\n+      \"Model: \\\"sequential_9\\\"\\n\",\n+      \"_________________________________________________________________\\n\",\n+      \"Layer (type)                 Output Shape              Param #   \\n\",\n+      \"=================================================================\\n\",\n+      \"reshape_9 (Reshape)          (None, 500, 1)            0         \\n\",\n+      \"_________________________________________________________________\\n\",\n+      \"gaussian_noise_9 (GaussianNo (None, 500, 1)            0         \\n\",\n+      \"_________________________________________________________________\\n\",\n+      \"conv1d_27 (Conv1D)           (None, 500, 13)           52        \\n\",\n+      \"_________________________________________________________________\\n\",\n+      \"max_pooling1d_27 (MaxPooling (None, 250, 13)           0         \\n\",\n+      \"_________________________________________________________________\\n\",\n+      \"spatial_dropout1d_27 (Spatia (None, 250, 13)           0         \\n\",\n+      \"_________________________________________________________________\\n\",\n+      \"batch_normalization_27 (Batc (None, 250, 13)           52        \\n\",\n+      \"_________________________________________________________________\\n\",\n+      \"conv1d_28 (Conv1D)           (None, 250, 118)          23128     \\n\",\n+      \"_________________________________________________________________\\n\",\n+      \"max_pooling1d_28 (MaxPooling (None, 250, 118)          0         \\n\",\n+      \"_________________________________________________________________\\n\",\n+      \"spatial_dropout1d_28 (Spatia (None, 250, 118)          0         \\n\",\n+      \"_________________________________________________________________\\n\",\n+      \"batch_normalization_28 (Batc (None, 250, 118)          472       \\n\",\n+      \"_________________________________________________________________\\n\",\n+      \"conv1d_29 (Conv1D)           (None, 250, 100)          59100     \\n\",\n+      \"_________________________________________________________________\\n\",\n+      \"max_pooling1d_29 (MaxPooling (None, 62, 100)           0         \\n\",\n+      \"_________________________________________________________________\\n\",\n+      \"batch_normalization_29 (Batc (None, 62, 100)           400       \\n\",\n+      \"_________________________________________________________________\\n\",\n+      \"spatial_dropout1d_29 (Spatia (None, 62, 100)           0         \\n\",\n+      \"_________________________________________________________________\\n\",\n+      \"flatten_9 (Flatten)          (None, 6200)              0         \\n\",\n+      \"_________________________________________________________________\\n\",\n+      \"dense_18 (Dense)             (None, 224)               1389024   \\n\",\n+      \"_________________________________________________________________\\n\",\n+      \"dense_19 (Dense)             (None, 4)                 900       \\n\",\n+      \"=================================================================\\n\",\n+      \"Total params: 1,473,128\\n\",\n+      \"Trainable params: 1,472,666\\n\",\n+      \"Non-trainable params: 462\\n\",\n+      \"_________________________________________________________________\\n\",\n+      \"Epoch 1/15\\n\",\n+      \"1562/1562 [==============================] - 16s 9ms/step - loss: 0.8223 - accuracy: 0.6327 - val_loss: 0.6779 - val_accuracy: 0.7096\\n\",\n+      \"Epoch 2/15\\n\",\n+      \"1562/1562 [==============================] - 15s 9ms/step - loss: 0.6943 - accuracy: 0.6968 - val_loss: 0.6343 - val_accuracy: 0.7283\\n\",\n+      \"Epoch 3/15\\n\",\n+      \"1562/1562 [==============================] - 15s 9ms/step - loss: 0.6561 - accuracy: 0.7166 - val_loss: 0.5976 - val_accuracy: 0.7447\\n\",\n+      \"Epoch 4/15\\n\",\n+      \"1562/1562 [==============================] - 14s 9ms/step - loss: 0.6365 - accuracy: 0.7236 - val_loss: 0.5937 - val_accuracy: 0.7428\\n\",\n+      \"Epoch 5/15\\n\",\n+      \"1562/1562 [==============================] - 15s 9ms/step - loss: 0.6232 - accuracy: 0.7298 - val_loss: 0.5791 - val_accuracy: 0.7515\\n\",\n+      \"Epoch 6/15\\n\",\n+      \"1562/1562 [==============================] - 15s 9ms/step - loss: 0.6130 - accuracy: 0.7351 - val_loss: 0.5693 - val_accuracy: 0.7561\\n\",\n+      \"Epoch 7/15\\n\",\n+      \"1562/1562 [==============================] - 14s 9ms/step - loss: 0.6056 - accuracy: 0.7382 - val_loss: 0.5667 - val_accuracy: 0.7591\\n\",\n+      \"Epoch 8/15\\n\",\n+      \"1562/1562 [==============================] - 15s 9ms/step - loss: 0.5982 - accuracy: 0.7412 - val_loss: 0.5577 - val_accuracy: 0.7610\\n\",\n+      \"Epoch 9/15\\n\",\n+      \"1562/1562 [==============================] - 15s 9ms/step - loss: 0.5922 - accuracy: 0.7442 - val_loss: 0.5568 - val_accuracy: 0.7597\\n\",\n+      \"Epoch 10/15\\n\",\n+      \"1562/1562 [==============================] - 14s 9ms/step - loss: 0.5864 - accuracy: 0.7478 - val_loss: 0.5505 - val_accuracy: 0.7646\\n\",\n+      \"Epoch 11/15\\n\",\n+      \"1562/1562 [==============================] - 15s 9ms/step - loss: 0.5825 - accuracy: 0.7490 - val_loss: 0.5456 - val_accuracy: 0.7673\\n\",\n+      \"Epoch 12/15\\n\",\n+      \"1562/1562 [==============================] - 15s 9ms/step - loss: 0.5768 - accuracy: 0.7526 - val_loss: 0.5478 - val_accuracy: 0.7682\\n\",\n+      \"Epoch 13/15\\n\",\n+      \"1562/1562 [==============================] - 14s 9ms/step - loss: 0.5712 - accuracy: 0.7552 - val_loss: 0.5412 - val_accuracy: 0.7687\\n\",\n+      \"Epoch 14/15\\n\",\n+      \"1562/1562 [==============================] - 14s 9ms/step - loss: 0.5643 - accuracy: 0.7597 - val_loss: 0.5335 - val_accuracy: 0.7747\\n\",\n+      \"Epoch 15/15\\n\",\n+      \"1562/1562 [==============================] - 15s 9ms/step - loss: 0.5596 - accuracy: 0.7613 - val_loss: 0.5338 - val_accuracy: 0.7739\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13996, 500), before header:(5991, 500)\\n\",\n+      \"Confusion matrix:\\n\",\n+      \"H V P M \\n\",\n+      \"[[4821    6   27  100]\\n\",\n+      \" [  19 3140 1043  896]\\n\",\n+      \" [  43  877 3617  437]\\n\",\n+      \" [ 168  679  437 3677]]\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0101: 0.8455496072447091\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0011: 0.8082253464752089\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0110: 0.872717266223045\\n\",\n+      \"Test accuracy: 0.7632461099714815\\n\",\n+      \"\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13996, 500), before header:(5992, 500)\\n\",\n+      \"Confusion matrix:\\n\",\n+      \"H V P M \\n\",\n+      \"[[4834    8   43   69]\\n\",\n+      \" [  19 3022 1143  915]\\n\",\n+      \" [  31  882 3616  445]\\n\",\n+      \" [ 186  683  385 3707]]\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0101: 0.8430558335001\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0011: 0.8022813688212928\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0110: 0.8734740844506704\\n\",\n+      \"Test accuracy: 0.7594056433860317\\n\",\n+      \"\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13996, 500), before header:(5991, 500)\\n\",\n+      \"Confusion matrix:\\n\",\n+      \"H V P M \\n\",\n+      \"[[4844   15   16   79]\\n\",\n+      \" [  25 3090 1088  895]\\n\",\n+      \" [  44  846 3605  479]\\n\",\n+      \" [ 203  693  397 3668]]\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0101: 0.8432981437934658\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0011: 0.806674338319908\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0110: 0.8717166158002702\\n\",\n+      \"Test accuracy: 0.760844548956822\\n\",\n+      \"\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13996, 500), before header:(5991, 500)\\n\",\n+      \"Confusion matrix:\\n\",\n+      \"H V P M \\n\",\n+      \"[[4840   14   15   85]\\n\",\n+      \" [  20 3174 1058  846]\\n\",\n+      \" [  39  878 3648  409]\\n\",\n+      \" [ 159  689  444 3669]]\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0101: 0.8465502576674838\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0011: 0.8114274278280883\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0110: 0.8761194776604793\\n\",\n+      \"Test accuracy: 0.7670485815780257\\n\",\n+      \"\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13996, 500), before header:(5991, 500)\\n\",\n+      \"Confusion matrix:\\n\",\n+      \"H V P M \\n\",\n+      \"[[4843    6   21   84]\\n\",\n+      \" [  34 3088 1004  972]\\n\",\n+      \" [  47  896 3621  410]\\n\",\n+      \" [ 177  669  441 3674]]\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0101: 0.847300745484565\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0011: 0.8063741431930755\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0110: 0.8699154450392755\\n\",\n+      \"Test accuracy: 0.761795166858458\\n\",\n+      \"\\n\",\n+      \"\\n\",\n+      \"\\n\",\n+      \"created a json file of the test accuracies at /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/result_vary_raining_data_20220705-1112.json\\n\",\n+      \"------------- dataset 0: FPGA2.5cm with max_train_files=12 ----------------------------------\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13996, 500), before header:(5991, 500)\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13996, 500), before header:(5991, 500)\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13996, 500), before header:(5991, 500)\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13996, 500), before header:(5991, 500)\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13996, 500), before header:(5991, 500)\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13996, 500), before header:(5991, 500)\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13996, 500), before header:(5991, 500)\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13996, 500), before header:(5991, 500)\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13996, 500), before header:(5991, 500)\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13996, 500), before header:(5991, 500)\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13996, 500), before header:(5992, 500)\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13996, 500), before header:(5992, 500)\\n\",\n+      \"Model: \\\"sequential_10\\\"\\n\",\n+      \"_________________________________________________________________\\n\",\n+      \"Layer (type)                 Output Shape              Param #   \\n\",\n+      \"=================================================================\\n\",\n+      \"reshape_10 (Reshape)         (None, 500, 1)            0         \\n\",\n+      \"_________________________________________________________________\\n\",\n+      \"gaussian_noise_10 (GaussianN (None, 500, 1)            0         \\n\",\n+      \"_________________________________________________________________\\n\",\n+      \"conv1d_30 (Conv1D)           (None, 500, 13)           52        \\n\",\n+      \"_________________________________________________________________\\n\",\n+      \"max_pooling1d_30 (MaxPooling (None, 250, 13)           0         \\n\",\n+      \"_________________________________________________________________\\n\",\n+      \"spatial_dropout1d_30 (Spatia (None, 250, 13)           0         \\n\",\n+      \"_________________________________________________________________\\n\",\n+      \"batch_normalization_30 (Batc (None, 250, 13)           52        \\n\",\n+      \"_________________________________________________________________\\n\",\n+      \"conv1d_31 (Conv1D)           (None, 250, 118)          23128     \\n\",\n+      \"_________________________________________________________________\\n\",\n+      \"max_pooling1d_31 (MaxPooling (None, 250, 118)          0         \\n\",\n+      \"_________________________________________________________________\\n\",\n+      \"spatial_dropout1d_31 (Spatia (None, 250, 118)          0         \\n\",\n+      \"_________________________________________________________________\\n\",\n+      \"batch_normalization_31 (Batc (None, 250, 118)          472       \\n\",\n+      \"_________________________________________________________________\\n\",\n+      \"conv1d_32 (Conv1D)           (None, 250, 100)          59100     \\n\",\n+      \"_________________________________________________________________\\n\",\n+      \"max_pooling1d_32 (MaxPooling (None, 62, 100)           0         \\n\",\n+      \"_________________________________________________________________\\n\",\n+      \"batch_normalization_32 (Batc (None, 62, 100)           400       \\n\",\n+      \"_________________________________________________________________\\n\",\n+      \"spatial_dropout1d_32 (Spatia (None, 62, 100)           0         \\n\",\n+      \"_________________________________________________________________\\n\",\n+      \"flatten_10 (Flatten)         (None, 6200)              0         \\n\",\n+      \"_________________________________________________________________\\n\",\n+      \"dense_20 (Dense)             (None, 224)               1389024   \\n\",\n+      \"_________________________________________________________________\\n\",\n+      \"dense_21 (Dense)             (None, 4)                 900       \\n\",\n+      \"=================================================================\\n\",\n+      \"Total params: 1,473,128\\n\",\n+      \"Trainable params: 1,472,666\\n\",\n+      \"Non-trainable params: 462\\n\",\n+      \"_________________________________________________________________\\n\",\n+      \"Epoch 1/15\\n\",\n+      \"1718/1718 [==============================] - 17s 9ms/step - loss: 0.8808 - accuracy: 0.5957 - val_loss: 0.7407 - val_accuracy: 0.6540\\n\",\n+      \"Epoch 2/15\\n\",\n+      \"1718/1718 [==============================] - 16s 9ms/step - loss: 0.7469 - accuracy: 0.6667 - val_loss: 0.6817 - val_accuracy: 0.6965\\n\",\n+      \"Epoch 3/15\\n\",\n+      \"1718/1718 [==============================] - 16s 9ms/step - loss: 0.7124 - accuracy: 0.6844 - val_loss: 0.6538 - val_accuracy: 0.7119\\n\",\n+      \"Epoch 4/15\\n\",\n+      \"1718/1718 [==============================] - 16s 9ms/step - loss: 0.6946 - accuracy: 0.6928 - val_loss: 0.6408 - val_accuracy: 0.7208\\n\",\n+      \"Epoch 5/15\\n\",\n+      \"1718/1718 [==============================] - 16s 9ms/step - loss: 0.6826 - accuracy: 0.7002 - val_loss: 0.6335 - val_accuracy: 0.7241\\n\",\n+      \"Epoch 6/15\\n\",\n+      \"1718/1718 [==============================] - 16s 9ms/step - loss: 0.6738 - accuracy: 0.7040 - val_loss: 0.6274 - val_accuracy: 0.7235\\n\",\n+      \"Epoch 7/15\\n\",\n+      \"1718/1718 [==============================] - 16s 9ms/step - loss: 0.6628 - accuracy: 0.7101 - val_loss: 0.6174 - val_accuracy: 0.7341\\n\",\n+      \"Epoch 8/15\\n\",\n+      \"1718/1718 [==============================] - 16s 9ms/step - loss: 0.6567 - accuracy: 0.7140 - val_loss: 0.6130 - val_accuracy: 0.7348\\n\",\n+      \"Epoch 9/15\\n\",\n+      \"1718/1718 [==============================] - 16s 9ms/step - loss: 0.6504 - accuracy: 0.7172 - val_loss: 0.6082 - val_accuracy: 0.7349\\n\",\n+      \"Epoch 10/15\\n\",\n+      \"1718/1718 [==============================] - 16s 9ms/step - loss: 0.6446 - accuracy: 0.7210 - val_loss: 0.5957 - val_accuracy: 0.7439\\n\",\n+      \"Epoch 11/15\\n\",\n+      \"1718/1718 [==============================] - 16s 9ms/step - loss: 0.6259 - accuracy: 0.7303 - val_loss: 0.5723 - val_accuracy: 0.7541\\n\",\n+      \"Epoch 12/15\\n\",\n+      \"1718/1718 [==============================] - 16s 9ms/step - loss: 0.6125 - accuracy: 0.7375 - val_loss: 0.5652 - val_accuracy: 0.7593\\n\",\n+      \"Epoch 13/15\\n\",\n+      \"1718/1718 [==============================] - 16s 9ms/step - loss: 0.6046 - accuracy: 0.7413 - val_loss: 0.5563 - val_accuracy: 0.7636\\n\",\n+      \"Epoch 14/15\\n\",\n+      \"1718/1718 [==============================] - 16s 9ms/step - loss: 0.5980 - accuracy: 0.7445 - val_loss: 0.5602 - val_accuracy: 0.7630\\n\",\n+      \"Epoch 15/15\\n\",\n+      \"1718/1718 [==============================] - 16s 9ms/step - loss: 0.5926 - accuracy: 0.7469 - val_loss: 0.5568 - val_accuracy: 0.7652\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13996, 500), before header:(5991, 500)\\n\",\n+      \"Confusion matrix:\\n\",\n+      \"H V P M \\n\",\n+      \"[[4735   29   33  157]\\n\",\n+      \" [  10 3214 1058  816]\\n\",\n+      \" [  28  988 3521  437]\\n\",\n+      \" [ 129  787  398 3647]]\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0101: 0.839595737229199\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0011: 0.8000700455295943\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0110: 0.8730174613498775\\n\",\n+      \"Test accuracy: 0.7563416220543353\\n\",\n+      \"\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13996, 500), before header:(5992, 500)\\n\",\n+      \"Confusion matrix:\\n\",\n+      \"H V P M \\n\",\n+      \"[[4752   26   45  131]\\n\",\n+      \" [  18 3062 1100  919]\\n\",\n+      \" [  23  993 3489  469]\\n\",\n+      \" [ 145  810  378 3628]]\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0101: 0.8369021412847709\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0011: 0.7915749449669802\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0110: 0.8655193115869522\\n\",\n+      \"Test accuracy: 0.7469981989193516\\n\",\n+      \"\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13996, 500), before header:(5991, 500)\\n\",\n+      \"Confusion matrix:\\n\",\n+      \"H V P M \\n\",\n+      \"[[4756   22   37  139]\\n\",\n+      \" [  21 3138 1081  858]\\n\",\n+      \" [  21  989 3484  480]\\n\",\n+      \" [ 147  745  403 3666]]\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0101: 0.8357932656226548\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0011: 0.7990193625856807\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0110: 0.8705658678140792\\n\",\n+      \"Test accuracy: 0.7526892480112073\\n\",\n+      \"\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13996, 500), before header:(5991, 500)\\n\",\n+      \"Confusion matrix:\\n\",\n+      \"H V P M \\n\",\n+      \"[[4756   27   31  140]\\n\",\n+      \" [  14 3285 1042  757]\\n\",\n+      \" [  27  999 3545  403]\\n\",\n+      \" [ 116  822  418 3605]]\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0101: 0.8419472657227197\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0011: 0.8031720618401961\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0110: 0.8749687296742883\\n\",\n+      \"Test accuracy: 0.7600440286186021\\n\",\n+      \"\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13996, 500), before header:(5991, 500)\\n\",\n+      \"Confusion matrix:\\n\",\n+      \"H V P M \\n\",\n+      \"[[4749   25   38  142]\\n\",\n+      \" [  18 3201 1001  878]\\n\",\n+      \" [  35 1030 3510  399]\\n\",\n+      \" [ 134  810  422 3595]]\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0101: 0.8413468754690548\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0011: 0.7964677040076049\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0110: 0.868664632010807\\n\",\n+      \"Test accuracy: 0.7532396057437334\\n\",\n+      \"\\n\",\n+      \"\\n\",\n+      \"\\n\",\n+      \"created a json file of the test accuracies at /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/result_vary_raining_data_20220705-1112.json\\n\",\n+      \"------------- dataset 0: FPGA2.5cm with max_train_files=13 ----------------------------------\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13996, 500), before header:(5991, 500)\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13996, 500), before header:(5991, 500)\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13996, 500), before header:(5991, 500)\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13996, 500), before header:(5991, 500)\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13996, 500), before header:(5991, 500)\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13996, 500), before header:(5991, 500)\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13996, 500), before header:(5991, 500)\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13996, 500), before header:(5991, 500)\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13996, 500), before header:(5991, 500)\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13996, 500), before header:(5991, 500)\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13996, 500), before header:(5992, 500)\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13996, 500), before header:(5992, 500)\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13996, 500), before header:(5991, 500)\\n\",\n+      \"Model: \\\"sequential_11\\\"\\n\",\n+      \"_________________________________________________________________\\n\",\n+      \"Layer (type)                 Output Shape              Param #   \\n\",\n+      \"=================================================================\\n\",\n+      \"reshape_11 (Reshape)         (None, 500, 1)            0         \\n\",\n+      \"_________________________________________________________________\\n\",\n+      \"gaussian_noise_11 (GaussianN (None, 500, 1)            0         \\n\",\n+      \"_________________________________________________________________\\n\",\n+      \"conv1d_33 (Conv1D)           (None, 500, 13)           52        \\n\",\n+      \"_________________________________________________________________\\n\",\n+      \"max_pooling1d_33 (MaxPooling (None, 250, 13)           0         \\n\",\n+      \"_________________________________________________________________\\n\",\n+      \"spatial_dropout1d_33 (Spatia (None, 250, 13)           0         \\n\",\n+      \"_________________________________________________________________\\n\",\n+      \"batch_normalization_33 (Batc (None, 250, 13)           52        \\n\",\n+      \"_________________________________________________________________\\n\",\n+      \"conv1d_34 (Conv1D)           (None, 250, 118)          23128     \\n\",\n+      \"_________________________________________________________________\\n\",\n+      \"max_pooling1d_34 (MaxPooling (None, 250, 118)          0         \\n\",\n+      \"_________________________________________________________________\\n\",\n+      \"spatial_dropout1d_34 (Spatia (None, 250, 118)          0         \\n\",\n+      \"_________________________________________________________________\\n\",\n+      \"batch_normalization_34 (Batc (None, 250, 118)          472       \\n\",\n+      \"_________________________________________________________________\\n\",\n+      \"conv1d_35 (Conv1D)           (None, 250, 100)          59100     \\n\",\n+      \"_________________________________________________________________\\n\",\n+      \"max_pooling1d_35 (MaxPooling (None, 62, 100)           0         \\n\",\n+      \"_________________________________________________________________\\n\",\n+      \"batch_normalization_35 (Batc (None, 62, 100)           400       \\n\",\n+      \"_________________________________________________________________\\n\",\n+      \"spatial_dropout1d_35 (Spatia (None, 62, 100)           0         \\n\",\n+      \"_________________________________________________________________\\n\",\n+      \"flatten_11 (Flatten)         (None, 6200)              0         \\n\",\n+      \"_________________________________________________________________\\n\",\n+      \"dense_22 (Dense)             (None, 224)               1389024   \\n\",\n+      \"_________________________________________________________________\\n\",\n+      \"dense_23 (Dense)             (None, 4)                 900       \\n\",\n+      \"=================================================================\\n\",\n+      \"Total params: 1,473,128\\n\",\n+      \"Trainable params: 1,472,666\\n\",\n+      \"Non-trainable params: 462\\n\",\n+      \"_________________________________________________________________\\n\",\n+      \"Epoch 1/15\\n\",\n+      \"1874/1874 [==============================] - 19s 10ms/step - loss: 0.7933 - accuracy: 0.6487 - val_loss: 0.6253 - val_accuracy: 0.7299\\n\",\n+      \"Epoch 2/15\\n\",\n+      \"1874/1874 [==============================] - 17s 9ms/step - loss: 0.6631 - accuracy: 0.7121 - val_loss: 0.5908 - val_accuracy: 0.7474\\n\",\n+      \"Epoch 3/15\\n\",\n+      \"1874/1874 [==============================] - 17s 9ms/step - loss: 0.6286 - accuracy: 0.7286 - val_loss: 0.5681 - val_accuracy: 0.7581\\n\",\n+      \"Epoch 4/15\\n\",\n+      \"1874/1874 [==============================] - 18s 9ms/step - loss: 0.6085 - accuracy: 0.7379 - val_loss: 0.5511 - val_accuracy: 0.7642\\n\",\n+      \"Epoch 5/15\\n\",\n+      \"1874/1874 [==============================] - 17s 9ms/step - loss: 0.5971 - accuracy: 0.7425 - val_loss: 0.5493 - val_accuracy: 0.7664\\n\",\n+      \"Epoch 6/15\\n\",\n+      \"1874/1874 [==============================] - 17s 9ms/step - loss: 0.5879 - accuracy: 0.7471 - val_loss: 0.5464 - val_accuracy: 0.7674\\n\",\n+      \"Epoch 7/15\\n\",\n+      \"1874/1874 [==============================] - 17s 9ms/step - loss: 0.5812 - accuracy: 0.7500 - val_loss: 0.5436 - val_accuracy: 0.7654\\n\",\n+      \"Epoch 8/15\\n\",\n+      \"1874/1874 [==============================] - 17s 9ms/step - loss: 0.5751 - accuracy: 0.7531 - val_loss: 0.5369 - val_accuracy: 0.7689\\n\",\n+      \"Epoch 9/15\\n\",\n+      \"1874/1874 [==============================] - 17s 9ms/step - loss: 0.5711 - accuracy: 0.7546 - val_loss: 0.5370 - val_accuracy: 0.7706\\n\",\n+      \"Epoch 10/15\\n\",\n+      \"1874/1874 [==============================] - 17s 9ms/step - loss: 0.5655 - accuracy: 0.7580 - val_loss: 0.5344 - val_accuracy: 0.7730\\n\",\n+      \"Epoch 11/15\\n\",\n+      \"1874/1874 [==============================] - 17s 9ms/step - loss: 0.5605 - accuracy: 0.7602 - val_loss: 0.5285 - val_accuracy: 0.7765\\n\",\n+      \"Epoch 12/15\\n\",\n+      \"1874/1874 [==============================] - 18s 9ms/step - loss: 0.5571 - accuracy: 0.7624 - val_loss: 0.5307 - val_accuracy: 0.7722\\n\",\n+      \"Epoch 13/15\\n\",\n+      \"1874/1874 [==============================] - 17s 9ms/step - loss: 0.5530 - accuracy: 0.7630 - val_loss: 0.5260 - val_accuracy: 0.7776\\n\",\n+      \"Epoch 14/15\\n\",\n+      \"1874/1874 [==============================] - 17s 9ms/step - loss: 0.5501 - accuracy: 0.7648 - val_loss: 0.5266 - val_accuracy: 0.7763\\n\",\n+      \"Epoch 15/15\\n\",\n+      \"1874/1874 [==============================] - 17s 9ms/step - loss: 0.5462 - accuracy: 0.7669 - val_loss: 0.5257 - val_accuracy: 0.7792\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13996, 500), before header:(5991, 500)\\n\",\n+      \"Confusion matrix:\\n\",\n+      \"H V P M \\n\",\n+      \"[[4840   22   24   68]\\n\",\n+      \" [  16 3300 1115  667]\\n\",\n+      \" [  42  915 3694  323]\\n\",\n+      \" [ 210  821  453 3477]]\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0101: 0.8437984690048531\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0011: 0.8067744033621854\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0110: 0.8815229899434632\\n\",\n+      \"Test accuracy: 0.7660479311552509\\n\",\n+      \"\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13996, 500), before header:(5992, 500)\\n\",\n+      \"Confusion matrix:\\n\",\n+      \"H V P M \\n\",\n+      \"[[4827   15   38   74]\\n\",\n+      \" [  27 3229 1149  694]\\n\",\n+      \" [  38  944 3649  343]\\n\",\n+      \" [ 225  845  423 3468]]\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0101: 0.8399039423654192\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0011: 0.7995297178306984\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0110: 0.8787772663598159\\n\",\n+      \"Test accuracy: 0.7591054632779668\\n\",\n+      \"\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13996, 500), before header:(5991, 500)\\n\",\n+      \"Confusion matrix:\\n\",\n+      \"H V P M \\n\",\n+      \"[[4850   14   23   67]\\n\",\n+      \" [  23 3327 1129  619]\\n\",\n+      \" [  44  882 3689  359]\\n\",\n+      \" [ 232  862  462 3405]]\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0101: 0.8414969730324711\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0011: 0.8069745334467404\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0110: 0.8796217541401912\\n\",\n+      \"Test accuracy: 0.7640466303097013\\n\",\n+      \"\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13996, 500), before header:(5991, 500)\\n\",\n+      \"Confusion matrix:\\n\",\n+      \"H V P M \\n\",\n+      \"[[4850   27   19   58]\\n\",\n+      \" [  15 3352 1065  666]\\n\",\n+      \" [  35  893 3697  349]\\n\",\n+      \" [ 185  833  443 3500]]\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0101: 0.8481512983439236\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0011: 0.8121779156451694\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0110: 0.8805723720418271\\n\",\n+      \"Test accuracy: 0.77045079301546\\n\",\n+      \"\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13996, 500), before header:(5991, 500)\\n\",\n+      \"Confusion matrix:\\n\",\n+      \"H V P M \\n\",\n+      \"[[4832   18   29   75]\\n\",\n+      \" [  37 3264 1051  746]\\n\",\n+      \" [  42  906 3714  312]\\n\",\n+      \" [ 222  853  437 3449]]\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0101: 0.8470005503577325\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0011: 0.8036723870515835\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0110: 0.8762195427027568\\n\",\n+      \"Test accuracy: 0.7634462400560365\\n\",\n+      \"\\n\",\n+      \"\\n\",\n+      \"\\n\",\n+      \"created a json file of the test accuracies at /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/result_vary_raining_data_20220705-1112.json\\n\",\n+      \"------------- dataset 0: FPGA2.5cm with max_train_files=14 ----------------------------------\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13996, 500), before header:(5991, 500)\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13996, 500), before header:(5991, 500)\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13996, 500), before header:(5991, 500)\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13996, 500), before header:(5991, 500)\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13996, 500), before header:(5991, 500)\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13996, 500), before header:(5991, 500)\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13996, 500), before header:(5991, 500)\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13996, 500), before header:(5991, 500)\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13996, 500), before header:(5991, 500)\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13996, 500), before header:(5991, 500)\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13996, 500), before header:(5992, 500)\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13996, 500), before header:(5992, 500)\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13996, 500), before header:(5991, 500)\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13996, 500), before header:(5991, 500)\\n\",\n+      \"Model: \\\"sequential_12\\\"\\n\",\n+      \"_________________________________________________________________\\n\",\n+      \"Layer (type)                 Output Shape              Param #   \\n\",\n+      \"=================================================================\\n\",\n+      \"reshape_12 (Reshape)         (None, 500, 1)            0         \\n\",\n+      \"_________________________________________________________________\\n\",\n+      \"gaussian_noise_12 (GaussianN (None, 500, 1)            0         \\n\",\n+      \"_________________________________________________________________\\n\",\n+      \"conv1d_36 (Conv1D)           (None, 500, 13)           52        \\n\",\n+      \"_________________________________________________________________\\n\",\n+      \"max_pooling1d_36 (MaxPooling (None, 250, 13)           0         \\n\",\n+      \"_________________________________________________________________\\n\",\n+      \"spatial_dropout1d_36 (Spatia (None, 250, 13)           0         \\n\",\n+      \"_________________________________________________________________\\n\",\n+      \"batch_normalization_36 (Batc (None, 250, 13)           52        \\n\",\n+      \"_________________________________________________________________\\n\",\n+      \"conv1d_37 (Conv1D)           (None, 250, 118)          23128     \\n\",\n+      \"_________________________________________________________________\\n\",\n+      \"max_pooling1d_37 (MaxPooling (None, 250, 118)          0         \\n\",\n+      \"_________________________________________________________________\\n\",\n+      \"spatial_dropout1d_37 (Spatia (None, 250, 118)          0         \\n\",\n+      \"_________________________________________________________________\\n\",\n+      \"batch_normalization_37 (Batc (None, 250, 118)          472       \\n\",\n+      \"_________________________________________________________________\\n\",\n+      \"conv1d_38 (Conv1D)           (None, 250, 100)          59100     \\n\",\n+      \"_________________________________________________________________\\n\",\n+      \"max_pooling1d_38 (MaxPooling (None, 62, 100)           0         \\n\",\n+      \"_________________________________________________________________\\n\",\n+      \"batch_normalization_38 (Batc (None, 62, 100)           400       \\n\",\n+      \"_________________________________________________________________\\n\",\n+      \"spatial_dropout1d_38 (Spatia (None, 62, 100)           0         \\n\",\n+      \"_________________________________________________________________\\n\",\n+      \"flatten_12 (Flatten)         (None, 6200)              0         \\n\",\n+      \"_________________________________________________________________\\n\",\n+      \"dense_24 (Dense)             (None, 224)               1389024   \\n\",\n+      \"_________________________________________________________________\\n\",\n+      \"dense_25 (Dense)             (None, 4)                 900       \\n\",\n+      \"=================================================================\\n\",\n+      \"Total params: 1,473,128\\n\",\n+      \"Trainable params: 1,472,666\\n\",\n+      \"Non-trainable params: 462\\n\",\n+      \"_________________________________________________________________\\n\",\n+      \"Epoch 1/15\\n\",\n+      \"2030/2030 [==============================] - 20s 9ms/step - loss: 0.8267 - accuracy: 0.6306 - val_loss: 0.6694 - val_accuracy: 0.7079\\n\",\n+      \"Epoch 2/15\\n\",\n+      \"2030/2030 [==============================] - 19s 9ms/step - loss: 0.6887 - accuracy: 0.6992 - val_loss: 0.6207 - val_accuracy: 0.7312\\n\",\n+      \"Epoch 3/15\\n\",\n+      \"2030/2030 [==============================] - 19s 9ms/step - loss: 0.6579 - accuracy: 0.7139 - val_loss: 0.5995 - val_accuracy: 0.7405\\n\",\n+      \"Epoch 4/15\\n\",\n+      \"2030/2030 [==============================] - 19s 9ms/step - loss: 0.6396 - accuracy: 0.7232 - val_loss: 0.5792 - val_accuracy: 0.7490\\n\",\n+      \"Epoch 5/15\\n\",\n+      \"2030/2030 [==============================] - 19s 9ms/step - loss: 0.6212 - accuracy: 0.7325 - val_loss: 0.5664 - val_accuracy: 0.7593\\n\",\n+      \"Epoch 6/15\\n\",\n+      \"2030/2030 [==============================] - 19s 9ms/step - loss: 0.6116 - accuracy: 0.7362 - val_loss: 0.5669 - val_accuracy: 0.7586\\n\",\n+      \"Epoch 7/15\\n\",\n+      \"2030/2030 [==============================] - 19s 9ms/step - loss: 0.6034 - accuracy: 0.7411 - val_loss: 0.5547 - val_accuracy: 0.7649\\n\",\n+      \"Epoch 8/15\\n\",\n+      \"2030/2030 [==============================] - 19s 9ms/step - loss: 0.5965 - accuracy: 0.7439 - val_loss: 0.5497 - val_accuracy: 0.7666\\n\",\n+      \"Epoch 9/15\\n\",\n+      \"2030/2030 [==============================] - 19s 9ms/step - loss: 0.5918 - accuracy: 0.7467 - val_loss: 0.5444 - val_accuracy: 0.7691\\n\",\n+      \"Epoch 10/15\\n\",\n+      \"2030/2030 [==============================] - 19s 9ms/step - loss: 0.5858 - accuracy: 0.7493 - val_loss: 0.5394 - val_accuracy: 0.7705\\n\",\n+      \"Epoch 11/15\\n\",\n+      \"2030/2030 [==============================] - 19s 9ms/step - loss: 0.5811 - accuracy: 0.7513 - val_loss: 0.5409 - val_accuracy: 0.7687\\n\",\n+      \"Epoch 12/15\\n\",\n+      \"2030/2030 [==============================] - 19s 9ms/step - loss: 0.5758 - accuracy: 0.7539 - val_loss: 0.5355 - val_accuracy: 0.7736\\n\",\n+      \"Epoch 13/15\\n\",\n+      \"2030/2030 [==============================] - 19s 9ms/step - loss: 0.5707 - accuracy: 0.7571 - val_loss: 0.5305 - val_accuracy: 0.7749\\n\",\n+      \"Epoch 14/15\\n\",\n+      \"2030/2030 [==============================] - 19s 9ms/step - loss: 0.5647 - accuracy: 0.7597 - val_loss: 0.5304 - val_accuracy: 0.7745\\n\",\n+      \"Epoch 15/15\\n\",\n+      \"2030/2030 [==============================] - 19s 9ms/step - loss: 0.5609 - accuracy: 0.7612 - val_loss: 0.5273 - val_accuracy: 0.7747\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13996, 500), before header:(5991, 500)\\n\",\n+      \"Confusion matrix:\\n\",\n+      \"H V P M \\n\",\n+      \"[[4763   12   34  145]\\n\",\n+      \" [   7 3252 1094  745]\\n\",\n+      \" [  31  901 3676  366]\\n\",\n+      \" [ 143  783  484 3551]]\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0101: 0.8422974933706909\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0011: 0.8060739480662431\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0110: 0.8768199329564217\\n\",\n+      \"Test accuracy: 0.7625956871966778\\n\",\n+      \"\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13996, 500), before header:(5992, 500)\\n\",\n+      \"Confusion matrix:\\n\",\n+      \"H V P M \\n\",\n+      \"[[4768   10   50  126]\\n\",\n+      \" [  14 3181 1133  771]\\n\",\n+      \" [  31  936 3626  381]\\n\",\n+      \" [ 131  784  441 3605]]\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0101: 0.8413047828697219\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0011: 0.8017810686411847\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0110: 0.8758254952971783\\n\",\n+      \"Test accuracy: 0.7594556734040424\\n\",\n+      \"\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13996, 500), before header:(5991, 500)\\n\",\n+      \"Confusion matrix:\\n\",\n+      \"H V P M \\n\",\n+      \"[[4784   13   34  123]\\n\",\n+      \" [  13 3171 1161  753]\\n\",\n+      \" [  27  887 3669  391]\\n\",\n+      \" [ 152  750  484 3575]]\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0101: 0.8386951518487017\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0011: 0.8055235903337169\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0110: 0.8766698353930055\\n\",\n+      \"Test accuracy: 0.760444288787712\\n\",\n+      \"\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13996, 500), before header:(5991, 500)\\n\",\n+      \"Confusion matrix:\\n\",\n+      \"H V P M \\n\",\n+      \"[[4782   24   29  119]\\n\",\n+      \" [   6 3281 1113  698]\\n\",\n+      \" [  23  904 3712  335]\\n\",\n+      \" [ 120  796  512 3533]]\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0101: 0.843248111272327\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0011: 0.8097763546305098\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0110: 0.8787712012808325\\n\",\n+      \"Test accuracy: 0.7658978335918347\\n\",\n+      \"\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13996, 500), before header:(5991, 500)\\n\",\n+      \"Confusion matrix:\\n\",\n+      \"H V P M \\n\",\n+      \"[[4758   19   41  136]\\n\",\n+      \" [  20 3209 1062  807]\\n\",\n+      \" [  24  863 3724  363]\\n\",\n+      \" [ 140  769  483 3569]]\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0101: 0.8455996397658478\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0011: 0.8077750537849602\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0110: 0.8736178516035423\\n\",\n+      \"Test accuracy: 0.7634962725771751\\n\",\n+      \"\\n\",\n+      \"\\n\",\n+      \"\\n\",\n+      \"created a json file of the test accuracies at /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/result_vary_raining_data_20220705-1112.json\\n\",\n+      \"------------- dataset 0: FPGA2.5cm with max_train_files=15 ----------------------------------\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13996, 500), before header:(5991, 500)\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13996, 500), before header:(5991, 500)\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13996, 500), before header:(5991, 500)\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13996, 500), before header:(5991, 500)\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13996, 500), before header:(5991, 500)\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13996, 500), before header:(5991, 500)\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13996, 500), before header:(5991, 500)\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13996, 500), before header:(5991, 500)\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13996, 500), before header:(5991, 500)\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13996, 500), before header:(5991, 500)\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13996, 500), before header:(5992, 500)\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13996, 500), before header:(5992, 500)\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13996, 500), before header:(5991, 500)\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13996, 500), before header:(5991, 500)\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13996, 500), before header:(5991, 500)\\n\",\n+      \"Model: \\\"sequential_13\\\"\\n\",\n+      \"_________________________________________________________________\\n\",\n+      \"Layer (type)                 Output Shape              Param #   \\n\",\n+      \"=================================================================\\n\",\n+      \"reshape_13 (Reshape)         (None, 500, 1)            0         \\n\",\n+      \"_________________________________________________________________\\n\",\n+      \"gaussian_noise_13 (GaussianN (None, 500, 1)            0         \\n\",\n+      \"_________________________________________________________________\\n\",\n+      \"conv1d_39 (Conv1D)           (None, 500, 13)           52        \\n\",\n+      \"_________________________________________________________________\\n\",\n+      \"max_pooling1d_39 (MaxPooling (None, 250, 13)           0         \\n\",\n+      \"_________________________________________________________________\\n\",\n+      \"spatial_dropout1d_39 (Spatia (None, 250, 13)           0         \\n\",\n+      \"_________________________________________________________________\\n\",\n+      \"batch_normalization_39 (Batc (None, 250, 13)           52        \\n\",\n+      \"_________________________________________________________________\\n\",\n+      \"conv1d_40 (Conv1D)           (None, 250, 118)          23128     \\n\",\n+      \"_________________________________________________________________\\n\",\n+      \"max_pooling1d_40 (MaxPooling (None, 250, 118)          0         \\n\",\n+      \"_________________________________________________________________\\n\",\n+      \"spatial_dropout1d_40 (Spatia (None, 250, 118)          0         \\n\",\n+      \"_________________________________________________________________\\n\",\n+      \"batch_normalization_40 (Batc (None, 250, 118)          472       \\n\",\n+      \"_________________________________________________________________\\n\",\n+      \"conv1d_41 (Conv1D)           (None, 250, 100)          59100     \\n\",\n+      \"_________________________________________________________________\\n\",\n+      \"max_pooling1d_41 (MaxPooling (None, 62, 100)           0         \\n\",\n+      \"_________________________________________________________________\\n\",\n+      \"batch_normalization_41 (Batc (None, 62, 100)           400       \\n\",\n+      \"_________________________________________________________________\\n\",\n+      \"spatial_dropout1d_41 (Spatia (None, 62, 100)           0         \\n\",\n+      \"_________________________________________________________________\\n\",\n+      \"flatten_13 (Flatten)         (None, 6200)              0         \\n\",\n+      \"_________________________________________________________________\\n\",\n+      \"dense_26 (Dense)             (None, 224)               1389024   \\n\",\n+      \"_________________________________________________________________\\n\",\n+      \"dense_27 (Dense)             (None, 4)                 900       \\n\",\n+      \"=================================================================\\n\",\n+      \"Total params: 1,473,128\\n\",\n+      \"Trainable params: 1,472,666\\n\",\n+      \"Non-trainable params: 462\\n\",\n+      \"_________________________________________________________________\\n\",\n+      \"Epoch 1/15\\n\",\n+      \"2187/2187 [==============================] - 22s 9ms/step - loss: 0.8171 - accuracy: 0.6390 - val_loss: 0.6600 - val_accuracy: 0.7110\\n\",\n+      \"Epoch 2/15\\n\",\n+      \"2187/2187 [==============================] - 20s 9ms/step - loss: 0.6737 - accuracy: 0.7085 - val_loss: 0.6256 - val_accuracy: 0.7264\\n\",\n+      \"Epoch 3/15\\n\",\n+      \"2187/2187 [==============================] - 20s 9ms/step - loss: 0.6441 - accuracy: 0.7216 - val_loss: 0.6060 - val_accuracy: 0.7369\\n\",\n+      \"Epoch 4/15\\n\",\n+      \"2187/2187 [==============================] - 20s 9ms/step - loss: 0.6261 - accuracy: 0.7295 - val_loss: 0.5856 - val_accuracy: 0.7492\\n\",\n+      \"Epoch 5/15\\n\",\n+      \"2187/2187 [==============================] - 20s 9ms/step - loss: 0.6084 - accuracy: 0.7394 - val_loss: 0.5834 - val_accuracy: 0.7468\\n\",\n+      \"Epoch 6/15\\n\",\n+      \"2187/2187 [==============================] - 20s 9ms/step - loss: 0.5965 - accuracy: 0.7451 - val_loss: 0.5669 - val_accuracy: 0.7556\\n\",\n+      \"Epoch 7/15\\n\",\n+      \"2187/2187 [==============================] - 20s 9ms/step - loss: 0.5876 - accuracy: 0.7493 - val_loss: 0.5550 - val_accuracy: 0.7601\\n\",\n+      \"Epoch 8/15\\n\",\n+      \"2187/2187 [==============================] - 20s 9ms/step - loss: 0.5822 - accuracy: 0.7513 - val_loss: 0.5524 - val_accuracy: 0.7646\\n\",\n+      \"Epoch 9/15\\n\",\n+      \"2187/2187 [==============================] - 20s 9ms/step - loss: 0.5764 - accuracy: 0.7544 - val_loss: 0.5546 - val_accuracy: 0.7613\\n\",\n+      \"Epoch 10/15\\n\",\n+      \"2187/2187 [==============================] - 20s 9ms/step - loss: 0.5722 - accuracy: 0.7561 - val_loss: 0.5461 - val_accuracy: 0.7643\\n\",\n+      \"Epoch 11/15\\n\",\n+      \"2187/2187 [==============================] - 20s 9ms/step - loss: 0.5679 - accuracy: 0.7580 - val_loss: 0.5449 - val_accuracy: 0.7672\\n\",\n+      \"Epoch 12/15\\n\",\n+      \"2187/2187 [==============================] - 20s 9ms/step - loss: 0.5633 - accuracy: 0.7600 - val_loss: 0.5423 - val_accuracy: 0.7663\\n\",\n+      \"Epoch 13/15\\n\",\n+      \"2187/2187 [==============================] - 20s 9ms/step - loss: 0.5596 - accuracy: 0.7615 - val_loss: 0.5316 - val_accuracy: 0.7741\\n\",\n+      \"Epoch 14/15\\n\",\n+      \"2187/2187 [==============================] - 20s 9ms/step - loss: 0.5556 - accuracy: 0.7647 - val_loss: 0.5323 - val_accuracy: 0.7717\\n\",\n+      \"Epoch 15/15\\n\",\n+      \"2187/2187 [==============================] - 20s 9ms/step - loss: 0.5530 - accuracy: 0.7652 - val_loss: 0.5336 - val_accuracy: 0.7730\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13996, 500), before header:(5991, 500)\\n\",\n+      \"Confusion matrix:\\n\",\n+      \"H V P M \\n\",\n+      \"[[4806   16   26  106]\\n\",\n+      \" [  17 3760  780  541]\\n\",\n+      \" [  37 1318 3292  327]\\n\",\n+      \" [ 170 1064  378 3349]]\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0101: 0.8442987942162405\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0011: 0.7977685495572122\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0110: 0.8796217541401912\\n\",\n+      \"Test accuracy: 0.760844548956822\\n\",\n+      \"\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13996, 500), before header:(5992, 500)\\n\",\n+      \"Confusion matrix:\\n\",\n+      \"H V P M \\n\",\n+      \"[[4797   16   40  101]\\n\",\n+      \" [  18 3726  826  529]\\n\",\n+      \" [  29 1331 3314  300]\\n\",\n+      \" [ 171 1124  356 3310]]\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0101: 0.8439563738242946\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0011: 0.7923253952371423\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0110: 0.8793275965579348\\n\",\n+      \"Test accuracy: 0.7578046828096858\\n\",\n+      \"\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13996, 500), before header:(5991, 500)\\n\",\n+      \"Confusion matrix:\\n\",\n+      \"H V P M \\n\",\n+      \"[[4826   15   26   87]\\n\",\n+      \" [  18 3771  798  511]\\n\",\n+      \" [  44 1268 3356  306]\\n\",\n+      \" [ 204 1060  364 3333]]\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0101: 0.846900485315455\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0011: 0.7999699804873167\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0110: 0.882723770450793\\n\",\n+      \"Test accuracy: 0.7647971181267824\\n\",\n+      \"\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13996, 500), before header:(5991, 500)\\n\",\n+      \"Confusion matrix:\\n\",\n+      \"H V P M \\n\",\n+      \"[[4825   21   24   84]\\n\",\n+      \" [  13 3844  741  500]\\n\",\n+      \" [  26 1310 3327  311]\\n\",\n+      \" [ 172 1095  380 3314]]\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0101: 0.8483013959073398\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0011: 0.8022714764596988\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0110: 0.8814229249011858\\n\",\n+      \"Test accuracy: 0.7659978986341122\\n\",\n+      \"\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13996, 500), before header:(5991, 500)\\n\",\n+      \"Confusion matrix:\\n\",\n+      \"H V P M \\n\",\n+      \"[[4821   14   23   96]\\n\",\n+      \" [  28 3752  715  603]\\n\",\n+      \" [  36 1305 3344  289]\\n\",\n+      \" [ 168 1122  379 3292]]\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0101: 0.850202631710612\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0011: 0.7964677040076049\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0110: 0.875218892279982\\n\",\n+      \"Test accuracy: 0.7609446139990994\\n\",\n+      \"\\n\",\n+      \"\\n\",\n+      \"\\n\",\n+      \"created a json file of the test accuracies at /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/result_vary_raining_data_20220705-1112.json\\n\",\n+      \"------------- dataset 0: FPGA2.5cm with max_train_files=16 ----------------------------------\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13996, 500), before header:(5991, 500)\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13996, 500), before header:(5991, 500)\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13996, 500), before header:(5991, 500)\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13996, 500), before header:(5991, 500)\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13996, 500), before header:(5991, 500)\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13996, 500), before header:(5991, 500)\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13996, 500), before header:(5991, 500)\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13996, 500), before header:(5991, 500)\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13996, 500), before header:(5991, 500)\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13996, 500), before header:(5991, 500)\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13996, 500), before header:(5992, 500)\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13996, 500), before header:(5992, 500)\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13996, 500), before header:(5991, 500)\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13996, 500), before header:(5991, 500)\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13996, 500), before header:(5991, 500)\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13996, 500), before header:(5991, 500)\\n\",\n+      \"Model: \\\"sequential_14\\\"\\n\",\n+      \"_________________________________________________________________\\n\",\n+      \"Layer (type)                 Output Shape              Param #   \\n\",\n+      \"=================================================================\\n\",\n+      \"reshape_14 (Reshape)         (None, 500, 1)            0         \\n\",\n+      \"_________________________________________________________________\\n\",\n+      \"gaussian_noise_14 (GaussianN (None, 500, 1)            0         \\n\",\n+      \"_________________________________________________________________\\n\",\n+      \"conv1d_42 (Conv1D)           (None, 500, 13)           52        \\n\",\n+      \"_________________________________________________________________\\n\",\n+      \"max_pooling1d_42 (MaxPooling (None, 250, 13)           0         \\n\",\n+      \"_________________________________________________________________\\n\",\n+      \"spatial_dropout1d_42 (Spatia (None, 250, 13)           0         \\n\",\n+      \"_________________________________________________________________\\n\",\n+      \"batch_normalization_42 (Batc (None, 250, 13)           52        \\n\",\n+      \"_________________________________________________________________\\n\",\n+      \"conv1d_43 (Conv1D)           (None, 250, 118)          23128     \\n\",\n+      \"_________________________________________________________________\\n\",\n+      \"max_pooling1d_43 (MaxPooling (None, 250, 118)          0         \\n\",\n+      \"_________________________________________________________________\\n\",\n+      \"spatial_dropout1d_43 (Spatia (None, 250, 118)          0         \\n\",\n+      \"_________________________________________________________________\\n\",\n+      \"batch_normalization_43 (Batc (None, 250, 118)          472       \\n\",\n+      \"_________________________________________________________________\\n\",\n+      \"conv1d_44 (Conv1D)           (None, 250, 100)          59100     \\n\",\n+      \"_________________________________________________________________\\n\",\n+      \"max_pooling1d_44 (MaxPooling (None, 62, 100)           0         \\n\",\n+      \"_________________________________________________________________\\n\",\n+      \"batch_normalization_44 (Batc (None, 62, 100)           400       \\n\",\n+      \"_________________________________________________________________\\n\",\n+      \"spatial_dropout1d_44 (Spatia (None, 62, 100)           0         \\n\",\n+      \"_________________________________________________________________\\n\",\n+      \"flatten_14 (Flatten)         (None, 6200)              0         \\n\",\n+      \"_________________________________________________________________\\n\",\n+      \"dense_28 (Dense)             (None, 224)               1389024   \\n\",\n+      \"_________________________________________________________________\\n\",\n+      \"dense_29 (Dense)             (None, 4)                 900       \\n\",\n+      \"=================================================================\\n\",\n+      \"Total params: 1,473,128\\n\",\n+      \"Trainable params: 1,472,666\\n\",\n+      \"Non-trainable params: 462\\n\",\n+      \"_________________________________________________________________\\n\",\n+      \"Epoch 1/15\\n\",\n+      \"2343/2343 [==============================] - 24s 9ms/step - loss: 0.8008 - accuracy: 0.6422 - val_loss: 0.6578 - val_accuracy: 0.7077\\n\",\n+      \"Epoch 2/15\\n\",\n+      \"2343/2343 [==============================] - 22s 9ms/step - loss: 0.6783 - accuracy: 0.7042 - val_loss: 0.6129 - val_accuracy: 0.7359\\n\",\n+      \"Epoch 3/15\\n\",\n+      \"2343/2343 [==============================] - 22s 9ms/step - loss: 0.6511 - accuracy: 0.7181 - val_loss: 0.5904 - val_accuracy: 0.7476\\n\",\n+      \"Epoch 4/15\\n\",\n+      \"2343/2343 [==============================] - 22s 9ms/step - loss: 0.6302 - accuracy: 0.7270 - val_loss: 0.5743 - val_accuracy: 0.7549\\n\",\n+      \"Epoch 5/15\\n\",\n+      \"2343/2343 [==============================] - 22s 9ms/step - loss: 0.6157 - accuracy: 0.7339 - val_loss: 0.5627 - val_accuracy: 0.7608\\n\",\n+      \"Epoch 6/15\\n\",\n+      \"2343/2343 [==============================] - 22s 9ms/step - loss: 0.6076 - accuracy: 0.7372 - val_loss: 0.5600 - val_accuracy: 0.7624\\n\",\n+      \"Epoch 7/15\\n\",\n+      \"2343/2343 [==============================] - 22s 9ms/step - loss: 0.6017 - accuracy: 0.7408 - val_loss: 0.5545 - val_accuracy: 0.7684\\n\",\n+      \"Epoch 8/15\\n\",\n+      \"2343/2343 [==============================] - 22s 9ms/step - loss: 0.5957 - accuracy: 0.7440 - val_loss: 0.5526 - val_accuracy: 0.7679\\n\",\n+      \"Epoch 9/15\\n\",\n+      \"2343/2343 [==============================] - 22s 9ms/step - loss: 0.5909 - accuracy: 0.7457 - val_loss: 0.5563 - val_accuracy: 0.7641\\n\",\n+      \"Epoch 10/15\\n\",\n+      \"2343/2343 [==============================] - 22s 9ms/step - loss: 0.5847 - accuracy: 0.7489 - val_loss: 0.5516 - val_accuracy: 0.7667\\n\",\n+      \"Epoch 11/15\\n\",\n+      \"2343/2343 [==============================] - 22s 9ms/step - loss: 0.5829 - accuracy: 0.7495 - val_loss: 0.5459 - val_accuracy: 0.7703\\n\",\n+      \"Epoch 12/15\\n\",\n+      \"2343/2343 [==============================] - 22s 9ms/step - loss: 0.5777 - accuracy: 0.7517 - val_loss: 0.5419 - val_accuracy: 0.7706\\n\",\n+      \"Epoch 13/15\\n\",\n+      \"2343/2343 [==============================] - 22s 9ms/step - loss: 0.5724 - accuracy: 0.7548 - val_loss: 0.5342 - val_accuracy: 0.7746\\n\",\n+      \"Epoch 14/15\\n\",\n+      \"2343/2343 [==============================] - 22s 9ms/step - loss: 0.5680 - accuracy: 0.7567 - val_loss: 0.5300 - val_accuracy: 0.7735\\n\",\n+      \"Epoch 15/15\\n\",\n+      \"2343/2343 [==============================] - 22s 9ms/step - loss: 0.5632 - accuracy: 0.7599 - val_loss: 0.5309 - val_accuracy: 0.7756\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13996, 500), before header:(5991, 500)\\n\",\n+      \"Confusion matrix:\\n\",\n+      \"H V P M \\n\",\n+      \"[[4735   17   31  171]\\n\",\n+      \" [   8 3445  952  693]\\n\",\n+      \" [  22 1066 3533  353]\\n\",\n+      \" [ 119  828  446 3568]]\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0101: 0.8432981437934658\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0011: 0.8057737529394107\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0110: 0.880022014309301\\n\",\n+      \"Test accuracy: 0.7645469555210888\\n\",\n+      \"\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13996, 500), before header:(5992, 500)\\n\",\n+      \"Confusion matrix:\\n\",\n+      \"H V P M \\n\",\n+      \"[[4766   11   45  132]\\n\",\n+      \" [  12 3351 1027  709]\\n\",\n+      \" [  28 1075 3548  323]\\n\",\n+      \" [ 131  874  426 3530]]\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0101: 0.8430558335001\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0011: 0.7988292975785471\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0110: 0.8785271162697619\\n\",\n+      \"Test accuracy: 0.7602061236742045\\n\",\n+      \"\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13996, 500), before header:(5991, 500)\\n\",\n+      \"Confusion matrix:\\n\",\n+      \"H V P M \\n\",\n+      \"[[4791   14   27  122]\\n\",\n+      \" [  12 3386 1008  692]\\n\",\n+      \" [  29  994 3598  353]\\n\",\n+      \" [ 143  808  440 3570]]\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0101: 0.8455996397658478\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0011: 0.8087256716865963\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0110: 0.881172762295492\\n\",\n+      \"Test accuracy: 0.7677490368739681\\n\",\n+      \"\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13996, 500), before header:(5991, 500)\\n\",\n+      \"Confusion matrix:\\n\",\n+      \"H V P M \\n\",\n+      \"[[4758   18   30  148]\\n\",\n+      \" [   5 3521  932  640]\\n\",\n+      \" [  17 1101 3539  317]\\n\",\n+      \" [  96  875  439 3551]]\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0101: 0.84710061540001\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0011: 0.8079251513483764\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0110: 0.8828738680142092\\n\",\n+      \"Test accuracy: 0.7689498173812979\\n\",\n+      \"\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13996, 500), before header:(5991, 500)\\n\",\n+      \"Confusion matrix:\\n\",\n+      \"H V P M \\n\",\n+      \"[[4766   16   31  141]\\n\",\n+      \" [  11 3406  936  745]\\n\",\n+      \" [  21 1054 3589  310]\\n\",\n+      \" [ 100  866  454 3541]]\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0101: 0.8488017211187272\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0011: 0.8051733626857457\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0110: 0.8772201931255316\\n\",\n+      \"Test accuracy: 0.7655976384650023\\n\",\n+      \"\\n\",\n+      \"\\n\",\n+      \"\\n\",\n+      \"created a json file of the test accuracies at /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/result_vary_raining_data_20220705-1112.json\\n\",\n+      \"------------- dataset 0: FPGA2.5cm with max_train_files=17 ----------------------------------\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13996, 500), before header:(5991, 500)\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13996, 500), before header:(5991, 500)\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13996, 500), before header:(5991, 500)\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13996, 500), before header:(5991, 500)\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13996, 500), before header:(5991, 500)\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13996, 500), before header:(5991, 500)\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13996, 500), before header:(5991, 500)\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13996, 500), before header:(5991, 500)\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13996, 500), before header:(5991, 500)\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13996, 500), before header:(5991, 500)\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13996, 500), before header:(5992, 500)\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13996, 500), before header:(5992, 500)\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13996, 500), before header:(5991, 500)\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13996, 500), before header:(5991, 500)\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13996, 500), before header:(5991, 500)\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13996, 500), before header:(5991, 500)\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13996, 500), before header:(5991, 500)\\n\",\n+      \"Model: \\\"sequential_15\\\"\\n\",\n+      \"_________________________________________________________________\\n\",\n+      \"Layer (type)                 Output Shape              Param #   \\n\",\n+      \"=================================================================\\n\",\n+      \"reshape_15 (Reshape)         (None, 500, 1)            0         \\n\",\n+      \"_________________________________________________________________\\n\",\n+      \"gaussian_noise_15 (GaussianN (None, 500, 1)            0         \\n\",\n+      \"_________________________________________________________________\\n\",\n+      \"conv1d_45 (Conv1D)           (None, 500, 13)           52        \\n\",\n+      \"_________________________________________________________________\\n\",\n+      \"max_pooling1d_45 (MaxPooling (None, 250, 13)           0         \\n\",\n+      \"_________________________________________________________________\\n\",\n+      \"spatial_dropout1d_45 (Spatia (None, 250, 13)           0         \\n\",\n+      \"_________________________________________________________________\\n\",\n+      \"batch_normalization_45 (Batc (None, 250, 13)           52        \\n\",\n+      \"_________________________________________________________________\\n\",\n+      \"conv1d_46 (Conv1D)           (None, 250, 118)          23128     \\n\",\n+      \"_________________________________________________________________\\n\",\n+      \"max_pooling1d_46 (MaxPooling (None, 250, 118)          0         \\n\",\n+      \"_________________________________________________________________\\n\",\n+      \"spatial_dropout1d_46 (Spatia (None, 250, 118)          0         \\n\",\n+      \"_________________________________________________________________\\n\",\n+      \"batch_normalization_46 (Batc (None, 250, 118)          472       \\n\",\n+      \"_________________________________________________________________\\n\",\n+      \"conv1d_47 (Conv1D)           (None, 250, 100)          59100     \\n\",\n+      \"_________________________________________________________________\\n\",\n+      \"max_pooling1d_47 (MaxPooling (None, 62, 100)           0         \\n\",\n+      \"_________________________________________________________________\\n\",\n+      \"batch_normalization_47 (Batc (None, 62, 100)           400       \\n\",\n+      \"_________________________________________________________________\\n\",\n+      \"spatial_dropout1d_47 (Spatia (None, 62, 100)           0         \\n\",\n+      \"_________________________________________________________________\\n\",\n+      \"flatten_15 (Flatten)         (None, 6200)              0         \\n\",\n+      \"_________________________________________________________________\\n\",\n+      \"dense_30 (Dense)             (None, 224)               1389024   \\n\",\n+      \"_________________________________________________________________\\n\",\n+      \"dense_31 (Dense)             (None, 4)                 900       \\n\",\n+      \"=================================================================\\n\",\n+      \"Total params: 1,473,128\\n\",\n+      \"Trainable params: 1,472,666\\n\",\n+      \"Non-trainable params: 462\\n\",\n+      \"_________________________________________________________________\\n\",\n+      \"Epoch 1/15\\n\",\n+      \"2499/2499 [==============================] - 25s 9ms/step - loss: 0.7556 - accuracy: 0.6654 - val_loss: 0.6472 - val_accuracy: 0.7189\\n\",\n+      \"Epoch 2/15\\n\",\n+      \"2499/2499 [==============================] - 23s 9ms/step - loss: 0.6444 - accuracy: 0.7203 - val_loss: 0.5755 - val_accuracy: 0.7552\\n\",\n+      \"Epoch 3/15\\n\",\n+      \"2499/2499 [==============================] - 23s 9ms/step - loss: 0.6161 - accuracy: 0.7342 - val_loss: 0.5547 - val_accuracy: 0.7638\\n\",\n+      \"Epoch 4/15\\n\",\n+      \"2499/2499 [==============================] - 23s 9ms/step - loss: 0.5988 - accuracy: 0.7423 - val_loss: 0.5438 - val_accuracy: 0.7665\\n\",\n+      \"Epoch 5/15\\n\",\n+      \"2499/2499 [==============================] - 23s 9ms/step - loss: 0.5873 - accuracy: 0.7483 - val_loss: 0.5399 - val_accuracy: 0.7697\\n\",\n+      \"Epoch 6/15\\n\",\n+      \"2499/2499 [==============================] - 23s 9ms/step - loss: 0.5797 - accuracy: 0.7515 - val_loss: 0.5409 - val_accuracy: 0.7693\\n\",\n+      \"Epoch 7/15\\n\",\n+      \"2499/2499 [==============================] - 23s 9ms/step - loss: 0.5747 - accuracy: 0.7535 - val_loss: 0.5338 - val_accuracy: 0.7720\\n\",\n+      \"Epoch 8/15\\n\",\n+      \"2499/2499 [==============================] - 23s 9ms/step - loss: 0.5684 - accuracy: 0.7575 - val_loss: 0.5235 - val_accuracy: 0.7769\\n\",\n+      \"Epoch 9/15\\n\",\n+      \"2499/2499 [==============================] - 23s 9ms/step - loss: 0.5638 - accuracy: 0.7593 - val_loss: 0.5253 - val_accuracy: 0.7776\\n\",\n+      \"Epoch 10/15\\n\",\n+      \"2499/2499 [==============================] - 23s 9ms/step - loss: 0.5595 - accuracy: 0.7615 - val_loss: 0.5275 - val_accuracy: 0.7751\\n\",\n+      \"Epoch 11/15\\n\",\n+      \"2499/2499 [==============================] - 23s 9ms/step - loss: 0.5559 - accuracy: 0.7633 - val_loss: 0.5220 - val_accuracy: 0.7788\\n\",\n+      \"Epoch 12/15\\n\",\n+      \"2499/2499 [==============================] - 23s 9ms/step - loss: 0.5518 - accuracy: 0.7648 - val_loss: 0.5259 - val_accuracy: 0.7757\\n\",\n+      \"Epoch 13/15\\n\",\n+      \"2499/2499 [==============================] - 23s 9ms/step - loss: 0.5487 - accuracy: 0.7662 - val_loss: 0.5261 - val_accuracy: 0.7762\\n\",\n+      \"Epoch 14/15\\n\",\n+      \"2499/2499 [==============================] - 23s 9ms/step - loss: 0.5439 - accuracy: 0.7687 - val_loss: 0.5152 - val_accuracy: 0.7816\\n\",\n+      \"Epoch 15/15\\n\",\n+      \"2499/2499 [==============================] - 23s 9ms/step - loss: 0.5406 - accuracy: 0.7696 - val_loss: 0.5129 - val_accuracy: 0.7827\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13996, 500), before header:(5991, 500)\\n\",\n+      \"Confusion matrix:\\n\",\n+      \"H V P M \\n\",\n+      \"[[4821    5   24  104]\\n\",\n+      \" [  15 2918 1193  972]\\n\",\n+      \" [  41  706 3763  464]\\n\",\n+      \" [ 138  500  396 3927]]\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0101: 0.8488517536398659\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0011: 0.8159803872517136\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0110: 0.879071396407665\\n\",\n+      \"Test accuracy: 0.7719517686496222\\n\",\n+      \"\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13996, 500), before header:(5992, 500)\\n\",\n+      \"Confusion matrix:\\n\",\n+      \"H V P M \\n\",\n+      \"[[4837    5   30   82]\\n\",\n+      \" [  29 2726 1344 1000]\\n\",\n+      \" [  48  679 3790  457]\\n\",\n+      \" [ 154  502  406 3899]]\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0101: 0.8421052631578947\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0011: 0.807934760856514\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0110: 0.8760756453872324\\n\",\n+      \"Test accuracy: 0.7630578347008204\\n\",\n+      \"\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13996, 500), before header:(5991, 500)\\n\",\n+      \"Confusion matrix:\\n\",\n+      \"H V P M \\n\",\n+      \"[[4835    4   22   93]\\n\",\n+      \" [  28 2824 1289  957]\\n\",\n+      \" [  54  662 3766  492]\\n\",\n+      \" [ 177  487  395 3902]]\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0101: 0.8428978836243558\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0011: 0.8128283384199729\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0110: 0.8779706809426127\\n\",\n+      \"Test accuracy: 0.7668484514934708\\n\",\n+      \"\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13996, 500), before header:(5991, 500)\\n\",\n+      \"Confusion matrix:\\n\",\n+      \"H V P M \\n\",\n+      \"[[4827    7   21   99]\\n\",\n+      \" [  12 2976 1152  958]\\n\",\n+      \" [  41  696 3778  459]\\n\",\n+      \" [ 142  513  410 3896]]\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0101: 0.8510531845699705\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0011: 0.8187822084354831\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0110: 0.87887126632311\\n\",\n+      \"Test accuracy: 0.7743533296642818\\n\",\n+      \"\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13996, 500), before header:(5991, 500)\\n\",\n+      \"Confusion matrix:\\n\",\n+      \"H V P M \\n\",\n+      \"[[4827    6   18  103]\\n\",\n+      \" [  29 2884 1144 1041]\\n\",\n+      \" [  48  699 3765  462]\\n\",\n+      \" [ 151  509  420 3881]]\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0101: 0.8492019812878371\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0011: 0.8142292490118577\\n\",\n+      \"Estimated bit prediction accuracy given mapping 0110: 0.8732676239555711\\n\",\n+      \"Test accuracy: 0.768349427127633\\n\",\n+      \"\\n\",\n+      \"\\n\",\n+      \"\\n\",\n+      \"created a json file of the test accuracies at /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/result_vary_raining_data_20220705-1112.json\\n\",\n+      \"------------- dataset 0: FPGA2.5cm with max_train_files=18 ----------------------------------\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13996, 500), before header:(5991, 500)\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13996, 500), before header:(5991, 500)\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13996, 500), before header:(5991, 500)\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13996, 500), before header:(5991, 500)\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13996, 500), before header:(5991, 500)\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13996, 500), before header:(5991, 500)\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13996, 500), before header:(5991, 500)\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13996, 500), before header:(5991, 500)\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13996, 500), before header:(5991, 500)\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13996, 500), before header:(5991, 500)\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13996, 500), before header:(5992, 500)\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13996, 500), before header:(5992, 500)\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13996, 500), before header:(5991, 500)\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13996, 500), before header:(5991, 500)\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13996, 500), before header:(5991, 500)\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13996, 500), before header:(5991, 500)\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13996, 500), before header:(5991, 500)\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13996, 500), before header:(5991, 500)\\n\",\n+      \"Model: \\\"sequential_16\\\"\\n\",\n+      \"_________________________________________________________________\\n\",\n+      \"Layer (type)                 Output Shape              Param #   \\n\",\n+      \"=================================================================\\n\",\n+      \"reshape_16 (Reshape)         (None, 500, 1)            0         \\n\",\n+      \"_________________________________________________________________\\n\",\n+      \"gaussian_noise_16 (GaussianN (None, 500, 1)            0         \\n\",\n+      \"_________________________________________________________________\\n\",\n+      \"conv1d_48 (Conv1D)           (None, 500, 13)           52        \\n\",\n+      \"_________________________________________________________________\\n\",\n+      \"max_pooling1d_48 (MaxPooling (None, 250, 13)           0         \\n\",\n+      \"_________________________________________________________________\\n\",\n+      \"spatial_dropout1d_48 (Spatia (None, 250, 13)           0         \\n\",\n+      \"_________________________________________________________________\\n\",\n+      \"batch_normalization_48 (Batc (None, 250, 13)           52        \\n\",\n+      \"_________________________________________________________________\\n\",\n+      \"conv1d_49 (Conv1D)           (None, 250, 118)          23128     \\n\",\n+      \"_________________________________________________________________\\n\",\n+      \"max_pooling1d_49 (MaxPooling (None, 250, 118)          0         \\n\",\n+      \"_________________________________________________________________\\n\",\n+      \"spatial_dropout1d_49 (Spatia (None, 250, 118)          0         \\n\",\n+      \"_________________________________________________________________\\n\",\n+      \"batch_normalization_49 (Batc (None, 250, 118)          472       \\n\",\n+      \"_________________________________________________________________\\n\",\n+      \"conv1d_50 (Conv1D)           (None, 250, 100)          59100     \\n\",\n+      \"_________________________________________________________________\\n\",\n+      \"max_pooling1d_50 (MaxPooling (None, 62, 100)           0         \\n\",\n+      \"_________________________________________________________________\\n\",\n+      \"batch_normalization_50 (Batc (None, 62, 100)           400       \\n\",\n+      \"_________________________________________________________________\\n\",\n+      \"spatial_dropout1d_50 (Spatia (None, 62, 100)           0         \\n\",\n+      \"_________________________________________________________________\\n\",\n+      \"flatten_16 (Flatten)         (None, 6200)              0         \\n\",\n+      \"_________________________________________________________________\\n\",\n+      \"dense_32 (Dense)             (None, 224)               1389024   \\n\",\n+      \"_________________________________________________________________\\n\",\n+      \"dense_33 (Dense)             (None, 4)                 900       \\n\",\n+      \"=================================================================\\n\",\n+      \"Total params: 1,473,128\\n\",\n+      \"Trainable params: 1,472,666\\n\",\n+      \"Non-trainable params: 462\\n\",\n+      \"_________________________________________________________________\\n\",\n+      \"Epoch 1/15\\n\",\n+      \"2655/2655 [==============================] - 26s 9ms/step - loss: 0.7704 - accuracy: 0.6577 - val_loss: 0.6482 - val_accuracy: 0.7169\\n\",\n+      \"Epoch 2/15\\n\",\n+      \"2655/2655 [==============================] - 24s 9ms/step - loss: 0.6667 - accuracy: 0.7084 - val_loss: 0.6085 - val_accuracy: 0.7353\\n\",\n+      \"Epoch 3/15\\n\",\n+      \"2655/2655 [==============================] - 24s 9ms/step - loss: 0.6406 - accuracy: 0.7207 - val_loss: 0.5887 - val_accuracy: 0.7436\\n\",\n+      \"Epoch 4/15\\n\",\n+      \"2655/2655 [==============================] - 24s 9ms/step - loss: 0.6222 - accuracy: 0.7296 - val_loss: 0.5782 - val_accuracy: 0.7489\\n\",\n+      \"Epoch 5/15\\n\",\n+      \"2655/2655 [==============================] - 24s 9ms/step - loss: 0.6110 - accuracy: 0.7361 - val_loss: 0.5596 - val_accuracy: 0.7587\\n\",\n+      \"Epoch 6/15\\n\",\n+      \"2655/2655 [==============================] - 24s 9ms/step - loss: 0.5987 - accuracy: 0.7426 - val_loss: 0.5462 - val_accuracy: 0.7672\\n\",\n+      \"Epoch 7/15\\n\",\n+      \"2655/2655 [==============================] - 24s 9ms/step - loss: 0.5876 - accuracy: 0.7476 - val_loss: 0.5417 - val_accuracy: 0.7693\\n\",\n+      \"Epoch 8/15\\n\",\n+      \"2655/2655 [==============================] - 24s 9ms/step - loss: 0.5813 - accuracy: 0.7505 - val_loss: 0.5386 - val_accuracy: 0.7709\\n\",\n+      \"Epoch 9/15\\n\",\n+      \"2655/2655 [==============================] - 24s 9ms/step - loss: 0.5741 - accuracy: 0.7542 - val_loss: 0.5313 - val_accuracy: 0.7728\\n\",\n+      \"Epoch 10/15\\n\",\n+      \"2655/2655 [==============================] - 24s 9ms/step - loss: 0.5699 - accuracy: 0.7562 - val_loss: 0.5264 - val_accuracy: 0.7757\\n\",\n+      \"Epoch 11/15\\n\",\n+      \"2655/2655 [==============================] - 24s 9ms/step - loss: 0.5648 - accuracy: 0.7585 - val_loss: 0.5230 - val_accuracy: 0.7750\\n\",\n+      \"Epoch 12/15\\n\",\n+      \"2655/2655 [==============================] - 24s 9ms/step - loss: 0.5611 - accuracy: 0.7603 - val_loss: 0.5205 - val_accuracy: 0.7790\\n\",\n+      \"Epoch 13/15\\n\",\n+      \" 505/2655 [====>.........................] - ETA: 19s - loss: 0.5619 - accuracy: 0.7614\"\n+     ]\n+    }\n+   ],\n    \"source\": [\n     \"git_sha1, git_diff = get_repo_sha1_and_diff(search_parent_directories=True)\\n\",\n     \"result_file_path = os.path.join(data_directory, f\\\"result_vary_raining_data_{datetime.datetime.now().strftime('%Y%m%d-%H%M')}.json\\\")\\n\",\n\n---", "paper/Visualize_Results_Vary_Train_Data.ipynb\n=======================================================\nlhs: 100644 | a385c1dc2f547584376ec5d5a73ddef362ad00ac\nrhs: 100644 | 5e8a069f095e95fca99cc92e64ef86573d2428d4\n---@@ -21,7 +21,7 @@\n   },\n   {\n    \"cell_type\": \"code\",\n-   \"execution_count\": 89,\n+   \"execution_count\": 3,\n    \"id\": \"6d344711-3707-40af-9763-afd5e0f7bf17\",\n    \"metadata\": {},\n    \"outputs\": [],\n@@ -70,7 +70,7 @@\n     \"\\n\",\n     \"    ax.legend()\\n\",\n     \"    ax.set_ylabel(\\\"Accuracy (%)\\\")\\n\",\n-    \"    ax.set_xlabel(\\\"Distance (cm)\\\")\\n\",\n+    \"    ax.set_xlabel(\\\"Number of measurements\\\")\\n\",\n     \"    ax.set_title(title)\\n\",\n     \"    if target_png_path:\\n\",\n     \"        plt.savefig(target_png_path)\\n\",\n@@ -86,24 +86,36 @@\n   },\n   {\n    \"cell_type\": \"code\",\n-   \"execution_count\": 90,\n+   \"execution_count\": 4,\n    \"id\": \"ca1fe49b-f77b-4422-a172-7eb144577936\",\n    \"metadata\": {},\n    \"outputs\": [],\n    \"source\": [\n     \"def load_plotinfo_from_file(json_path):\\n\",\n-    \"    with open(os.path.join(path), 'r') as file:\\n\",\n+    \"    with open(json_path, 'r') as file:\\n\",\n     \"        json_contents = json.load(file)\\n\",\n-    \"        dict_test_accuracies = json_contents[\\\"test_accuracies\\\"]\\n\",\n-    \"        dict_val_accuracies = json_contents[\\\"validation_accuracies\\\"]\\n\",\n-    \"        try:\\n\",\n-    \"            n_classes = json_contents['n_classes']\\n\",\n-    \"        except:\\n\",\n-    \"            print(f\\\"Warning. Failed to interpret n_classes from json file! Set to default.\\\")\\n\",\n-    \"            n_classes = 0\\n\",\n-    \"        guessing_level_percent = 50 if n_classes == 2 else 25\\n\",\n+    \"          \\n\",\n+    \"    return json_contents\"\n+   ]\n+  },\n+  {\n+   \"cell_type\": \"code\",\n+   \"execution_count\": 5,\n+   \"id\": \"3ad46a0a-51fb-411f-a8da-cc6efed3ea36\",\n+   \"metadata\": {},\n+   \"outputs\": [],\n+   \"source\": [\n+    \"def plotinfo_from_dict(json_contents):\\n\",\n+    \"    dict_test_accuracies = json_contents[\\\"test_accuracies\\\"]\\n\",\n+    \"    dict_val_accuracies = json_contents[\\\"validation_accuracies\\\"]\\n\",\n+    \"    try:\\n\",\n+    \"        n_classes = json_contents['n_classes']\\n\",\n+    \"    except:\\n\",\n+    \"        print(f\\\"Warning. Failed to interpret n_classes from json file! Set to default.\\\")\\n\",\n+    \"        n_classes = 0\\n\",\n+    \"    guessing_level_percent = 50 if n_classes == 2 else 25\\n\",\n     \"\\n\",\n-    \"    title = f\\\"Information in the Distance ({n_classes} classes) from {path}\\\"\\n\",\n+    \"    title = f\\\"Advantage of more training data ({n_classes} classes) from {path}\\\"\\n\",\n     \"    return dict_test_accuracies, dict_val_accuracies, guessing_level_percent, title\"\n    ]\n   },\n@@ -117,7 +129,7 @@\n   },\n   {\n    \"cell_type\": \"code\",\n-   \"execution_count\": 93,\n+   \"execution_count\": 6,\n    \"id\": \"301626aa-b0b7-46a7-861c-6144a1d446e8\",\n    \"metadata\": {},\n    \"outputs\": [\n@@ -126,30 +138,27 @@\n      \"output_type\": \"stream\",\n      \"text\": [\n       \"Warning. Failed to interpret n_classes from json file! Set to default.\\n\",\n-      \"distance=array([ 2.,  3.,  4.,  5.,  6.,  7.,  8.,  9., 10., 11., 12., 13., 14.,\\n\",\n-      \"       15.]), accuracy=array([[54.37534397, 52.61156694, 53.84499925, 54.60049032, 54.68054235],\\n\",\n-      \"       [55.57612448, 55.65339204, 56.00140091, 56.41667084, 55.56611798],\\n\",\n-      \"       [55.96637815, 55.47328397, 56.67183669, 55.94136189, 56.10146595],\\n\",\n-      \"       [56.95201881, 56.91915149, 57.65247411, 57.59243508, 57.5073798 ],\\n\",\n-      \"       [57.58242858, 57.32939764, 57.94266273, 58.14779607, 58.12277981],\\n\",\n-      \"       [58.1127733 , 58.0648389 , 58.46300095, 58.87326762, 58.81823185],\\n\",\n-      \"       [58.91329364, 58.8903342 , 59.44363836, 59.08340421, 59.31355381],\\n\",\n-      \"       [58.76819933, 59.02541525, 59.82888878, 58.70315705, 59.53870016],\\n\",\n-      \"       [59.01335868, 58.69521713, 59.35357983, 58.99334567, 59.29854405],\\n\",\n-      \"       [58.63811477, 58.92035221, 59.773853  , 58.80322209, 59.4186221 ],\\n\",\n-      \"       [59.59873918, 59.38062838, 59.90393756, 59.78385951, 59.54370341],\\n\",\n-      \"       [59.35858308, 59.08545127, 59.56871967, 59.13843999, 59.25351478],\\n\",\n-      \"       [59.20848552, 58.6151691 , 60.17911643, 60.02901886, 60.05403512],\\n\",\n-      \"       [59.56371642, 59.4506704 , 60.25916846, 59.93395707, 60.14409366]])\\n\",\n-      \"distance=array([ 2.,  3.,  4.,  5.,  6.,  7.,  8.,  9., 10., 11., 12., 13., 14.,\\n\",\n-      \"       15.]), accuracy=array([55.3309679 , 56.76689744, 57.81758428, 59.02836919, 59.3685925 ,\\n\",\n-      \"       60.0990653 , 60.63941717, 60.98464131, 61.11472249, 61.35488153,\\n\",\n-      \"       62.05533743, 62.20043302, 61.92525029, 62.46560216])\\n\"\n+      \"distance=array([ 2.,  3.,  4.,  5.,  6.,  7.,  8.,  9., 10., 11., 12., 13., 14.]), accuracy=array([[71.06619303, 70.53231939, 70.59588733, 71.12623205, 70.6409166 ],\\n\",\n+      \"       [71.7166158 , 71.42785671, 71.85170361, 72.45209386, 72.09185971],\\n\",\n+      \"       [73.03247111, 72.19331599, 72.85235403, 73.55280933, 73.05748737],\\n\",\n+      \"       [74.31330365, 74.06944166, 74.37834592, 74.80862561, 74.29829389],\\n\",\n+      \"       [74.3183069 , 73.82429458, 74.31330365, 74.84364837, 74.04312803],\\n\",\n+      \"       [74.60349227, 74.76485892, 74.44839145, 75.11382399, 74.73858008],\\n\",\n+      \"       [75.78425977, 75.31518911, 75.73422725, 76.83994596, 76.05943864],\\n\",\n+      \"       [74.62850853, 74.58975385, 74.40336219, 75.15885325, 74.64852154],\\n\",\n+      \"       [75.63416221, 75.05503302, 75.41902236, 76.14949717, 76.06944514],\\n\",\n+      \"       [76.324611  , 75.94056434, 76.0844549 , 76.70485816, 76.17951669],\\n\",\n+      \"       [75.63416221, 74.69981989, 75.2689248 , 76.00440286, 75.32396057],\\n\",\n+      \"       [76.60479312, 75.91054633, 76.40466303, 77.0450793 , 76.34462401],\\n\",\n+      \"       [76.25956872, 75.94556734, 76.04442888, 76.58978336, 76.34962726]])\\n\",\n+      \"distance=array([ 2.,  3.,  4.,  5.,  6.,  7.,  8.,  9., 10., 11., 12., 13., 14.]), accuracy=array([71.81668282, 72.26697206, 73.62785935, 75.26892424, 75.27893186,\\n\",\n+      \"       75.71921945, 76.74488425, 75.82929134, 76.74488425, 77.3853004 ,\\n\",\n+      \"       76.52474046, 77.91564465, 77.47035623])\\n\"\n      ]\n     },\n     {\n      \"data\": {\n-      \"image/png\": \"\\n\",\n+      \"image/png\": \"\\n\",\n       \"text/plain\": [\n        \"<Figure size 1440x1080 with 1 Axes>\"\n       ]\n@@ -162,8 +171,8 @@\n    ],\n    \"source\": [\n     \"#path = \\\"/project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/Distance_precise/test_accuracy_20220331-1436.json\\\"\\n\",\n-    \"path = './test_accuracy_20220704-1426.json'\\n\",\n-    \"dict_test_accuracies, dict_val_accuracies, guessing_level_percent1, title1 = load_plotinfo_from_file(path)\\n\",\n+    \"path = '/project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/result_vary_raining_data_20220705-1112.json'\\n\",\n+    \"dict_test_accuracies, dict_val_accuracies, guessing_level_percent1, title1 = plotinfo_from_dict(load_plotinfo_from_file(path))\\n\",\n     \"\\n\",\n     \"fig, ax = plt.subplots()\\n\",\n     \"show_result_distance(*convert_data(dict_test_accuracies), \\n\",\n@@ -183,7 +192,7 @@\n   },\n   {\n    \"cell_type\": \"code\",\n-   \"execution_count\": 92,\n+   \"execution_count\": 7,\n    \"id\": \"9b1c2ac3-dce9-449f-a4c5-cc3f4dab0e72\",\n    \"metadata\": {},\n    \"outputs\": [\n@@ -192,7 +201,8 @@\n      \"output_type\": \"stream\",\n      \"text\": [\n       \"Warning. Failed to interpret n_classes from json file! Set to default.\\n\",\n-      \"distance=array([ 2.,  3.,  4.,  5.,  6.,  7.,  8.,  9., 10., 11., 12., 13., 14.]), accuracy=array([[54.37534397, 52.61156694, 53.84499925, 54.60049032, 54.68054235],\\n\",\n+      \"distance=array([ 2.,  3.,  4.,  5.,  6.,  7.,  8.,  9., 10., 11., 12., 13., 14.,\\n\",\n+      \"       15.]), accuracy=array([[54.37534397, 52.61156694, 53.84499925, 54.60049032, 54.68054235],\\n\",\n       \"       [55.57612448, 55.65339204, 56.00140091, 56.41667084, 55.56611798],\\n\",\n       \"       [55.96637815, 55.47328397, 56.67183669, 55.94136189, 56.10146595],\\n\",\n       \"       [56.95201881, 56.91915149, 57.65247411, 57.59243508, 57.5073798 ],\\n\",\n@@ -204,32 +214,42 @@\n       \"       [58.63811477, 58.92035221, 59.773853  , 58.80322209, 59.4186221 ],\\n\",\n       \"       [59.59873918, 59.38062838, 59.90393756, 59.78385951, 59.54370341],\\n\",\n       \"       [59.35858308, 59.08545127, 59.56871967, 59.13843999, 59.25351478],\\n\",\n-      \"       [59.20848552, 58.6151691 , 60.17911643, 60.02901886, 60.05403512]])\\n\",\n-      \"distance=array([ 2.,  3.,  4.,  5.,  6.,  7.,  8.,  9., 10., 11., 12., 13., 14.]), accuracy=array([55.3309679 , 56.76689744, 57.81758428, 59.02836919, 59.3685925 ,\\n\",\n+      \"       [59.20848552, 58.6151691 , 60.17911643, 60.02901886, 60.05403512],\\n\",\n+      \"       [59.56371642, 59.4506704 , 60.25916846, 59.93395707, 60.14409366]])\\n\",\n+      \"distance=array([ 2.,  3.,  4.,  5.,  6.,  7.,  8.,  9., 10., 11., 12., 13., 14.,\\n\",\n+      \"       15.]), accuracy=array([55.3309679 , 56.76689744, 57.81758428, 59.02836919, 59.3685925 ,\\n\",\n       \"       60.0990653 , 60.63941717, 60.98464131, 61.11472249, 61.35488153,\\n\",\n-      \"       62.05533743, 62.20043302, 61.92525029])\\n\",\n-      \"Warning. Failed to interpret n_classes from json file! Set to default.\\n\",\n-      \"distance=array([ 2.,  3.,  4.,  5.,  6.,  7.,  8.,  9., 10., 11., 12., 13., 14.]), accuracy=array([[52.669235  , 51.49589754, 52.13388703, 52.59418622, 52.52914394],\\n\",\n-      \"       [53.93005454, 54.19251551, 54.94071146, 54.36033422, 54.41036674],\\n\",\n-      \"       [53.88502527, 53.8773264 , 54.51543503, 54.51043178, 54.66052934],\\n\",\n-      \"       [56.07644969, 56.1186712 , 56.2115375 , 56.25656677, 56.4416871 ],\\n\",\n-      \"       [56.71686596, 56.08865319, 56.73687897, 57.06709361, 57.20718467],\\n\",\n-      \"       [58.13278631, 57.38443066, 58.27788062, 58.30790014, 58.80322209],\\n\",\n-      \"       [57.28223345, 56.78407044, 57.35728223, 57.14714564, 57.10711963],\\n\",\n-      \"       [58.42297493, 58.63017811, 59.6387652 , 58.97333267, 58.89328063],\\n\",\n-      \"       [57.29724321, 57.09425655, 57.41732126, 57.1521489 , 56.91699605],\\n\",\n-      \"       [58.02771802, 58.38002802, 58.7081603 , 58.14279282, 58.77320258],\\n\",\n-      \"       [58.83324161, 58.39503702, 59.31355381, 58.94331315, 59.18346926],\\n\",\n-      \"       [58.04773103, 57.7646588 , 58.71816681, 58.42297493, 58.69315055],\\n\",\n-      \"       [59.11342373, 58.59015409, 59.81387902, 59.43363186, 59.82888878]])\\n\",\n-      \"distance=array([ 2.,  3.,  4.,  5.,  6.,  7.,  8.,  9., 10., 11., 12., 13., 14.]), accuracy=array([52.55416036, 54.59048152, 55.36598563, 57.59243369, 57.61744976,\\n\",\n-      \"       59.35858488, 58.23785663, 59.76384878, 58.60309005, 59.82888937,\\n\",\n-      \"       60.43928266, 59.83889699, 60.63941717])\\n\"\n+      \"       62.05533743, 62.20043302, 61.92525029, 62.46560216])\\n\",\n+      \"distance=array([ 2.,  3.,  4.,  5.,  6.,  7.,  8.,  9., 10., 11., 12., 13., 14.,\\n\",\n+      \"       15., 16., 17., 18., 19., 20.]), accuracy=array([[52.26897483, 50.94056434, 51.85370491, 52.15390004, 51.88372442],\\n\",\n+      \"       [51.63856507, 50.51030618, 51.36838945, 51.27833092, 51.46345124],\\n\",\n+      \"       [52.67924151, 51.96117671, 52.52914394, 52.74428378, 52.66423175],\\n\",\n+      \"       [52.75429029, 52.87172303, 53.29464152, 52.75929354, 52.57917646],\\n\",\n+      \"       [55.71121229, 54.94296578, 55.43103017, 55.85130335, 56.15650173],\\n\",\n+      \"       [56.07644969, 56.20872524, 56.73187572, 56.23155051, 56.27657978],\\n\",\n+      \"       [55.65617651, 55.13307985, 55.68619603, 55.53109521, 55.68619603],\\n\",\n+      \"       [56.62680742, 56.26876126, 56.98704158, 57.01706109, 57.18216841],\\n\",\n+      \"       [56.2115375 , 55.62337402, 56.44669035, 56.46170011, 56.52173913],\\n\",\n+      \"       [56.59678791, 56.29877927, 56.74688548, 56.63181068, 56.67683995],\\n\",\n+      \"       [56.52674238, 55.563338  , 56.32160905, 56.37664482, 56.46670336],\\n\",\n+      \"       [56.39665783, 56.58895337, 56.27157652, 56.38665132, 56.47170661],\\n\",\n+      \"       [57.48736679, 56.24374625, 57.34227248, 57.51238305, 57.51238305],\\n\",\n+      \"       [56.8069245 , 56.18371023, 56.72687247, 57.07710012, 56.76689848],\\n\",\n+      \"       [57.32225947, 57.70462277, 58.20783509, 57.71751639, 58.36293591],\\n\",\n+      \"       [58.19782859, 57.86471883, 58.60309201, 58.38795217, 58.75819283],\\n\",\n+      \"       [58.3529294 , 57.93476086, 58.37294241, 58.583079  , 58.78320909],\\n\",\n+      \"       [58.15780257, 57.79967981, 58.79821884, 58.65812778, 58.77820583],\\n\",\n+      \"       [58.78821234, 58.20992596, 59.20348226, 58.92330015, 58.96332616]])\\n\",\n+      \"distance=array([ 2.,  3.,  4.,  5.,  6.,  7.,  8.,  9., 10., 11., 12., 13., 14.,\\n\",\n+      \"       15., 16., 17., 18., 19., 20.]), accuracy=array([52.47410536, 51.6535759 , 53.55981588, 53.02446485, 56.6868484 ,\\n\",\n+      \"       57.35228062, 56.41166568, 58.03272128, 56.83193803, 57.94766545,\\n\",\n+      \"       57.54740834, 57.36228824, 58.67813826, 57.75253773, 59.2885375 ,\\n\",\n+      \"       60.15910506, 60.2391541 , 60.36423445, 60.74948907])\\n\"\n      ]\n     },\n     {\n      \"data\": {\n-      \"image/png\": \"\\n\",\n+      \"image/png\": \"\\n\",\n       \"text/plain\": [\n        \"<Figure size 1440x1080 with 1 Axes>\"\n       ]\n@@ -246,18 +266,22 @@\n     \"\\n\",\n     \"json_paths = [\\n\",\n     \"    './test_accuracy_20220704-1426.json', \\n\",\n-    \"    './test_accuracy_20220704-1335.json',\\n\",\n+    \"    '/project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/result_vary_raining_data_20220704-1657.json',\\n\",\n     \"]\\n\",\n     \"\\n\",\n-    \"for path in json_paths:\\n\",\n-    \"    dict_test_accuracies, dict_val_accuracies, guessing_level_percent, title = load_plotinfo_from_file(path)\\n\",\n+    \"info_dicts = [load_plotinfo_from_file(path) for path in json_paths]\\n\",\n+    \"info_dicts[1].update(load_plotinfo_from_file(\\n\",\n+    \"    \\\"/project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev130meas2.5cm/result_vary_raining_data_20220704-1556.json\\\"))\\n\",\n+    \"\\n\",\n+    \"for info_dict in info_dicts:\\n\",\n+    \"    dict_test_accuracies, dict_val_accuracies, guessing_level_percent, title = plotinfo_from_dict(info_dict)\\n\",\n     \"    show_result_distance(*convert_data(dict_test_accuracies), \\n\",\n     \"                         target_png_path='./tmptmp2.png', title=\\\"Multiple\\\",\\n\",\n-    \"                         guessing_level_percent=guessing_level_percent, ax=ax, label=f\\\"Test acc. {path}\\\")\\n\",\n+    \"                         guessing_level_percent=guessing_level_percent, ax=ax, label=f\\\"Test acc.\\\")\\n\",\n     \"    \\n\",\n     \"    show_result_distance(*convert_data(dict_val_accuracies), \\n\",\n     \"                         target_png_path='./tmptmp2.png', title=\\\"Multiple\\\",\\n\",\n-    \"                         guessing_level_percent=guessing_level_percent, ax=ax, label=f\\\"Validation acc. {path}\\\")\"\n+    \"                         guessing_level_percent=guessing_level_percent, ax=ax, label=f\\\"Validation acc.\\\")\"\n    ]\n   },\n   {\n\n---", "paper/hyperparameter_optimization.ipynb\n=======================================================\nlhs: 100644 | 3b9ea856d14d5aa4939b74a7e86e89a9ae569756\nrhs: 100644 | 5d85ffbc1d2e1f4de8667bfdd4ca44c278125952\n---@@ -95,6 +95,21 @@\n   {\n    \"cell_type\": \"code\",\n    \"execution_count\": 3,\n+   \"id\": \"089eb97b-4ab7-4b98-9454-fc1233287b3d\",\n+   \"metadata\": {},\n+   \"outputs\": [],\n+   \"source\": [\n+    \"debug=False\\n\",\n+    \"use_new_data=False\\n\",\n+    \"num_test_data_sets = 10\\n\",\n+    \"offset_header_rev1 = -200\\n\",\n+    \"offset_header_rev2 = 200\\n\",\n+    \"offset_header = offset_header_rev2\"\n+   ]\n+  },\n+  {\n+   \"cell_type\": \"code\",\n+   \"execution_count\": 4,\n    \"id\": \"50bb7930-54d1-4e34-8d58-c03ace7beb35\",\n    \"metadata\": {},\n    \"outputs\": [\n@@ -102,7 +117,7 @@\n      \"name\": \"stdout\",\n      \"output_type\": \"stream\",\n      \"text\": [\n-      \"Evaluating datasets: ['7.0cm', '00cm', '1.0cm', '2.0cm', '3.0cm', '4.0cm']\\n\"\n+      \"Evaluating datasets: ['FPGA2.5cm']\\n\"\n      ]\n     }\n    ],\n@@ -118,7 +133,7 @@\n     \"    \\\"do_normalize_data\\\": True,  # Use if data should be normalized to have zero mean and std 1\\n\",\n     \"}\\n\",\n     \"\\n\",\n-    \"data_directory=\\\"/project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/Distance_precise\\\"\\n\",\n+    \"data_directory=\\\"/project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev230meas2.5cm/\\\"\\n\",\n     \"\\n\",\n     \"# Array of the different distances in cm (folder names) used for the measurement\\n\",\n     \"# position = [dirname for dirname in os.listdir(data_directory) \\n\",\n@@ -131,7 +146,7 @@\n   },\n   {\n    \"cell_type\": \"code\",\n-   \"execution_count\": 4,\n+   \"execution_count\": 5,\n    \"id\": \"ee7cba52-820e-4058-a241-93c19f3ae772\",\n    \"metadata\": {},\n    \"outputs\": [],\n@@ -144,57 +159,104 @@\n   },\n   {\n    \"cell_type\": \"code\",\n-   \"execution_count\": 5,\n+   \"execution_count\": 8,\n    \"id\": \"af969409-2b19-4c66-a5c6-55badf735280\",\n    \"metadata\": {},\n    \"outputs\": [\n+    {\n+     \"name\": \"stderr\",\n+     \"output_type\": \"stream\",\n+     \"text\": [\n+      \"/home/a/A.Baliuka/emissionsecurity/paper/preprocessing.py:184: RuntimeWarning: divide by zero encountered in double_scalars\\n\",\n+      \"  if np.max(correlation) / np.median(correlation) < 2.:\\n\"\n+     ]\n+    },\n     {\n      \"name\": \"stdout\",\n      \"output_type\": \"stream\",\n      \"text\": [\n-      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/Distance_precise/1.0cm\\n\",\n-      \"\\n\",\n-      \"Found the data synchronization at 799864\\n\",\n-      \"\\n\",\n-      \"Cut data in pieces with these shapes: after header:(11896, 500), before header:(7992, 500)\\n\",\n-      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/Distance_precise/1.0cm\\n\",\n-      \"\\n\",\n-      \"Found the data synchronization at 799864\\n\",\n-      \"\\n\",\n-      \"Cut data in pieces with these shapes: after header:(83272, 500), before header:(55944, 500)\\n\",\n-      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/Distance_precise/1.0cm\\n\",\n-      \"\\n\",\n-      \"Found the data synchronization at 799864\\n\",\n-      \"\\n\",\n-      \"Cut data in pieces with these shapes: after header:(83272, 500), before header:(55944, 500)\\n\",\n-      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/Distance_precise/1.0cm\\n\",\n-      \"\\n\",\n-      \"Found the data synchronization at 799864\\n\",\n-      \"\\n\",\n-      \"Cut data in pieces with these shapes: after header:(83272, 500), before header:(55944, 500)\\n\",\n-      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/Distance_precise/1.0cm\\n\",\n-      \"\\n\",\n-      \"Found the data synchronization at 799864\\n\",\n-      \"\\n\",\n-      \"Cut data in pieces with these shapes: after header:(83272, 500), before header:(55944, 500)\\n\",\n-      \"(556864, 500)\\n\",\n-      \"(556864,)\\n\"\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev230meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(13994, 500), before header:(5894, 500)\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev230meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(41982, 500), before header:(17682, 500)\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev230meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(41982, 500), before header:(17682, 500)\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev230meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(41982, 500), before header:(17682, 500)\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev230meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(41982, 500), before header:(17682, 500)\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev230meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(41982, 500), before header:(17682, 500)\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev230meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(41982, 500), before header:(17682, 500)\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev230meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(41982, 500), before header:(17682, 500)\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev230meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(41982, 500), before header:(17682, 500)\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev230meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(41982, 500), before header:(17682, 500)\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev230meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(41982, 500), before header:(17682, 500)\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev230meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(41982, 500), before header:(17682, 500)\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev230meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(41982, 500), before header:(17682, 500)\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev230meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(41982, 500), before header:(17682, 500)\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev230meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(41982, 500), before header:(17682, 500)\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev230meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(41982, 500), before header:(17682, 500)\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev230meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(41982, 500), before header:(17682, 500)\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev230meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(41982, 500), before header:(17682, 500)\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev230meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(41982, 500), before header:(17682, 500)\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev230meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(41982, 500), before header:(17682, 500)\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev230meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(41982, 500), before header:(17682, 500)\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev230meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(41982, 500), before header:(17682, 500)\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev230meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(41982, 500), before header:(17682, 500)\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev230meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(41982, 500), before header:(17682, 500)\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev230meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(41982, 500), before header:(17682, 500)\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev230meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(41982, 500), before header:(17682, 500)\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev230meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(41982, 500), before header:(17682, 500)\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev230meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(41982, 500), before header:(17682, 500)\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev230meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(41982, 500), before header:(17682, 500)\\n\",\n+      \"Successfully loaded data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/DataForEmSecPaper/Rev230meas2.5cm/FPGA2.5cm\\n\",\n+      \"Cut data in pieces with these shapes: after header:(41982, 500), before header:(17682, 500)\\n\",\n+      \"(1730256, 500)\\n\",\n+      \"(1730256,)\\n\"\n      ]\n     },\n     {\n      \"name\": \"stderr\",\n      \"output_type\": \"stream\",\n      \"text\": [\n-      \"2022-03-30 11:16:03.135639: I tensorflow/core/platform/cpu_feature_guard.cc:142] This TensorFlow binary is optimized with oneAPI Deep Neural Network Library (oneDNN) to use the following CPU instructions in performance-critical operations:  SSE4.1 SSE4.2 AVX AVX2 FMA\\n\",\n+      \"2022-07-01 12:21:29.702352: I tensorflow/core/platform/cpu_feature_guard.cc:142] This TensorFlow binary is optimized with oneAPI Deep Neural Network Library (oneDNN) to use the following CPU instructions in performance-critical operations:  SSE4.1 SSE4.2 AVX AVX2 FMA\\n\",\n       \"To enable them in other operations, rebuild TensorFlow with the appropriate compiler flags.\\n\",\n-      \"2022-03-30 11:16:03.681481: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1510] Created device /job:localhost/replica:0/task:0/device:GPU:0 with 43630 MB memory:  -> device: 0, name: NVIDIA A40, pci bus id: 0000:01:00.0, compute capability: 8.6\\n\"\n+      \"2022-07-01 12:21:30.270916: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1510] Created device /job:localhost/replica:0/task:0/device:GPU:0 with 43614 MB memory:  -> device: 0, name: NVIDIA A40, pci bus id: 0000:81:00.0, compute capability: 8.6\\n\"\n      ]\n     }\n    ],\n    \"source\": [\n     \"training_data, training_labels, validation_data, validation_labels = pp.get_datasets(\\n\",\n-    \"    os.path.join(data_directory, position[2]), \\n\",\n-    \"    technical_details, data_augmentation_halflength=3,\\n\",\n+    \"    os.path.join(data_directory, position[0]), \\n\",\n+    \"    technical_details=technical_details,\\n\",\n+    \"    offset_header=offset_header,\\n\",\n+    \"    data_augmentation_halflength=1, \\n\",\n+    \"    debug=debug, \\n\",\n+    \"    force_create_npy_files=use_new_data\\n\",\n     \")\\n\",\n     \"\\n\",\n     \"print(training_data.shape)\\n\",\n@@ -211,7 +273,7 @@\n   },\n   {\n    \"cell_type\": \"code\",\n-   \"execution_count\": 6,\n+   \"execution_count\": 9,\n    \"id\": \"db20a227-a4fc-4745-9df5-a5a5ab640d0d\",\n    \"metadata\": {},\n    \"outputs\": [\n@@ -279,7 +341,7 @@\n   },\n   {\n    \"cell_type\": \"code\",\n-   \"execution_count\": 7,\n+   \"execution_count\": 10,\n    \"id\": \"87d2e9ca-1749-4d12-bb39-573ae2157753\",\n    \"metadata\": {},\n    \"outputs\": [],\n@@ -302,7 +364,7 @@\n   },\n   {\n    \"cell_type\": \"code\",\n-   \"execution_count\": 8,\n+   \"execution_count\": 11,\n    \"id\": \"36ca9e2d-ef5a-45db-ad7a-83d676246a65\",\n    \"metadata\": {},\n    \"outputs\": [\n@@ -347,56 +409,18 @@\n       \"Total params: 1,688,038\\n\",\n       \"Trainable params: 1,687,540\\n\",\n       \"Non-trainable params: 498\\n\",\n-      \"_________________________________________________________________\\n\",\n-      \"Successfully loaded test data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/Distance_precise/1.0cm\\n\",\n-      \"\\n\",\n-      \"Found the test data synchronization at 64\\n\",\n-      \"\\n\",\n-      \"prepared test data with shape: (19994, 500)\\n\"\n+      \"_________________________________________________________________\\n\"\n      ]\n     },\n     {\n-     \"name\": \"stderr\",\n-     \"output_type\": \"stream\",\n-     \"text\": [\n-      \"2022-03-30 11:16:08.813432: I tensorflow/compiler/mlir/mlir_graph_optimization_pass.cc:185] None of the MLIR Optimization Passes are enabled (registered 2)\\n\",\n-      \"2022-03-30 11:16:09.600153: I tensorflow/stream_executor/cuda/cuda_dnn.cc:369] Loaded cuDNN version 8201\\n\",\n-      \"2022-03-30 11:16:10.578419: I tensorflow/core/platform/default/subprocess.cc:304] Start cannot spawn child process: No such file or directory\\n\",\n-      \"2022-03-30 11:16:10.579219: I tensorflow/core/platform/default/subprocess.cc:304] Start cannot spawn child process: No such file or directory\\n\",\n-      \"2022-03-30 11:16:10.579242: W tensorflow/stream_executor/gpu/asm_compiler.cc:77] Couldn't get ptxas version string: Internal: Couldn't invoke ptxas --version\\n\",\n-      \"2022-03-30 11:16:10.580133: I tensorflow/core/platform/default/subprocess.cc:304] Start cannot spawn child process: No such file or directory\\n\",\n-      \"2022-03-30 11:16:10.580183: W tensorflow/stream_executor/gpu/redzone_allocator.cc:314] Internal: Failed to launch ptxas\\n\",\n-      \"Relying on driver to perform ptx compilation. \\n\",\n-      \"Modify $PATH to customize ptxas location.\\n\",\n-      \"This message will be only logged once.\\n\",\n-      \"2022-03-30 11:16:11.621361: I tensorflow/stream_executor/cuda/cuda_blas.cc:1760] TensorFloat-32 will be used for the matrix multiplication. This will only be logged once.\\n\"\n-     ]\n-    },\n-    {\n-     \"name\": \"stdout\",\n-     \"output_type\": \"stream\",\n-     \"text\": [\n-      \"Confusion matrix:\\n\",\n-      \"H V P M \\n\",\n-      \"[[2458    0    5    2]\\n\",\n-      \" [   3 1906   33  581]\\n\",\n-      \" [   3   40 2404   48]\\n\",\n-      \" [   2  476   34 2004]]\\n\",\n-      \"Test accuracy: 0.8772877287728773\\n\",\n-      \"0.8772877287728773\\n\",\n-      \"Successfully loaded test data from folder /project/ag-weinfurter/crypto/PhDs/Adomas/EmissionSecurityMeasuredData/Distance_precise/1.0cm\\n\",\n-      \"\\n\",\n-      \"Found the test data synchronization at 65\\n\",\n-      \"\\n\",\n-      \"prepared test data with shape: (19994, 500)\\n\",\n-      \"Confusion matrix:\\n\",\n-      \"H V P M \\n\",\n-      \"[[2456    1    5    3]\\n\",\n-      \" [   0 1892   31  600]\\n\",\n-      \" [   4   31 2424   36]\\n\",\n-      \" [   1  454   42 2019]]\\n\",\n-      \"Test accuracy: 0.8791879187918792\\n\",\n-      \"0.8791879187918792\\n\"\n+     \"ename\": \"AttributeError\",\n+     \"evalue\": \"module 'preprocessing' has no attribute 'load_test_data_synchronized'\",\n+     \"output_type\": \"error\",\n+     \"traceback\": [\n+      \"\\u001b[0;31m---------------------------------------------------------------------------\\u001b[0m\",\n+      \"\\u001b[0;31mAttributeError\\u001b[0m                            Traceback (most recent call last)\",\n+      \"\\u001b[0;32m/tmp/ipykernel_682/1305286116.py\\u001b[0m in \\u001b[0;36m<module>\\u001b[0;34m\\u001b[0m\\n\\u001b[1;32m      2\\u001b[0m \\u001b[0;34m\\u001b[0m\\u001b[0m\\n\\u001b[1;32m      3\\u001b[0m \\u001b[0;32mfor\\u001b[0m \\u001b[0mj\\u001b[0m \\u001b[0;32min\\u001b[0m \\u001b[0mrange\\u001b[0m\\u001b[0;34m(\\u001b[0m\\u001b[0;36m0\\u001b[0m\\u001b[0;34m,\\u001b[0m\\u001b[0;36m2\\u001b[0m\\u001b[0;34m)\\u001b[0m\\u001b[0;34m:\\u001b[0m\\u001b[0;34m\\u001b[0m\\u001b[0;34m\\u001b[0m\\u001b[0m\\n\\u001b[0;32m----> 4\\u001b[0;31m     test_data, test_labels = pp.load_test_data_synchronized(\\n\\u001b[0m\\u001b[1;32m      5\\u001b[0m         \\u001b[0mos\\u001b[0m\\u001b[0;34m.\\u001b[0m\\u001b[0mpath\\u001b[0m\\u001b[0;34m.\\u001b[0m\\u001b[0mjoin\\u001b[0m\\u001b[0;34m(\\u001b[0m\\u001b[0mdata_directory\\u001b[0m\\u001b[0;34m,\\u001b[0m \\u001b[0mposition\\u001b[0m\\u001b[0;34m[\\u001b[0m\\u001b[0;36m2\\u001b[0m\\u001b[0;34m]\\u001b[0m\\u001b[0;34m)\\u001b[0m\\u001b[0;34m,\\u001b[0m\\u001b[0;34m\\u001b[0m\\u001b[0;34m\\u001b[0m\\u001b[0m\\n\\u001b[1;32m      6\\u001b[0m         \\u001b[0mclock_freq\\u001b[0m\\u001b[0;34m=\\u001b[0m\\u001b[0mtechnical_details\\u001b[0m\\u001b[0;34m[\\u001b[0m\\u001b[0;34m\\\"clock_freq\\\"\\u001b[0m\\u001b[0;34m]\\u001b[0m\\u001b[0;34m,\\u001b[0m\\u001b[0;34m\\u001b[0m\\u001b[0;34m\\u001b[0m\\u001b[0m\\n\",\n+      \"\\u001b[0;31mAttributeError\\u001b[0m: module 'preprocessing' has no attribute 'load_test_data_synchronized'\"\n      ]\n     }\n    ],\n@@ -423,7 +447,7 @@\n   },\n   {\n    \"cell_type\": \"code\",\n-   \"execution_count\": 9,\n+   \"execution_count\": null,\n    \"id\": \"417d23fc-dcf8-42b9-99ef-6fc7d775c4b3\",\n    \"metadata\": {},\n    \"outputs\": [\n@@ -431,138 +455,13 @@\n      \"name\": \"stdout\",\n      \"output_type\": \"stream\",\n      \"text\": [\n-      \"prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 0 samples, test_accuracy=0.8791879187918792. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 1 samples, test_accuracy=0.8807880788078808. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 2 samples, test_accuracy=0.8781878187818782. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 3 samples, test_accuracy=0.8778877887788779. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 4 samples, test_accuracy=0.8735873587358736. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 5 samples, test_accuracy=0.8692869286928693. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 6 samples, test_accuracy=0.8593859385938594. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 7 samples, test_accuracy=0.8510851085108511. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 8 samples, test_accuracy=0.8343834383438344. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 9 samples, test_accuracy=0.8227822782278228. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 10 samples, test_accuracy=0.8014801480148015. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 11 samples, test_accuracy=0.7728772877287728. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 12 samples, test_accuracy=0.7338733873387339. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 13 samples, test_accuracy=0.686068606860686. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 14 samples, test_accuracy=0.6310631063106311. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 15 samples, test_accuracy=0.572957295729573. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 16 samples, test_accuracy=0.5141514151415142. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 17 samples, test_accuracy=0.45854585458545855. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 18 samples, test_accuracy=0.39893989398939894. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 19 samples, test_accuracy=0.2946294629462946. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 20 samples, test_accuracy=0.3029302930293029. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 21 samples, test_accuracy=0.2552255225522552. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 22 samples, test_accuracy=0.26242624262426245. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 23 samples, test_accuracy=0.2585258525852585. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 24 samples, test_accuracy=0.2548254825482548. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 25 samples, test_accuracy=0.2538253825382538. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 26 samples, test_accuracy=0.25822582258225824. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 27 samples, test_accuracy=0.2557255725572557. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 28 samples, test_accuracy=0.31683168316831684. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 29 samples, test_accuracy=0.3161316131613161. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 30 samples, test_accuracy=0.3175317531753175. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 31 samples, test_accuracy=0.3181318131813181. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 32 samples, test_accuracy=0.32143214321432145. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 33 samples, test_accuracy=0.3215321532153215. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 34 samples, test_accuracy=0.32323232323232326. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 35 samples, test_accuracy=0.3209320932093209. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 36 samples, test_accuracy=0.26512651265126513. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 37 samples, test_accuracy=0.2672267226722672. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 38 samples, test_accuracy=0.27002700270027. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 39 samples, test_accuracy=0.27542754275427545. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 40 samples, test_accuracy=0.2556255625562556. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 41 samples, test_accuracy=0.2583258325832583. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 42 samples, test_accuracy=0.2621262126212621. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 43 samples, test_accuracy=0.2538253825382538. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 44 samples, test_accuracy=0.25682568256825683. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 45 samples, test_accuracy=0.2565256525652565. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 46 samples, test_accuracy=0.2532253225322532. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 47 samples, test_accuracy=0.25842584258425844. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 48 samples, test_accuracy=0.25742574257425743. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 49 samples, test_accuracy=0.25292529252925294. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 50 samples, test_accuracy=0.2625262526252625. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 51 samples, test_accuracy=0.2654265426542654. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 52 samples, test_accuracy=0.2648264826482648. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 53 samples, test_accuracy=0.2542254225422542. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 54 samples, test_accuracy=0.2544254425442544. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 55 samples, test_accuracy=0.25642564256425643. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 56 samples, test_accuracy=0.25882588258825884. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 57 samples, test_accuracy=0.2526252625262526. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 58 samples, test_accuracy=0.25662566256625663. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 59 samples, test_accuracy=0.25072507250725073. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 60 samples, test_accuracy=0.25412541254125415. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 61 samples, test_accuracy=0.25742574257425743. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 62 samples, test_accuracy=0.2518251825182518. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 63 samples, test_accuracy=0.2569256925692569. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 64 samples, test_accuracy=0.2571257125712571. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 65 samples, test_accuracy=0.2536253625362536. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 66 samples, test_accuracy=0.28172817281728174. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 67 samples, test_accuracy=0.2796279627962796. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 68 samples, test_accuracy=0.2554255425542554. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 69 samples, test_accuracy=0.2611261126112611. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 70 samples, test_accuracy=0.25272527252725274. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 71 samples, test_accuracy=0.2644264426442644. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 72 samples, test_accuracy=0.2538253825382538. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 73 samples, test_accuracy=0.2571257125712571. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 74 samples, test_accuracy=0.25512551255125515. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 75 samples, test_accuracy=0.2538253825382538. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 76 samples, test_accuracy=0.25252525252525254. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 77 samples, test_accuracy=0.2524252425242524. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 78 samples, test_accuracy=0.25862586258625864. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 79 samples, test_accuracy=0.26572657265726574. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 80 samples, test_accuracy=0.2723272327232723. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 81 samples, test_accuracy=0.28392839283928395. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 82 samples, test_accuracy=0.3013301330133013. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 83 samples, test_accuracy=0.3361336133613361. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 84 samples, test_accuracy=0.39403940394039405. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 85 samples, test_accuracy=0.47024702470247026. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 86 samples, test_accuracy=0.25332533253325334. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 87 samples, test_accuracy=0.2571257125712571. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 88 samples, test_accuracy=0.7174717471747175. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 89 samples, test_accuracy=0.7701770177017702. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 90 samples, test_accuracy=0.8061806180618062. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 91 samples, test_accuracy=0.8306830683068307. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 92 samples, test_accuracy=0.8438843884388438. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 93 samples, test_accuracy=0.8577857785778578. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 94 samples, test_accuracy=0.8647864786478647. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 95 samples, test_accuracy=0.866986698669867. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 96 samples, test_accuracy=0.8691869186918691. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 97 samples, test_accuracy=0.876987698769877. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 98 samples, test_accuracy=0.8755875587558756. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 99 samples, test_accuracy=0.8809880988098809. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 100 samples, test_accuracy=0.8791879187918792. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 101 samples, test_accuracy=0.8807880788078808. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 102 samples, test_accuracy=0.8781878187818782. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 103 samples, test_accuracy=0.8778877887788779. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 104 samples, test_accuracy=0.8735873587358736. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 105 samples, test_accuracy=0.8692869286928693. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 106 samples, test_accuracy=0.8593859385938594. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 107 samples, test_accuracy=0.8510851085108511. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 108 samples, test_accuracy=0.8343834383438344. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 109 samples, test_accuracy=0.8227822782278228. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 110 samples, test_accuracy=0.8014801480148015. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 111 samples, test_accuracy=0.7728772877287728. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 112 samples, test_accuracy=0.7338733873387339. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 113 samples, test_accuracy=0.686068606860686. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 114 samples, test_accuracy=0.6310631063106311. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 115 samples, test_accuracy=0.572957295729573. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 116 samples, test_accuracy=0.5141514151415142. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 117 samples, test_accuracy=0.45854585458545855. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 118 samples, test_accuracy=0.39893989398939894. prepared test data with shape: (19994, 500)\\n\",\n-      \" at displacement 119 samples, test_accuracy=0.2946294629462946. BEST Test accuracy after trying all displacements: 0.8810 at displacement 99 \\n\"\n+      \"WARNING:tensorflow:Unresolved object in checkpoint: (root).optimizer.iter\\n\",\n+      \"WARNING:tensorflow:Unresolved object in checkpoint: (root).optimizer.beta_1\\n\",\n+      \"WARNING:tensorflow:Unresolved object in checkpoint: (root).optimizer.beta_2\\n\",\n+      \"WARNING:tensorflow:Unresolved object in checkpoint: (root).optimizer.decay\\n\",\n+      \"WARNING:tensorflow:Unresolved object in checkpoint: (root).optimizer.learning_rate\\n\",\n+      \"WARNING:tensorflow:A checkpoint was restored (e.g. tf.train.Checkpoint.restore or tf.keras.Model.load_weights) but not all checkpointed values were used. See above for specific issues. Use expect_partial() on the load status object, e.g. tf.train.Checkpoint.restore(...).expect_partial(), to silence these warnings, or use assert_consumed() to make the check explicit. See https://www.tensorflow.org/guide/checkpoint#loading_mechanics for details.\\n\"\n      ]\n-    },\n-    {\n-     \"data\": {\n-      \"text/plain\": [\n-       \"0.8809880988098809\"\n-      ]\n-     },\n-     \"execution_count\": 9,\n-     \"metadata\": {},\n-     \"output_type\": \"execute_result\"\n     }\n    ],\n    \"source\": [\n\n---"]}